
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftNOTleftDEQUALDIFERENTMINORMINOREQUALGREATERGREATEREQUALleftPLUSLESSleftBYDIVIDEDMODULrightUMENOSAND BRACKETC BRACKETO BY COMMA CONSOLE DEQUAL DIFERENT DIVIDED DOT DOUBLEDOT EQUAL FALSE FLOAT GREATER GREATEREQUAL ID LESS LLAVEA LLAVEC LOG MINOR MINOREQUAL MODUL NOT NUMBER OR PARA PARC PLUS QUESTIONM RBOOLEAN RBREAK RCONST RCONTINUE RELSE RFLOAT RFOR RIF RINDEXOF RJOIN RLENGTH RNUMBER RPOP RPUSH RRETURN RSTRING RVAR RWHILE SEMICOLON STRING TRUEstart    : instrucciones instrucciones    : instrucciones instruccion\n                        | instruccion instruccion  : print\n                    | declarevar\n                    | assignVar\n                    | declareArray\n                    | assingArray\n                    | arrayFuncs\n                    | if_else\n                    | ternario\n                    | while_\n                    | for_\n                    | transferprint    : CONSOLE DOT LOG PARA expression PARCdeclaration_type : RCONST\n                        | RVARdeclarevar   : declaration_type ID DOUBLEDOT type EQUAL expression\n                    | declaration_type ID EQUAL expression\n                    | declaration_type ID DOUBLEDOT typeassignVar    : ID EQUAL expression\n                    | ID PLUS EQUAL expression\n                    | ID LESS EQUAL expressiondeclareArray : declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC\n                    | declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression\n                    | declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETCassingArray : ID BRACKETO expression BRACKETC EQUAL expressionarrayFuncs   : ID DOT RPUSH PARA expression PARC\n                    | ID DOT RPOP PARA PARCif_else  : RIF PARA expression PARC LLAVEA instrucciones LLAVEC elseelse : RELSE LLAVEA instrucciones LLAVEC\n            | RELSE if_else\n            |ternario : expression QUESTIONM expression DOUBLEDOT expressionwhile_   : RWHILE PARA expression PARC LLAVEA instrucciones LLAVECfor_ : RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC\n            | RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVECtransfer : RBREAK\n                | RCONTINUE\n                | RRETURN\n                | RRETURN expressionexpression   : primitivo \n                    | aritmetica\n                    | relacional\n                    | logica\n                    | id_\n                    | arraysExpressionexpression_list  : expression_list COMMA expression\n                         | expressionid_  : ID\n            | ID BRACKETO expression BRACKETCaritmetica   : expression PLUS expression\n                    | expression BY expression\n                    | expression DIVIDED expression\n                    | expression LESS expression\n                    | expression MODUL expression\n                    | LESS expression %prec UMENOSrelacional   : expression DEQUAL expression\n                    | expression DIFERENT expression\n                    | expression MINOR expression\n                    | expression MINOREQUAL expression\n                    | expression GREATER expression\n                    | expression GREATEREQUAL expressionlogica   : boolean AND boolean\n                | boolean OR boolean\n                | NOT booleanprimitivo    : NUMBER\n                    | FLOAT\n                    | STRING\n                    | booleanarraysExpression : ID DOT RPOP PARA PARC\n                        | ID DOT RINDEXOF PARA expression PARC\n                        | ID DOT RJOIN PARA PARC\n                        | ID DOT RLENGTH PARA PARCboolean  : TRUE\n                | FALSEtype     : RNUMBER\n                | RFLOAT\n                | RSTRING\n                | RBOOLEAN'
    
_lr_action_items = {'CONSOLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,23,24,25,26,27,30,31,32,33,34,35,36,37,39,40,41,61,62,66,69,72,73,74,75,76,77,78,79,80,81,82,85,100,101,104,105,106,107,108,109,110,111,125,130,132,133,134,136,137,141,142,144,145,146,147,148,149,153,154,158,159,163,166,167,170,172,176,177,178,179,180,181,182,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-44,-46,-38,-39,-40,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-2,-57,-50,-41,-66,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,-21,-64,-65,-20,-77,-78,-79,-80,-19,-22,-23,-34,-29,-73,-74,-51,15,15,-15,-18,-27,-28,-72,-71,15,15,-33,-35,-25,-30,-26,15,-32,-24,15,-31,15,15,15,15,-36,-37,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,17,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,56,59,61,62,63,64,66,69,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,94,99,100,101,102,103,104,105,106,107,108,109,110,111,113,115,122,125,126,128,130,132,133,134,136,137,141,142,144,145,146,147,148,149,150,152,153,154,157,158,159,163,166,167,170,171,172,176,177,178,179,180,181,182,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,55,62,-44,-46,-38,-39,62,-16,-17,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-2,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-57,-50,62,62,-41,-66,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,62,-21,62,62,62,123,-64,-65,62,62,-20,-77,-78,-79,-80,-19,-22,-23,62,62,62,-34,62,62,-29,-73,-74,-51,18,18,-15,-18,-27,-28,-72,-71,18,18,156,62,-33,-35,62,-25,-30,-26,18,-32,-24,62,18,-31,18,18,18,18,-36,-37,]),'RIF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,23,24,25,26,27,30,31,32,33,34,35,36,37,39,40,41,61,62,66,69,72,73,74,75,76,77,78,79,80,81,82,85,100,101,104,105,106,107,108,109,110,111,125,130,132,133,134,136,137,141,142,144,145,146,147,148,149,153,154,158,159,160,163,166,167,170,172,176,177,178,179,180,181,182,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-44,-46,-38,-39,-40,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-2,-57,-50,-41,-66,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,-21,-64,-65,-20,-77,-78,-79,-80,-19,-22,-23,-34,-29,-73,-74,-51,20,20,-15,-18,-27,-28,-72,-71,20,20,-33,-35,-25,-30,20,-26,20,-32,-24,20,-31,20,20,20,20,-36,-37,]),'RWHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,23,24,25,26,27,30,31,32,33,34,35,36,37,39,40,41,61,62,66,69,72,73,74,75,76,77,78,79,80,81,82,85,100,101,104,105,106,107,108,109,110,111,125,130,132,133,134,136,137,141,142,144,145,146,147,148,149,153,154,158,159,163,166,167,170,172,176,177,178,179,180,181,182,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-44,-46,-38,-39,-40,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-2,-57,-50,-41,-66,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,-21,-64,-65,-20,-77,-78,-79,-80,-19,-22,-23,-34,-29,-73,-74,-51,21,21,-15,-18,-27,-28,-72,-71,21,21,-33,-35,-25,-30,-26,21,-32,-24,21,-31,21,21,21,21,-36,-37,]),'RFOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,23,24,25,26,27,30,31,32,33,34,35,36,37,39,40,41,61,62,66,69,72,73,74,75,76,77,78,79,80,81,82,85,100,101,104,105,106,107,108,109,110,111,125,130,132,133,134,136,137,141,142,144,145,146,147,148,149,153,154,158,159,163,166,167,170,172,176,177,178,179,180,181,182,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-44,-46,-38,-39,-40,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-2,-57,-50,-41,-66,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,-21,-64,-65,-20,-77,-78,-79,-80,-19,-22,-23,-34,-29,-73,-74,-51,22,22,-15,-18,-27,-28,-72,-71,22,22,-33,-35,-25,-30,-26,22,-32,-24,22,-31,22,22,22,22,-36,-37,]),'RBREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,23,24,25,26,27,30,31,32,33,34,35,36,37,39,40,41,61,62,66,69,72,73,74,75,76,77,78,79,80,81,82,85,100,101,104,105,106,107,108,109,110,111,125,130,132,133,134,136,137,141,142,144,145,146,147,148,149,153,154,158,159,163,166,167,170,172,176,177,178,179,180,181,182,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-44,-46,-38,-39,-40,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-2,-57,-50,-41,-66,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,-21,-64,-65,-20,-77,-78,-79,-80,-19,-22,-23,-34,-29,-73,-74,-51,25,25,-15,-18,-27,-28,-72,-71,25,25,-33,-35,-25,-30,-26,25,-32,-24,25,-31,25,25,25,25,-36,-37,]),'RCONTINUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,23,24,25,26,27,30,31,32,33,34,35,36,37,39,40,41,61,62,66,69,72,73,74,75,76,77,78,79,80,81,82,85,100,101,104,105,106,107,108,109,110,111,125,130,132,133,134,136,137,141,142,144,145,146,147,148,149,153,154,158,159,163,166,167,170,172,176,177,178,179,180,181,182,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-44,-46,-38,-39,-40,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-2,-57,-50,-41,-66,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,-21,-64,-65,-20,-77,-78,-79,-80,-19,-22,-23,-34,-29,-73,-74,-51,26,26,-15,-18,-27,-28,-72,-71,26,26,-33,-35,-25,-30,-26,26,-32,-24,26,-31,26,26,26,26,-36,-37,]),'RRETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,23,24,25,26,27,30,31,32,33,34,35,36,37,39,40,41,61,62,66,69,72,73,74,75,76,77,78,79,80,81,82,85,100,101,104,105,106,107,108,109,110,111,125,130,132,133,134,136,137,141,142,144,145,146,147,148,149,153,154,158,159,163,166,167,170,172,176,177,178,179,180,181,182,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-44,-46,-38,-39,-40,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-2,-57,-50,-41,-66,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,-21,-64,-65,-20,-77,-78,-79,-80,-19,-22,-23,-34,-29,-73,-74,-51,27,27,-15,-18,-27,-28,-72,-71,27,27,-33,-35,-25,-30,-26,27,-32,-24,27,-31,27,27,27,27,-36,-37,]),'RCONST':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,23,24,25,26,27,30,31,32,33,34,35,36,37,39,40,41,61,62,65,66,69,72,73,74,75,76,77,78,79,80,81,82,85,100,101,104,105,106,107,108,109,110,111,125,130,132,133,134,136,137,141,142,144,145,146,147,148,149,153,154,158,159,163,166,167,170,172,176,177,178,179,180,181,182,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-44,-46,-38,-39,-40,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-2,-57,-50,28,-41,-66,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,-21,-64,-65,-20,-77,-78,-79,-80,-19,-22,-23,-34,-29,-73,-74,-51,28,28,-15,-18,-27,-28,-72,-71,28,28,-33,-35,-25,-30,-26,28,-32,-24,28,-31,28,28,28,28,-36,-37,]),'RVAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,23,24,25,26,27,30,31,32,33,34,35,36,37,39,40,41,61,62,65,66,69,72,73,74,75,76,77,78,79,80,81,82,85,100,101,104,105,106,107,108,109,110,111,125,130,132,133,134,136,137,141,142,144,145,146,147,148,149,153,154,158,159,163,166,167,170,172,176,177,178,179,180,181,182,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-44,-46,-38,-39,-40,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-2,-57,-50,29,-41,-66,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,-21,-64,-65,-20,-77,-78,-79,-80,-19,-22,-23,-34,-29,-73,-74,-51,29,29,-15,-18,-27,-28,-72,-71,29,29,-33,-35,-25,-30,-26,29,-32,-24,29,-31,29,29,29,29,-36,-37,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,23,24,25,26,27,30,31,32,33,34,35,36,37,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,56,59,61,62,63,64,66,69,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,94,100,101,102,103,104,105,106,107,108,109,110,111,113,115,122,125,126,128,130,132,133,134,136,137,141,142,144,145,146,147,148,149,152,153,154,157,158,159,163,166,167,170,171,172,176,177,178,179,180,181,182,],[34,34,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,34,-44,-46,-38,-39,34,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-2,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-57,-50,34,34,-41,-66,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,34,-21,34,34,34,-64,-65,34,34,-20,-77,-78,-79,-80,-19,-22,-23,34,34,34,-34,34,34,-29,-73,-74,-51,34,34,-15,-18,-27,-28,-72,-71,34,34,34,-33,-35,34,-25,-30,-26,34,-32,-24,34,34,-31,34,34,34,34,-36,-37,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,23,24,25,26,27,30,31,32,33,34,35,36,37,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,56,59,61,62,63,64,66,69,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,94,100,101,102,103,104,105,106,107,108,109,110,111,113,115,122,125,126,128,130,132,133,134,136,137,141,142,144,145,146,147,148,149,152,153,154,157,158,159,163,166,167,170,171,172,176,177,178,179,180,181,182,],[35,35,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,35,-44,-46,-38,-39,35,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-2,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-57,-50,35,35,-41,-66,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,35,-21,35,35,35,-64,-65,35,35,-20,-77,-78,-79,-80,-19,-22,-23,35,35,35,-34,35,35,-29,-73,-74,-51,35,35,-15,-18,-27,-28,-72,-71,35,35,35,-33,-35,35,-25,-30,-26,35,-32,-24,35,35,-31,35,35,35,35,-36,-37,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,23,24,25,26,27,30,31,32,33,34,35,36,37,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,56,59,61,62,63,64,66,69,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,94,100,101,102,103,104,105,106,107,108,109,110,111,113,115,122,125,126,128,130,132,133,134,136,137,141,142,144,145,146,147,148,149,152,153,154,157,158,159,163,166,167,170,171,172,176,177,178,179,180,181,182,],[36,36,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,36,-44,-46,-38,-39,36,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-2,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-57,-50,36,36,-41,-66,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,36,-21,36,36,36,-64,-65,36,36,-20,-77,-78,-79,-80,-19,-22,-23,36,36,36,-34,36,36,-29,-73,-74,-51,36,36,-15,-18,-27,-28,-72,-71,36,36,36,-33,-35,36,-25,-30,-26,36,-32,-24,36,36,-31,36,36,36,36,-36,-37,]),'LESS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,18,19,23,24,25,26,27,30,31,32,33,34,35,36,37,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,56,59,61,62,63,64,66,69,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,94,96,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,118,122,124,125,126,128,129,130,131,132,133,134,136,137,138,139,141,142,144,145,146,147,148,149,152,153,154,155,156,157,158,159,162,163,165,166,167,170,171,172,175,176,177,178,179,180,181,182,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,47,58,19,-44,-46,-38,-39,19,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-2,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-57,-50,19,19,47,-66,47,-52,-53,-54,-55,-56,47,47,47,47,47,47,19,47,19,19,47,19,47,47,-64,-65,19,19,-20,-77,-78,-79,-80,47,47,47,-51,19,19,47,19,47,47,19,19,47,-29,47,-73,-74,-51,19,19,-44,47,-15,47,47,-28,-72,-71,19,19,19,-33,-35,162,-50,19,47,-30,169,-26,47,19,-32,-24,19,19,47,-31,19,19,19,19,-36,-37,]),'NOT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,23,24,25,26,27,30,31,32,33,34,35,36,37,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,56,59,61,62,63,64,66,69,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,94,100,101,102,103,104,105,106,107,108,109,110,111,113,115,122,125,126,128,130,132,133,134,136,137,141,142,144,145,146,147,148,149,152,153,154,157,158,159,163,166,167,170,171,172,176,177,178,179,180,181,182,],[38,38,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,38,-44,-46,-38,-39,38,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-2,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-57,-50,38,38,-41,-66,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,38,-21,38,38,38,-64,-65,38,38,-20,-77,-78,-79,-80,-19,-22,-23,38,38,38,-34,38,38,-29,-73,-74,-51,38,38,-15,-18,-27,-28,-72,-71,38,38,38,-33,-35,38,-25,-30,-26,38,-32,-24,38,38,-31,38,38,38,38,-36,-37,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,56,59,61,62,63,64,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,94,100,101,102,103,104,105,106,107,108,109,110,111,113,115,122,125,126,128,130,132,133,134,136,137,141,142,144,145,146,147,148,149,152,153,154,157,158,159,163,166,167,170,171,172,176,177,178,179,180,181,182,],[39,39,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,39,-44,-46,-38,-39,39,-42,-43,-45,-47,-67,-68,-69,-70,39,-75,-76,-2,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-57,-50,39,39,-41,39,39,-66,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,39,-21,39,39,39,-64,-65,39,39,-20,-77,-78,-79,-80,-19,-22,-23,39,39,39,-34,39,39,-29,-73,-74,-51,39,39,-15,-18,-27,-28,-72,-71,39,39,39,-33,-35,39,-25,-30,-26,39,-32,-24,39,39,-31,39,39,39,39,-36,-37,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,56,59,61,62,63,64,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,94,100,101,102,103,104,105,106,107,108,109,110,111,113,115,122,125,126,128,130,132,133,134,136,137,141,142,144,145,146,147,148,149,152,153,154,157,158,159,163,166,167,170,171,172,176,177,178,179,180,181,182,],[40,40,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,40,-44,-46,-38,-39,40,-42,-43,-45,-47,-67,-68,-69,-70,40,-75,-76,-2,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-57,-50,40,40,-41,40,40,-66,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,40,-21,40,40,40,-64,-65,40,40,-20,-77,-78,-79,-80,-19,-22,-23,40,40,40,-34,40,40,-29,-73,-74,-51,40,40,-15,-18,-27,-28,-72,-71,40,40,40,-33,-35,40,-25,-30,-26,40,-32,-24,40,40,-31,40,40,40,40,-36,-37,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,23,24,25,26,27,30,31,32,33,34,35,36,37,39,40,41,61,62,66,69,72,73,74,75,76,77,78,79,80,81,82,85,100,101,104,105,106,107,108,109,110,111,125,130,132,133,134,141,142,144,145,146,147,153,154,158,159,163,167,170,176,181,182,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-44,-46,-38,-39,-40,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-2,-57,-50,-41,-66,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,-21,-64,-65,-20,-77,-78,-79,-80,-19,-22,-23,-34,-29,-73,-74,-51,-15,-18,-27,-28,-72,-71,-33,-35,-25,-30,-26,-32,-24,-31,-36,-37,]),'LLAVEC':([3,4,5,6,7,8,9,10,11,12,13,14,23,24,25,26,27,30,31,32,33,34,35,36,37,39,40,41,61,62,66,69,72,73,74,75,76,77,78,79,80,81,82,85,100,101,104,105,106,107,108,109,110,111,125,130,132,133,134,141,142,144,145,146,147,148,149,153,154,158,159,163,167,170,172,176,179,180,181,182,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-44,-46,-38,-39,-40,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-2,-57,-50,-41,-66,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,-21,-64,-65,-20,-77,-78,-79,-80,-19,-22,-23,-34,-29,-73,-74,-51,-15,-18,-27,-28,-72,-71,153,154,-33,-35,-25,-30,-26,-32,-24,176,-31,181,182,-36,-37,]),'DOT':([15,18,62,],[42,60,95,]),'QUESTIONM':([16,18,23,24,30,31,32,33,34,35,36,37,39,40,61,62,69,72,73,74,75,76,77,78,79,80,81,82,100,101,112,130,132,133,134,146,147,],[43,-50,-44,-46,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-57,-50,-66,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,-64,-65,-51,-71,-73,-74,-51,-72,-71,]),'PLUS':([16,18,23,24,30,31,32,33,34,35,36,37,39,40,61,62,66,69,71,72,73,74,75,76,77,78,79,80,81,82,85,88,96,97,100,101,109,110,111,112,118,124,125,129,130,131,132,133,134,138,139,142,144,146,147,155,156,158,161,165,175,],[44,57,-44,-46,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-57,-50,44,-66,44,-52,-53,-54,-55,-56,44,44,44,44,44,44,44,44,44,44,-64,-65,44,44,44,-51,44,44,44,44,-71,44,-73,-74,-51,-44,44,44,44,-72,-71,161,-50,44,168,44,44,]),'BY':([16,18,23,24,30,31,32,33,34,35,36,37,39,40,61,62,66,69,71,72,73,74,75,76,77,78,79,80,81,82,85,88,96,97,100,101,109,110,111,112,118,124,125,129,130,131,132,133,134,138,139,142,144,146,147,158,165,175,],[45,-50,-44,-46,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-57,-50,45,-66,45,45,-53,-54,45,-56,45,45,45,45,45,45,45,45,45,45,-64,-65,45,45,45,-51,45,45,45,45,-71,45,-73,-74,-51,-44,45,45,45,-72,-71,45,45,45,]),'DIVIDED':([16,18,23,24,30,31,32,33,34,35,36,37,39,40,61,62,66,69,71,72,73,74,75,76,77,78,79,80,81,82,85,88,96,97,100,101,109,110,111,112,118,124,125,129,130,131,132,133,134,138,139,142,144,146,147,158,165,175,],[46,-50,-44,-46,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-57,-50,46,-66,46,46,-53,-54,46,-56,46,46,46,46,46,46,46,46,46,46,-64,-65,46,46,46,-51,46,46,46,46,-71,46,-73,-74,-51,-44,46,46,46,-72,-71,46,46,46,]),'MODUL':([16,18,23,24,30,31,32,33,34,35,36,37,39,40,61,62,66,69,71,72,73,74,75,76,77,78,79,80,81,82,85,88,96,97,100,101,109,110,111,112,118,124,125,129,130,131,132,133,134,138,139,142,144,146,147,158,165,175,],[48,-50,-44,-46,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-57,-50,48,-66,48,48,-53,-54,48,-56,48,48,48,48,48,48,48,48,48,48,-64,-65,48,48,48,-51,48,48,48,48,-71,48,-73,-74,-51,-44,48,48,48,-72,-71,48,48,48,]),'DEQUAL':([16,18,23,24,30,31,32,33,34,35,36,37,39,40,61,62,66,69,71,72,73,74,75,76,77,78,79,80,81,82,85,88,96,97,100,101,109,110,111,112,118,124,125,129,130,131,132,133,134,138,139,142,144,146,147,158,165,175,],[49,-50,-44,-46,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-57,-50,49,-66,49,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,49,49,49,49,-64,-65,49,49,49,-51,49,49,49,49,-71,49,-73,-74,-51,-44,49,49,49,-72,-71,49,49,49,]),'DIFERENT':([16,18,23,24,30,31,32,33,34,35,36,37,39,40,61,62,66,69,71,72,73,74,75,76,77,78,79,80,81,82,85,88,96,97,100,101,109,110,111,112,118,124,125,129,130,131,132,133,134,138,139,142,144,146,147,158,165,175,],[50,-50,-44,-46,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-57,-50,50,-66,50,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,50,50,50,50,-64,-65,50,50,50,-51,50,50,50,50,-71,50,-73,-74,-51,-44,50,50,50,-72,-71,50,50,50,]),'MINOR':([16,18,23,24,30,31,32,33,34,35,36,37,39,40,61,62,66,69,71,72,73,74,75,76,77,78,79,80,81,82,85,88,96,97,100,101,109,110,111,112,118,124,125,129,130,131,132,133,134,138,139,142,144,146,147,158,165,175,],[51,-50,-44,-46,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-57,-50,51,-66,51,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,51,51,51,51,-64,-65,51,51,51,-51,51,51,51,51,-71,51,-73,-74,-51,-44,51,51,51,-72,-71,51,51,51,]),'MINOREQUAL':([16,18,23,24,30,31,32,33,34,35,36,37,39,40,61,62,66,69,71,72,73,74,75,76,77,78,79,80,81,82,85,88,96,97,100,101,109,110,111,112,118,124,125,129,130,131,132,133,134,138,139,142,144,146,147,158,165,175,],[52,-50,-44,-46,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-57,-50,52,-66,52,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,52,52,52,52,-64,-65,52,52,52,-51,52,52,52,52,-71,52,-73,-74,-51,-44,52,52,52,-72,-71,52,52,52,]),'GREATER':([16,18,23,24,30,31,32,33,34,35,36,37,39,40,61,62,66,69,71,72,73,74,75,76,77,78,79,80,81,82,85,88,96,97,100,101,109,110,111,112,118,124,125,129,130,131,132,133,134,138,139,142,144,146,147,158,165,175,],[53,-50,-44,-46,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-57,-50,53,-66,53,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,53,53,53,53,-64,-65,53,53,53,-51,53,53,53,53,-71,53,-73,-74,-51,-44,53,53,53,-72,-71,53,53,53,]),'GREATEREQUAL':([16,18,23,24,30,31,32,33,34,35,36,37,39,40,61,62,66,69,71,72,73,74,75,76,77,78,79,80,81,82,85,88,96,97,100,101,109,110,111,112,118,124,125,129,130,131,132,133,134,138,139,142,144,146,147,158,165,175,],[54,-50,-44,-46,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-57,-50,54,-66,54,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,54,54,54,54,-64,-65,54,54,54,-51,54,54,54,54,-71,54,-73,-74,-51,-44,54,54,54,-72,-71,54,54,54,]),'EQUAL':([18,55,57,58,104,105,106,107,108,112,123,143,151,],[56,84,86,87,126,-77,-78,-79,-80,128,84,152,126,]),'BRACKETO':([18,62,104,105,106,107,108,152,156,],[59,94,127,-77,-78,-79,-80,157,94,]),'PARA':([20,21,22,70,89,90,91,92,93,119,],[63,64,65,102,113,114,115,116,117,135,]),'DOUBLEDOT':([23,24,30,31,32,33,34,35,36,37,39,40,55,61,62,69,71,72,73,74,75,76,77,78,79,80,81,82,100,101,123,132,133,134,146,147,],[-44,-46,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,83,-57,-50,-66,103,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,-64,-65,140,-73,-74,-51,-72,-71,]),'BRACKETC':([23,24,30,31,32,33,34,35,36,37,39,40,61,62,69,72,73,74,75,76,77,78,79,80,81,82,88,100,101,118,127,132,133,134,146,147,157,164,165,175,],[-44,-46,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-57,-50,-66,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,112,-64,-65,134,143,-73,-74,-51,-72,-71,163,170,-49,-48,]),'PARC':([23,24,30,31,32,33,34,35,36,37,39,40,61,62,69,72,73,74,75,76,77,78,79,80,81,82,96,97,100,101,114,116,117,124,129,131,132,133,134,135,146,147,168,169,],[-44,-46,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-57,-50,-66,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,120,121,-64,-65,130,132,133,141,145,146,-73,-74,-51,147,-72,-71,173,174,]),'SEMICOLON':([23,24,30,31,32,33,34,35,36,37,39,40,61,62,69,72,73,74,75,76,77,78,79,80,81,82,98,100,101,105,106,107,108,109,132,133,134,138,142,146,147,151,],[-44,-46,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-57,-50,-66,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,122,-64,-65,-77,-78,-79,-80,-19,-73,-74,-51,150,-18,-72,-71,-20,]),'COMMA':([23,24,30,31,32,33,34,35,36,37,39,40,61,62,69,72,73,74,75,76,77,78,79,80,81,82,100,101,132,133,134,146,147,164,165,175,],[-44,-46,-42,-43,-45,-47,-67,-68,-69,-70,-75,-76,-57,-50,-66,-52,-53,-54,-55,-56,-58,-59,-60,-61,-62,-63,-64,-65,-73,-74,-51,-72,-71,171,-49,-48,]),'AND':([37,39,40,],[67,-75,-76,]),'OR':([37,39,40,],[68,-75,-76,]),'LOG':([42,],[70,]),'RPUSH':([60,],[89,]),'RPOP':([60,95,],[90,119,]),'RINDEXOF':([60,95,],[91,91,]),'RJOIN':([60,95,],[92,92,]),'RLENGTH':([60,95,],[93,93,]),'RNUMBER':([83,140,],[105,105,]),'RFLOAT':([83,140,],[106,106,]),'RSTRING':([83,140,],[107,107,]),'RBOOLEAN':([83,140,],[108,108,]),'LLAVEA':([120,121,160,173,174,],[136,137,166,177,178,]),'RELSE':([153,],[160,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'instrucciones':([0,136,137,166,177,178,],[2,148,149,172,179,180,]),'instruccion':([0,2,136,137,148,149,166,172,177,178,179,180,],[3,41,3,3,41,41,3,41,3,3,41,41,]),'print':([0,2,136,137,148,149,166,172,177,178,179,180,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'declarevar':([0,2,65,136,137,148,149,166,172,177,178,179,180,],[5,5,98,5,5,5,5,5,5,5,5,5,5,]),'assignVar':([0,2,136,137,148,149,166,172,177,178,179,180,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'declareArray':([0,2,136,137,148,149,166,172,177,178,179,180,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'assingArray':([0,2,136,137,148,149,166,172,177,178,179,180,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'arrayFuncs':([0,2,136,137,148,149,166,172,177,178,179,180,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'if_else':([0,2,136,137,148,149,160,166,172,177,178,179,180,],[10,10,10,10,10,10,167,10,10,10,10,10,10,]),'ternario':([0,2,136,137,148,149,166,172,177,178,179,180,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'while_':([0,2,136,137,148,149,166,172,177,178,179,180,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'for_':([0,2,136,137,148,149,166,172,177,178,179,180,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'transfer':([0,2,136,137,148,149,166,172,177,178,179,180,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'expression':([0,2,19,27,43,44,45,46,47,48,49,50,51,52,53,54,56,59,63,64,84,86,87,94,102,103,113,115,122,126,128,136,137,148,149,152,157,166,171,172,177,178,179,180,],[16,16,61,66,71,72,73,74,75,76,77,78,79,80,81,82,85,88,96,97,109,110,111,118,124,125,129,131,139,142,144,16,16,16,16,158,165,16,175,16,16,16,16,16,]),'declaration_type':([0,2,65,136,137,148,149,166,172,177,178,179,180,],[17,17,99,17,17,17,17,17,17,17,17,17,17,]),'relacional':([0,2,19,27,43,44,45,46,47,48,49,50,51,52,53,54,56,59,63,64,84,86,87,94,102,103,113,115,122,126,128,136,137,148,149,152,157,166,171,172,177,178,179,180,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,138,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'id_':([0,2,19,27,43,44,45,46,47,48,49,50,51,52,53,54,56,59,63,64,84,86,87,94,102,103,113,115,122,126,128,136,137,148,149,150,152,157,166,171,172,177,178,179,180,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,155,24,24,24,24,24,24,24,24,24,]),'primitivo':([0,2,19,27,43,44,45,46,47,48,49,50,51,52,53,54,56,59,63,64,84,86,87,94,102,103,113,115,122,126,128,136,137,148,149,152,157,166,171,172,177,178,179,180,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'aritmetica':([0,2,19,27,43,44,45,46,47,48,49,50,51,52,53,54,56,59,63,64,84,86,87,94,102,103,113,115,122,126,128,136,137,148,149,152,157,166,171,172,177,178,179,180,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'logica':([0,2,19,27,43,44,45,46,47,48,49,50,51,52,53,54,56,59,63,64,84,86,87,94,102,103,113,115,122,126,128,136,137,148,149,152,157,166,171,172,177,178,179,180,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'arraysExpression':([0,2,19,27,43,44,45,46,47,48,49,50,51,52,53,54,56,59,63,64,84,86,87,94,102,103,113,115,122,126,128,136,137,148,149,152,157,166,171,172,177,178,179,180,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'boolean':([0,2,19,27,38,43,44,45,46,47,48,49,50,51,52,53,54,56,59,63,64,67,68,84,86,87,94,102,103,113,115,122,126,128,136,137,148,149,152,157,166,171,172,177,178,179,180,],[37,37,37,37,69,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,100,101,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'type':([83,140,],[104,151,]),'else':([153,],[159,]),'expression_list':([157,],[164,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> instrucciones','start',1,'p_start','grammar.py',158),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','grammar.py',165),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','grammar.py',166),
  ('instruccion -> print','instruccion',1,'p_instruccion','grammar.py',175),
  ('instruccion -> declarevar','instruccion',1,'p_instruccion','grammar.py',176),
  ('instruccion -> assignVar','instruccion',1,'p_instruccion','grammar.py',177),
  ('instruccion -> declareArray','instruccion',1,'p_instruccion','grammar.py',178),
  ('instruccion -> assingArray','instruccion',1,'p_instruccion','grammar.py',179),
  ('instruccion -> arrayFuncs','instruccion',1,'p_instruccion','grammar.py',180),
  ('instruccion -> if_else','instruccion',1,'p_instruccion','grammar.py',181),
  ('instruccion -> ternario','instruccion',1,'p_instruccion','grammar.py',182),
  ('instruccion -> while_','instruccion',1,'p_instruccion','grammar.py',183),
  ('instruccion -> for_','instruccion',1,'p_instruccion','grammar.py',184),
  ('instruccion -> transfer','instruccion',1,'p_instruccion','grammar.py',185),
  ('print -> CONSOLE DOT LOG PARA expression PARC','print',6,'p_print','grammar.py',190),
  ('declaration_type -> RCONST','declaration_type',1,'p_declaration_type','grammar.py',195),
  ('declaration_type -> RVAR','declaration_type',1,'p_declaration_type','grammar.py',196),
  ('declarevar -> declaration_type ID DOUBLEDOT type EQUAL expression','declarevar',6,'p_declarevar','grammar.py',201),
  ('declarevar -> declaration_type ID EQUAL expression','declarevar',4,'p_declarevar','grammar.py',202),
  ('declarevar -> declaration_type ID DOUBLEDOT type','declarevar',4,'p_declarevar','grammar.py',203),
  ('assignVar -> ID EQUAL expression','assignVar',3,'p_assignVar','grammar.py',218),
  ('assignVar -> ID PLUS EQUAL expression','assignVar',4,'p_assignVar','grammar.py',219),
  ('assignVar -> ID LESS EQUAL expression','assignVar',4,'p_assignVar','grammar.py',220),
  ('declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC','declareArray',10,'p_declareArray','grammar.py',231),
  ('declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression','declareArray',8,'p_declareArray','grammar.py',232),
  ('declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC','declareArray',9,'p_declareArray','grammar.py',233),
  ('assingArray -> ID BRACKETO expression BRACKETC EQUAL expression','assingArray',6,'p_assingArray','grammar.py',247),
  ('arrayFuncs -> ID DOT RPUSH PARA expression PARC','arrayFuncs',6,'p_arrayFuncs','grammar.py',253),
  ('arrayFuncs -> ID DOT RPOP PARA PARC','arrayFuncs',5,'p_arrayFuncs','grammar.py',254),
  ('if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else','if_else',8,'p_if_else','grammar.py',261),
  ('else -> RELSE LLAVEA instrucciones LLAVEC','else',4,'p_else','grammar.py',267),
  ('else -> RELSE if_else','else',2,'p_else','grammar.py',268),
  ('else -> <empty>','else',0,'p_else','grammar.py',269),
  ('ternario -> expression QUESTIONM expression DOUBLEDOT expression','ternario',5,'p_ternario','grammar.py',279),
  ('while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC','while_',7,'p_while','grammar.py',285),
  ('for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC','for_',13,'p_for','grammar.py',291),
  ('for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC','for_',13,'p_for','grammar.py',292),
  ('transfer -> RBREAK','transfer',1,'p_transfer','grammar.py',299),
  ('transfer -> RCONTINUE','transfer',1,'p_transfer','grammar.py',300),
  ('transfer -> RRETURN','transfer',1,'p_transfer','grammar.py',301),
  ('transfer -> RRETURN expression','transfer',2,'p_transfer','grammar.py',302),
  ('expression -> primitivo','expression',1,'p_expression','grammar.py',323),
  ('expression -> aritmetica','expression',1,'p_expression','grammar.py',324),
  ('expression -> relacional','expression',1,'p_expression','grammar.py',325),
  ('expression -> logica','expression',1,'p_expression','grammar.py',326),
  ('expression -> id_','expression',1,'p_expression','grammar.py',327),
  ('expression -> arraysExpression','expression',1,'p_expression','grammar.py',328),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','grammar.py',333),
  ('expression_list -> expression','expression_list',1,'p_expression_list','grammar.py',334),
  ('id_ -> ID','id_',1,'p_id_','grammar.py',343),
  ('id_ -> ID BRACKETO expression BRACKETC','id_',4,'p_id_','grammar.py',344),
  ('aritmetica -> expression PLUS expression','aritmetica',3,'p_aritmetica','grammar.py',354),
  ('aritmetica -> expression BY expression','aritmetica',3,'p_aritmetica','grammar.py',355),
  ('aritmetica -> expression DIVIDED expression','aritmetica',3,'p_aritmetica','grammar.py',356),
  ('aritmetica -> expression LESS expression','aritmetica',3,'p_aritmetica','grammar.py',357),
  ('aritmetica -> expression MODUL expression','aritmetica',3,'p_aritmetica','grammar.py',358),
  ('aritmetica -> LESS expression','aritmetica',2,'p_aritmetica','grammar.py',359),
  ('relacional -> expression DEQUAL expression','relacional',3,'p_relacional','grammar.py',385),
  ('relacional -> expression DIFERENT expression','relacional',3,'p_relacional','grammar.py',386),
  ('relacional -> expression MINOR expression','relacional',3,'p_relacional','grammar.py',387),
  ('relacional -> expression MINOREQUAL expression','relacional',3,'p_relacional','grammar.py',388),
  ('relacional -> expression GREATER expression','relacional',3,'p_relacional','grammar.py',389),
  ('relacional -> expression GREATEREQUAL expression','relacional',3,'p_relacional','grammar.py',390),
  ('logica -> boolean AND boolean','logica',3,'p_logica','grammar.py',414),
  ('logica -> boolean OR boolean','logica',3,'p_logica','grammar.py',415),
  ('logica -> NOT boolean','logica',2,'p_logica','grammar.py',416),
  ('primitivo -> NUMBER','primitivo',1,'p_primitivo','grammar.py',429),
  ('primitivo -> FLOAT','primitivo',1,'p_primitivo','grammar.py',430),
  ('primitivo -> STRING','primitivo',1,'p_primitivo','grammar.py',431),
  ('primitivo -> boolean','primitivo',1,'p_primitivo','grammar.py',432),
  ('arraysExpression -> ID DOT RPOP PARA PARC','arraysExpression',5,'p_arraysExpression','grammar.py',446),
  ('arraysExpression -> ID DOT RINDEXOF PARA expression PARC','arraysExpression',6,'p_arraysExpression','grammar.py',447),
  ('arraysExpression -> ID DOT RJOIN PARA PARC','arraysExpression',5,'p_arraysExpression','grammar.py',448),
  ('arraysExpression -> ID DOT RLENGTH PARA PARC','arraysExpression',5,'p_arraysExpression','grammar.py',449),
  ('boolean -> TRUE','boolean',1,'p_boolean','grammar.py',456),
  ('boolean -> FALSE','boolean',1,'p_boolean','grammar.py',457),
  ('type -> RNUMBER','type',1,'p_type','grammar.py',467),
  ('type -> RFLOAT','type',1,'p_type','grammar.py',468),
  ('type -> RSTRING','type',1,'p_type','grammar.py',469),
  ('type -> RBOOLEAN','type',1,'p_type','grammar.py',470),
]
