Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> print
Rule 5     instruccion -> declarevar
Rule 6     instruccion -> assignVar
Rule 7     instruccion -> declareArray
Rule 8     instruccion -> assingArray
Rule 9     instruccion -> arrayFuncs
Rule 10    instruccion -> if_else
Rule 11    instruccion -> ternario
Rule 12    instruccion -> while_
Rule 13    instruccion -> for_
Rule 14    instruccion -> transfer
Rule 15    print -> CONSOLE DOT LOG PARA expression PARC
Rule 16    declaration_type -> RCONST
Rule 17    declaration_type -> RVAR
Rule 18    declarevar -> declaration_type ID DOUBLEDOT type EQUAL expression
Rule 19    declarevar -> declaration_type ID EQUAL expression
Rule 20    declarevar -> declaration_type ID DOUBLEDOT type
Rule 21    assignVar -> ID EQUAL expression
Rule 22    assignVar -> ID PLUS EQUAL expression
Rule 23    assignVar -> ID LESS EQUAL expression
Rule 24    declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
Rule 25    declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
Rule 26    declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
Rule 27    assingArray -> ID BRACKETO expression BRACKETC EQUAL expression
Rule 28    arrayFuncs -> ID DOT RPUSH PARA expression PARC
Rule 29    arrayFuncs -> ID DOT RPOP PARA PARC
Rule 30    if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
Rule 31    else -> RELSE LLAVEA instrucciones LLAVEC
Rule 32    else -> RELSE if_else
Rule 33    else -> <empty>
Rule 34    ternario -> expression QUESTIONM expression DOUBLEDOT expression
Rule 35    while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
Rule 36    for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
Rule 37    for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
Rule 38    transfer -> RBREAK
Rule 39    transfer -> RCONTINUE
Rule 40    transfer -> RRETURN
Rule 41    transfer -> RRETURN expression
Rule 42    expression -> primitivo
Rule 43    expression -> aritmetica
Rule 44    expression -> relacional
Rule 45    expression -> logica
Rule 46    expression -> id_
Rule 47    expression -> arraysExpression
Rule 48    expression_list -> expression_list COMMA expression
Rule 49    expression_list -> expression
Rule 50    id_ -> ID
Rule 51    id_ -> ID BRACKETO expression BRACKETC
Rule 52    aritmetica -> expression PLUS expression
Rule 53    aritmetica -> expression BY expression
Rule 54    aritmetica -> expression DIVIDED expression
Rule 55    aritmetica -> expression LESS expression
Rule 56    aritmetica -> expression MODUL expression
Rule 57    aritmetica -> LESS expression
Rule 58    relacional -> expression DEQUAL expression
Rule 59    relacional -> expression DIFERENT expression
Rule 60    relacional -> expression MINOR expression
Rule 61    relacional -> expression MINOREQUAL expression
Rule 62    relacional -> expression GREATER expression
Rule 63    relacional -> expression GREATEREQUAL expression
Rule 64    logica -> boolean AND boolean
Rule 65    logica -> boolean OR boolean
Rule 66    logica -> NOT boolean
Rule 67    primitivo -> NUMBER
Rule 68    primitivo -> FLOAT
Rule 69    primitivo -> STRING
Rule 70    primitivo -> boolean
Rule 71    arraysExpression -> ID DOT RPOP PARA PARC
Rule 72    arraysExpression -> ID DOT RINDEXOF PARA expression PARC
Rule 73    arraysExpression -> ID DOT RJOIN PARA PARC
Rule 74    arraysExpression -> ID DOT RLENGTH PARA PARC
Rule 75    boolean -> TRUE
Rule 76    boolean -> FALSE
Rule 77    type -> RNUMBER
Rule 78    type -> RFLOAT
Rule 79    type -> RSTRING
Rule 80    type -> RBOOLEAN

Terminals, with rules where they appear

AND                  : 64
BRACKETC             : 24 24 25 26 26 27 51
BRACKETO             : 24 24 25 26 26 27 51
BY                   : 53
COMMA                : 48
CONSOLE              : 15
DEQUAL               : 58
DIFERENT             : 59
DIVIDED              : 54
DOT                  : 15 28 29 71 72 73 74
DOUBLEDOT            : 18 20 24 25 26 34
EQUAL                : 18 19 21 22 23 24 25 26 27
FALSE                : 76
FLOAT                : 68
GREATER              : 62
GREATEREQUAL         : 63
ID                   : 18 19 20 21 22 23 24 25 26 27 28 29 50 51 71 72 73 74
LESS                 : 23 37 37 55 57
LLAVEA               : 30 31 35 36 37
LLAVEC               : 30 31 35 36 37
LOG                  : 15
MINOR                : 60
MINOREQUAL           : 61
MODUL                : 56
NOT                  : 66
NUMBER               : 67
OR                   : 65
PARA                 : 15 28 29 30 35 36 37 71 72 73 74
PARC                 : 15 28 29 30 35 36 37 71 72 73 74
PLUS                 : 22 36 36 52
QUESTIONM            : 34
RBOOLEAN             : 80
RBREAK               : 38
RCONST               : 16
RCONTINUE            : 39
RELSE                : 31 32
RFLOAT               : 78
RFOR                 : 36 37
RIF                  : 30
RINDEXOF             : 72
RJOIN                : 73
RLENGTH              : 74
RNUMBER              : 77
RPOP                 : 29 71
RPUSH                : 28
RRETURN              : 40 41
RSTRING              : 79
RVAR                 : 17
RWHILE               : 35
SEMICOLON            : 36 36 37 37
STRING               : 69
TRUE                 : 75
error                : 

Nonterminals, with rules where they appear

aritmetica           : 43
arrayFuncs           : 9
arraysExpression     : 47
assignVar            : 6
assingArray          : 8
boolean              : 64 64 65 65 66 70
declaration_type     : 18 19 20 24 25 26
declareArray         : 7
declarevar           : 5 36 37
else                 : 30
expression           : 15 18 19 21 22 23 25 27 27 28 30 34 34 34 35 41 48 49 51 52 52 53 53 54 54 55 55 56 56 57 58 58 59 59 60 60 61 61 62 62 63 63 72
expression_list      : 24 48
for_                 : 13
id_                  : 36 37 46
if_else              : 10 32
instruccion          : 2 3
instrucciones        : 1 2 30 31 35 36 37
logica               : 45
primitivo            : 42
print                : 4
relacional           : 36 37 44
start                : 0
ternario             : 11
transfer             : 14
type                 : 18 20 24 25 26
while_               : 12

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declarevar
    (6) instruccion -> . assignVar
    (7) instruccion -> . declareArray
    (8) instruccion -> . assingArray
    (9) instruccion -> . arrayFuncs
    (10) instruccion -> . if_else
    (11) instruccion -> . ternario
    (12) instruccion -> . while_
    (13) instruccion -> . for_
    (14) instruccion -> . transfer
    (15) print -> . CONSOLE DOT LOG PARA expression PARC
    (18) declarevar -> . declaration_type ID DOUBLEDOT type EQUAL expression
    (19) declarevar -> . declaration_type ID EQUAL expression
    (20) declarevar -> . declaration_type ID DOUBLEDOT type
    (21) assignVar -> . ID EQUAL expression
    (22) assignVar -> . ID PLUS EQUAL expression
    (23) assignVar -> . ID LESS EQUAL expression
    (24) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (25) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (26) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (27) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (28) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (29) arrayFuncs -> . ID DOT RPOP PARA PARC
    (30) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (34) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (35) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (36) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (37) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (38) transfer -> . RBREAK
    (39) transfer -> . RCONTINUE
    (40) transfer -> . RRETURN
    (41) transfer -> . RRETURN expression
    (16) declaration_type -> . RCONST
    (17) declaration_type -> . RVAR
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    CONSOLE         shift and go to state 15
    ID              shift and go to state 18
    RIF             shift and go to state 20
    RWHILE          shift and go to state 21
    RFOR            shift and go to state 22
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26
    RRETURN         shift and go to state 27
    RCONST          shift and go to state 28
    RVAR            shift and go to state 29
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    start                          shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    assignVar                      shift and go to state 6
    declareArray                   shift and go to state 7
    assingArray                    shift and go to state 8
    arrayFuncs                     shift and go to state 9
    if_else                        shift and go to state 10
    ternario                       shift and go to state 11
    while_                         shift and go to state 12
    for_                           shift and go to state 13
    transfer                       shift and go to state 14
    expression                     shift and go to state 16
    declaration_type               shift and go to state 17
    relacional                     shift and go to state 23
    id_                            shift and go to state 24
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    logica                         shift and go to state 32
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 1

    (0) S' -> start .



state 2

    (1) start -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declarevar
    (6) instruccion -> . assignVar
    (7) instruccion -> . declareArray
    (8) instruccion -> . assingArray
    (9) instruccion -> . arrayFuncs
    (10) instruccion -> . if_else
    (11) instruccion -> . ternario
    (12) instruccion -> . while_
    (13) instruccion -> . for_
    (14) instruccion -> . transfer
    (15) print -> . CONSOLE DOT LOG PARA expression PARC
    (18) declarevar -> . declaration_type ID DOUBLEDOT type EQUAL expression
    (19) declarevar -> . declaration_type ID EQUAL expression
    (20) declarevar -> . declaration_type ID DOUBLEDOT type
    (21) assignVar -> . ID EQUAL expression
    (22) assignVar -> . ID PLUS EQUAL expression
    (23) assignVar -> . ID LESS EQUAL expression
    (24) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (25) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (26) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (27) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (28) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (29) arrayFuncs -> . ID DOT RPOP PARA PARC
    (30) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (34) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (35) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (36) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (37) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (38) transfer -> . RBREAK
    (39) transfer -> . RCONTINUE
    (40) transfer -> . RRETURN
    (41) transfer -> . RRETURN expression
    (16) declaration_type -> . RCONST
    (17) declaration_type -> . RVAR
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    $end            reduce using rule 1 (start -> instrucciones .)
    CONSOLE         shift and go to state 15
    ID              shift and go to state 18
    RIF             shift and go to state 20
    RWHILE          shift and go to state 21
    RFOR            shift and go to state 22
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26
    RRETURN         shift and go to state 27
    RCONST          shift and go to state 28
    RVAR            shift and go to state 29
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    instruccion                    shift and go to state 41
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    assignVar                      shift and go to state 6
    declareArray                   shift and go to state 7
    assingArray                    shift and go to state 8
    arrayFuncs                     shift and go to state 9
    if_else                        shift and go to state 10
    ternario                       shift and go to state 11
    while_                         shift and go to state 12
    for_                           shift and go to state 13
    transfer                       shift and go to state 14
    expression                     shift and go to state 16
    declaration_type               shift and go to state 17
    relacional                     shift and go to state 23
    id_                            shift and go to state 24
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    logica                         shift and go to state 32
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 3

    (3) instrucciones -> instruccion .

    CONSOLE         reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    RIF             reduce using rule 3 (instrucciones -> instruccion .)
    RWHILE          reduce using rule 3 (instrucciones -> instruccion .)
    RFOR            reduce using rule 3 (instrucciones -> instruccion .)
    RBREAK          reduce using rule 3 (instrucciones -> instruccion .)
    RCONTINUE       reduce using rule 3 (instrucciones -> instruccion .)
    RRETURN         reduce using rule 3 (instrucciones -> instruccion .)
    RCONST          reduce using rule 3 (instrucciones -> instruccion .)
    RVAR            reduce using rule 3 (instrucciones -> instruccion .)
    NUMBER          reduce using rule 3 (instrucciones -> instruccion .)
    FLOAT           reduce using rule 3 (instrucciones -> instruccion .)
    STRING          reduce using rule 3 (instrucciones -> instruccion .)
    LESS            reduce using rule 3 (instrucciones -> instruccion .)
    NOT             reduce using rule 3 (instrucciones -> instruccion .)
    TRUE            reduce using rule 3 (instrucciones -> instruccion .)
    FALSE           reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVEC          reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> print .

    CONSOLE         reduce using rule 4 (instruccion -> print .)
    ID              reduce using rule 4 (instruccion -> print .)
    RIF             reduce using rule 4 (instruccion -> print .)
    RWHILE          reduce using rule 4 (instruccion -> print .)
    RFOR            reduce using rule 4 (instruccion -> print .)
    RBREAK          reduce using rule 4 (instruccion -> print .)
    RCONTINUE       reduce using rule 4 (instruccion -> print .)
    RRETURN         reduce using rule 4 (instruccion -> print .)
    RCONST          reduce using rule 4 (instruccion -> print .)
    RVAR            reduce using rule 4 (instruccion -> print .)
    NUMBER          reduce using rule 4 (instruccion -> print .)
    FLOAT           reduce using rule 4 (instruccion -> print .)
    STRING          reduce using rule 4 (instruccion -> print .)
    LESS            reduce using rule 4 (instruccion -> print .)
    NOT             reduce using rule 4 (instruccion -> print .)
    TRUE            reduce using rule 4 (instruccion -> print .)
    FALSE           reduce using rule 4 (instruccion -> print .)
    $end            reduce using rule 4 (instruccion -> print .)
    LLAVEC          reduce using rule 4 (instruccion -> print .)


state 5

    (5) instruccion -> declarevar .

    CONSOLE         reduce using rule 5 (instruccion -> declarevar .)
    ID              reduce using rule 5 (instruccion -> declarevar .)
    RIF             reduce using rule 5 (instruccion -> declarevar .)
    RWHILE          reduce using rule 5 (instruccion -> declarevar .)
    RFOR            reduce using rule 5 (instruccion -> declarevar .)
    RBREAK          reduce using rule 5 (instruccion -> declarevar .)
    RCONTINUE       reduce using rule 5 (instruccion -> declarevar .)
    RRETURN         reduce using rule 5 (instruccion -> declarevar .)
    RCONST          reduce using rule 5 (instruccion -> declarevar .)
    RVAR            reduce using rule 5 (instruccion -> declarevar .)
    NUMBER          reduce using rule 5 (instruccion -> declarevar .)
    FLOAT           reduce using rule 5 (instruccion -> declarevar .)
    STRING          reduce using rule 5 (instruccion -> declarevar .)
    LESS            reduce using rule 5 (instruccion -> declarevar .)
    NOT             reduce using rule 5 (instruccion -> declarevar .)
    TRUE            reduce using rule 5 (instruccion -> declarevar .)
    FALSE           reduce using rule 5 (instruccion -> declarevar .)
    $end            reduce using rule 5 (instruccion -> declarevar .)
    LLAVEC          reduce using rule 5 (instruccion -> declarevar .)


state 6

    (6) instruccion -> assignVar .

    CONSOLE         reduce using rule 6 (instruccion -> assignVar .)
    ID              reduce using rule 6 (instruccion -> assignVar .)
    RIF             reduce using rule 6 (instruccion -> assignVar .)
    RWHILE          reduce using rule 6 (instruccion -> assignVar .)
    RFOR            reduce using rule 6 (instruccion -> assignVar .)
    RBREAK          reduce using rule 6 (instruccion -> assignVar .)
    RCONTINUE       reduce using rule 6 (instruccion -> assignVar .)
    RRETURN         reduce using rule 6 (instruccion -> assignVar .)
    RCONST          reduce using rule 6 (instruccion -> assignVar .)
    RVAR            reduce using rule 6 (instruccion -> assignVar .)
    NUMBER          reduce using rule 6 (instruccion -> assignVar .)
    FLOAT           reduce using rule 6 (instruccion -> assignVar .)
    STRING          reduce using rule 6 (instruccion -> assignVar .)
    LESS            reduce using rule 6 (instruccion -> assignVar .)
    NOT             reduce using rule 6 (instruccion -> assignVar .)
    TRUE            reduce using rule 6 (instruccion -> assignVar .)
    FALSE           reduce using rule 6 (instruccion -> assignVar .)
    $end            reduce using rule 6 (instruccion -> assignVar .)
    LLAVEC          reduce using rule 6 (instruccion -> assignVar .)


state 7

    (7) instruccion -> declareArray .

    CONSOLE         reduce using rule 7 (instruccion -> declareArray .)
    ID              reduce using rule 7 (instruccion -> declareArray .)
    RIF             reduce using rule 7 (instruccion -> declareArray .)
    RWHILE          reduce using rule 7 (instruccion -> declareArray .)
    RFOR            reduce using rule 7 (instruccion -> declareArray .)
    RBREAK          reduce using rule 7 (instruccion -> declareArray .)
    RCONTINUE       reduce using rule 7 (instruccion -> declareArray .)
    RRETURN         reduce using rule 7 (instruccion -> declareArray .)
    RCONST          reduce using rule 7 (instruccion -> declareArray .)
    RVAR            reduce using rule 7 (instruccion -> declareArray .)
    NUMBER          reduce using rule 7 (instruccion -> declareArray .)
    FLOAT           reduce using rule 7 (instruccion -> declareArray .)
    STRING          reduce using rule 7 (instruccion -> declareArray .)
    LESS            reduce using rule 7 (instruccion -> declareArray .)
    NOT             reduce using rule 7 (instruccion -> declareArray .)
    TRUE            reduce using rule 7 (instruccion -> declareArray .)
    FALSE           reduce using rule 7 (instruccion -> declareArray .)
    $end            reduce using rule 7 (instruccion -> declareArray .)
    LLAVEC          reduce using rule 7 (instruccion -> declareArray .)


state 8

    (8) instruccion -> assingArray .

    CONSOLE         reduce using rule 8 (instruccion -> assingArray .)
    ID              reduce using rule 8 (instruccion -> assingArray .)
    RIF             reduce using rule 8 (instruccion -> assingArray .)
    RWHILE          reduce using rule 8 (instruccion -> assingArray .)
    RFOR            reduce using rule 8 (instruccion -> assingArray .)
    RBREAK          reduce using rule 8 (instruccion -> assingArray .)
    RCONTINUE       reduce using rule 8 (instruccion -> assingArray .)
    RRETURN         reduce using rule 8 (instruccion -> assingArray .)
    RCONST          reduce using rule 8 (instruccion -> assingArray .)
    RVAR            reduce using rule 8 (instruccion -> assingArray .)
    NUMBER          reduce using rule 8 (instruccion -> assingArray .)
    FLOAT           reduce using rule 8 (instruccion -> assingArray .)
    STRING          reduce using rule 8 (instruccion -> assingArray .)
    LESS            reduce using rule 8 (instruccion -> assingArray .)
    NOT             reduce using rule 8 (instruccion -> assingArray .)
    TRUE            reduce using rule 8 (instruccion -> assingArray .)
    FALSE           reduce using rule 8 (instruccion -> assingArray .)
    $end            reduce using rule 8 (instruccion -> assingArray .)
    LLAVEC          reduce using rule 8 (instruccion -> assingArray .)


state 9

    (9) instruccion -> arrayFuncs .

    CONSOLE         reduce using rule 9 (instruccion -> arrayFuncs .)
    ID              reduce using rule 9 (instruccion -> arrayFuncs .)
    RIF             reduce using rule 9 (instruccion -> arrayFuncs .)
    RWHILE          reduce using rule 9 (instruccion -> arrayFuncs .)
    RFOR            reduce using rule 9 (instruccion -> arrayFuncs .)
    RBREAK          reduce using rule 9 (instruccion -> arrayFuncs .)
    RCONTINUE       reduce using rule 9 (instruccion -> arrayFuncs .)
    RRETURN         reduce using rule 9 (instruccion -> arrayFuncs .)
    RCONST          reduce using rule 9 (instruccion -> arrayFuncs .)
    RVAR            reduce using rule 9 (instruccion -> arrayFuncs .)
    NUMBER          reduce using rule 9 (instruccion -> arrayFuncs .)
    FLOAT           reduce using rule 9 (instruccion -> arrayFuncs .)
    STRING          reduce using rule 9 (instruccion -> arrayFuncs .)
    LESS            reduce using rule 9 (instruccion -> arrayFuncs .)
    NOT             reduce using rule 9 (instruccion -> arrayFuncs .)
    TRUE            reduce using rule 9 (instruccion -> arrayFuncs .)
    FALSE           reduce using rule 9 (instruccion -> arrayFuncs .)
    $end            reduce using rule 9 (instruccion -> arrayFuncs .)
    LLAVEC          reduce using rule 9 (instruccion -> arrayFuncs .)


state 10

    (10) instruccion -> if_else .

    CONSOLE         reduce using rule 10 (instruccion -> if_else .)
    ID              reduce using rule 10 (instruccion -> if_else .)
    RIF             reduce using rule 10 (instruccion -> if_else .)
    RWHILE          reduce using rule 10 (instruccion -> if_else .)
    RFOR            reduce using rule 10 (instruccion -> if_else .)
    RBREAK          reduce using rule 10 (instruccion -> if_else .)
    RCONTINUE       reduce using rule 10 (instruccion -> if_else .)
    RRETURN         reduce using rule 10 (instruccion -> if_else .)
    RCONST          reduce using rule 10 (instruccion -> if_else .)
    RVAR            reduce using rule 10 (instruccion -> if_else .)
    NUMBER          reduce using rule 10 (instruccion -> if_else .)
    FLOAT           reduce using rule 10 (instruccion -> if_else .)
    STRING          reduce using rule 10 (instruccion -> if_else .)
    LESS            reduce using rule 10 (instruccion -> if_else .)
    NOT             reduce using rule 10 (instruccion -> if_else .)
    TRUE            reduce using rule 10 (instruccion -> if_else .)
    FALSE           reduce using rule 10 (instruccion -> if_else .)
    $end            reduce using rule 10 (instruccion -> if_else .)
    LLAVEC          reduce using rule 10 (instruccion -> if_else .)


state 11

    (11) instruccion -> ternario .

    CONSOLE         reduce using rule 11 (instruccion -> ternario .)
    ID              reduce using rule 11 (instruccion -> ternario .)
    RIF             reduce using rule 11 (instruccion -> ternario .)
    RWHILE          reduce using rule 11 (instruccion -> ternario .)
    RFOR            reduce using rule 11 (instruccion -> ternario .)
    RBREAK          reduce using rule 11 (instruccion -> ternario .)
    RCONTINUE       reduce using rule 11 (instruccion -> ternario .)
    RRETURN         reduce using rule 11 (instruccion -> ternario .)
    RCONST          reduce using rule 11 (instruccion -> ternario .)
    RVAR            reduce using rule 11 (instruccion -> ternario .)
    NUMBER          reduce using rule 11 (instruccion -> ternario .)
    FLOAT           reduce using rule 11 (instruccion -> ternario .)
    STRING          reduce using rule 11 (instruccion -> ternario .)
    LESS            reduce using rule 11 (instruccion -> ternario .)
    NOT             reduce using rule 11 (instruccion -> ternario .)
    TRUE            reduce using rule 11 (instruccion -> ternario .)
    FALSE           reduce using rule 11 (instruccion -> ternario .)
    $end            reduce using rule 11 (instruccion -> ternario .)
    LLAVEC          reduce using rule 11 (instruccion -> ternario .)


state 12

    (12) instruccion -> while_ .

    CONSOLE         reduce using rule 12 (instruccion -> while_ .)
    ID              reduce using rule 12 (instruccion -> while_ .)
    RIF             reduce using rule 12 (instruccion -> while_ .)
    RWHILE          reduce using rule 12 (instruccion -> while_ .)
    RFOR            reduce using rule 12 (instruccion -> while_ .)
    RBREAK          reduce using rule 12 (instruccion -> while_ .)
    RCONTINUE       reduce using rule 12 (instruccion -> while_ .)
    RRETURN         reduce using rule 12 (instruccion -> while_ .)
    RCONST          reduce using rule 12 (instruccion -> while_ .)
    RVAR            reduce using rule 12 (instruccion -> while_ .)
    NUMBER          reduce using rule 12 (instruccion -> while_ .)
    FLOAT           reduce using rule 12 (instruccion -> while_ .)
    STRING          reduce using rule 12 (instruccion -> while_ .)
    LESS            reduce using rule 12 (instruccion -> while_ .)
    NOT             reduce using rule 12 (instruccion -> while_ .)
    TRUE            reduce using rule 12 (instruccion -> while_ .)
    FALSE           reduce using rule 12 (instruccion -> while_ .)
    $end            reduce using rule 12 (instruccion -> while_ .)
    LLAVEC          reduce using rule 12 (instruccion -> while_ .)


state 13

    (13) instruccion -> for_ .

    CONSOLE         reduce using rule 13 (instruccion -> for_ .)
    ID              reduce using rule 13 (instruccion -> for_ .)
    RIF             reduce using rule 13 (instruccion -> for_ .)
    RWHILE          reduce using rule 13 (instruccion -> for_ .)
    RFOR            reduce using rule 13 (instruccion -> for_ .)
    RBREAK          reduce using rule 13 (instruccion -> for_ .)
    RCONTINUE       reduce using rule 13 (instruccion -> for_ .)
    RRETURN         reduce using rule 13 (instruccion -> for_ .)
    RCONST          reduce using rule 13 (instruccion -> for_ .)
    RVAR            reduce using rule 13 (instruccion -> for_ .)
    NUMBER          reduce using rule 13 (instruccion -> for_ .)
    FLOAT           reduce using rule 13 (instruccion -> for_ .)
    STRING          reduce using rule 13 (instruccion -> for_ .)
    LESS            reduce using rule 13 (instruccion -> for_ .)
    NOT             reduce using rule 13 (instruccion -> for_ .)
    TRUE            reduce using rule 13 (instruccion -> for_ .)
    FALSE           reduce using rule 13 (instruccion -> for_ .)
    $end            reduce using rule 13 (instruccion -> for_ .)
    LLAVEC          reduce using rule 13 (instruccion -> for_ .)


state 14

    (14) instruccion -> transfer .

    CONSOLE         reduce using rule 14 (instruccion -> transfer .)
    ID              reduce using rule 14 (instruccion -> transfer .)
    RIF             reduce using rule 14 (instruccion -> transfer .)
    RWHILE          reduce using rule 14 (instruccion -> transfer .)
    RFOR            reduce using rule 14 (instruccion -> transfer .)
    RBREAK          reduce using rule 14 (instruccion -> transfer .)
    RCONTINUE       reduce using rule 14 (instruccion -> transfer .)
    RRETURN         reduce using rule 14 (instruccion -> transfer .)
    RCONST          reduce using rule 14 (instruccion -> transfer .)
    RVAR            reduce using rule 14 (instruccion -> transfer .)
    NUMBER          reduce using rule 14 (instruccion -> transfer .)
    FLOAT           reduce using rule 14 (instruccion -> transfer .)
    STRING          reduce using rule 14 (instruccion -> transfer .)
    LESS            reduce using rule 14 (instruccion -> transfer .)
    NOT             reduce using rule 14 (instruccion -> transfer .)
    TRUE            reduce using rule 14 (instruccion -> transfer .)
    FALSE           reduce using rule 14 (instruccion -> transfer .)
    $end            reduce using rule 14 (instruccion -> transfer .)
    LLAVEC          reduce using rule 14 (instruccion -> transfer .)


state 15

    (15) print -> CONSOLE . DOT LOG PARA expression PARC

    DOT             shift and go to state 42


state 16

    (34) ternario -> expression . QUESTIONM expression DOUBLEDOT expression
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

    QUESTIONM       shift and go to state 43
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48
    DEQUAL          shift and go to state 49
    DIFERENT        shift and go to state 50
    MINOR           shift and go to state 51
    MINOREQUAL      shift and go to state 52
    GREATER         shift and go to state 53
    GREATEREQUAL    shift and go to state 54


state 17

    (18) declarevar -> declaration_type . ID DOUBLEDOT type EQUAL expression
    (19) declarevar -> declaration_type . ID EQUAL expression
    (20) declarevar -> declaration_type . ID DOUBLEDOT type
    (24) declareArray -> declaration_type . ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (25) declareArray -> declaration_type . ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (26) declareArray -> declaration_type . ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC

    ID              shift and go to state 55


state 18

    (21) assignVar -> ID . EQUAL expression
    (22) assignVar -> ID . PLUS EQUAL expression
    (23) assignVar -> ID . LESS EQUAL expression
    (27) assingArray -> ID . BRACKETO expression BRACKETC EQUAL expression
    (28) arrayFuncs -> ID . DOT RPUSH PARA expression PARC
    (29) arrayFuncs -> ID . DOT RPOP PARA PARC
    (50) id_ -> ID .
    (51) id_ -> ID . BRACKETO expression BRACKETC
    (71) arraysExpression -> ID . DOT RPOP PARA PARC
    (72) arraysExpression -> ID . DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> ID . DOT RJOIN PARA PARC
    (74) arraysExpression -> ID . DOT RLENGTH PARA PARC

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    EQUAL           shift and go to state 56
    PLUS            shift and go to state 57
    LESS            shift and go to state 58
    BRACKETO        shift and go to state 59
    DOT             shift and go to state 60
    QUESTIONM       reduce using rule 50 (id_ -> ID .)
    BY              reduce using rule 50 (id_ -> ID .)
    DIVIDED         reduce using rule 50 (id_ -> ID .)
    MODUL           reduce using rule 50 (id_ -> ID .)
    DEQUAL          reduce using rule 50 (id_ -> ID .)
    DIFERENT        reduce using rule 50 (id_ -> ID .)
    MINOR           reduce using rule 50 (id_ -> ID .)
    MINOREQUAL      reduce using rule 50 (id_ -> ID .)
    GREATER         reduce using rule 50 (id_ -> ID .)
    GREATEREQUAL    reduce using rule 50 (id_ -> ID .)

  ! PLUS            [ reduce using rule 50 (id_ -> ID .) ]
  ! LESS            [ reduce using rule 50 (id_ -> ID .) ]


state 19

    (57) aritmetica -> LESS . expression
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 61
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 20

    (30) if_else -> RIF . PARA expression PARC LLAVEA instrucciones LLAVEC else

    PARA            shift and go to state 63


state 21

    (35) while_ -> RWHILE . PARA expression PARC LLAVEA instrucciones LLAVEC

    PARA            shift and go to state 64


state 22

    (36) for_ -> RFOR . PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (37) for_ -> RFOR . PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC

    PARA            shift and go to state 65


state 23

    (44) expression -> relacional .

    QUESTIONM       reduce using rule 44 (expression -> relacional .)
    PLUS            reduce using rule 44 (expression -> relacional .)
    BY              reduce using rule 44 (expression -> relacional .)
    DIVIDED         reduce using rule 44 (expression -> relacional .)
    LESS            reduce using rule 44 (expression -> relacional .)
    MODUL           reduce using rule 44 (expression -> relacional .)
    DEQUAL          reduce using rule 44 (expression -> relacional .)
    DIFERENT        reduce using rule 44 (expression -> relacional .)
    MINOR           reduce using rule 44 (expression -> relacional .)
    MINOREQUAL      reduce using rule 44 (expression -> relacional .)
    GREATER         reduce using rule 44 (expression -> relacional .)
    GREATEREQUAL    reduce using rule 44 (expression -> relacional .)
    CONSOLE         reduce using rule 44 (expression -> relacional .)
    ID              reduce using rule 44 (expression -> relacional .)
    RIF             reduce using rule 44 (expression -> relacional .)
    RWHILE          reduce using rule 44 (expression -> relacional .)
    RFOR            reduce using rule 44 (expression -> relacional .)
    RBREAK          reduce using rule 44 (expression -> relacional .)
    RCONTINUE       reduce using rule 44 (expression -> relacional .)
    RRETURN         reduce using rule 44 (expression -> relacional .)
    RCONST          reduce using rule 44 (expression -> relacional .)
    RVAR            reduce using rule 44 (expression -> relacional .)
    NUMBER          reduce using rule 44 (expression -> relacional .)
    FLOAT           reduce using rule 44 (expression -> relacional .)
    STRING          reduce using rule 44 (expression -> relacional .)
    NOT             reduce using rule 44 (expression -> relacional .)
    TRUE            reduce using rule 44 (expression -> relacional .)
    FALSE           reduce using rule 44 (expression -> relacional .)
    $end            reduce using rule 44 (expression -> relacional .)
    LLAVEC          reduce using rule 44 (expression -> relacional .)
    DOUBLEDOT       reduce using rule 44 (expression -> relacional .)
    BRACKETC        reduce using rule 44 (expression -> relacional .)
    PARC            reduce using rule 44 (expression -> relacional .)
    SEMICOLON       reduce using rule 44 (expression -> relacional .)
    COMMA           reduce using rule 44 (expression -> relacional .)


state 24

    (46) expression -> id_ .

    QUESTIONM       reduce using rule 46 (expression -> id_ .)
    PLUS            reduce using rule 46 (expression -> id_ .)
    BY              reduce using rule 46 (expression -> id_ .)
    DIVIDED         reduce using rule 46 (expression -> id_ .)
    LESS            reduce using rule 46 (expression -> id_ .)
    MODUL           reduce using rule 46 (expression -> id_ .)
    DEQUAL          reduce using rule 46 (expression -> id_ .)
    DIFERENT        reduce using rule 46 (expression -> id_ .)
    MINOR           reduce using rule 46 (expression -> id_ .)
    MINOREQUAL      reduce using rule 46 (expression -> id_ .)
    GREATER         reduce using rule 46 (expression -> id_ .)
    GREATEREQUAL    reduce using rule 46 (expression -> id_ .)
    CONSOLE         reduce using rule 46 (expression -> id_ .)
    ID              reduce using rule 46 (expression -> id_ .)
    RIF             reduce using rule 46 (expression -> id_ .)
    RWHILE          reduce using rule 46 (expression -> id_ .)
    RFOR            reduce using rule 46 (expression -> id_ .)
    RBREAK          reduce using rule 46 (expression -> id_ .)
    RCONTINUE       reduce using rule 46 (expression -> id_ .)
    RRETURN         reduce using rule 46 (expression -> id_ .)
    RCONST          reduce using rule 46 (expression -> id_ .)
    RVAR            reduce using rule 46 (expression -> id_ .)
    NUMBER          reduce using rule 46 (expression -> id_ .)
    FLOAT           reduce using rule 46 (expression -> id_ .)
    STRING          reduce using rule 46 (expression -> id_ .)
    NOT             reduce using rule 46 (expression -> id_ .)
    TRUE            reduce using rule 46 (expression -> id_ .)
    FALSE           reduce using rule 46 (expression -> id_ .)
    $end            reduce using rule 46 (expression -> id_ .)
    LLAVEC          reduce using rule 46 (expression -> id_ .)
    DOUBLEDOT       reduce using rule 46 (expression -> id_ .)
    BRACKETC        reduce using rule 46 (expression -> id_ .)
    PARC            reduce using rule 46 (expression -> id_ .)
    SEMICOLON       reduce using rule 46 (expression -> id_ .)
    COMMA           reduce using rule 46 (expression -> id_ .)


state 25

    (38) transfer -> RBREAK .

    CONSOLE         reduce using rule 38 (transfer -> RBREAK .)
    ID              reduce using rule 38 (transfer -> RBREAK .)
    RIF             reduce using rule 38 (transfer -> RBREAK .)
    RWHILE          reduce using rule 38 (transfer -> RBREAK .)
    RFOR            reduce using rule 38 (transfer -> RBREAK .)
    RBREAK          reduce using rule 38 (transfer -> RBREAK .)
    RCONTINUE       reduce using rule 38 (transfer -> RBREAK .)
    RRETURN         reduce using rule 38 (transfer -> RBREAK .)
    RCONST          reduce using rule 38 (transfer -> RBREAK .)
    RVAR            reduce using rule 38 (transfer -> RBREAK .)
    NUMBER          reduce using rule 38 (transfer -> RBREAK .)
    FLOAT           reduce using rule 38 (transfer -> RBREAK .)
    STRING          reduce using rule 38 (transfer -> RBREAK .)
    LESS            reduce using rule 38 (transfer -> RBREAK .)
    NOT             reduce using rule 38 (transfer -> RBREAK .)
    TRUE            reduce using rule 38 (transfer -> RBREAK .)
    FALSE           reduce using rule 38 (transfer -> RBREAK .)
    $end            reduce using rule 38 (transfer -> RBREAK .)
    LLAVEC          reduce using rule 38 (transfer -> RBREAK .)


state 26

    (39) transfer -> RCONTINUE .

    CONSOLE         reduce using rule 39 (transfer -> RCONTINUE .)
    ID              reduce using rule 39 (transfer -> RCONTINUE .)
    RIF             reduce using rule 39 (transfer -> RCONTINUE .)
    RWHILE          reduce using rule 39 (transfer -> RCONTINUE .)
    RFOR            reduce using rule 39 (transfer -> RCONTINUE .)
    RBREAK          reduce using rule 39 (transfer -> RCONTINUE .)
    RCONTINUE       reduce using rule 39 (transfer -> RCONTINUE .)
    RRETURN         reduce using rule 39 (transfer -> RCONTINUE .)
    RCONST          reduce using rule 39 (transfer -> RCONTINUE .)
    RVAR            reduce using rule 39 (transfer -> RCONTINUE .)
    NUMBER          reduce using rule 39 (transfer -> RCONTINUE .)
    FLOAT           reduce using rule 39 (transfer -> RCONTINUE .)
    STRING          reduce using rule 39 (transfer -> RCONTINUE .)
    LESS            reduce using rule 39 (transfer -> RCONTINUE .)
    NOT             reduce using rule 39 (transfer -> RCONTINUE .)
    TRUE            reduce using rule 39 (transfer -> RCONTINUE .)
    FALSE           reduce using rule 39 (transfer -> RCONTINUE .)
    $end            reduce using rule 39 (transfer -> RCONTINUE .)
    LLAVEC          reduce using rule 39 (transfer -> RCONTINUE .)


state 27

    (40) transfer -> RRETURN .
    (41) transfer -> RRETURN . expression
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    CONSOLE         reduce using rule 40 (transfer -> RRETURN .)
    RIF             reduce using rule 40 (transfer -> RRETURN .)
    RWHILE          reduce using rule 40 (transfer -> RRETURN .)
    RFOR            reduce using rule 40 (transfer -> RRETURN .)
    RBREAK          reduce using rule 40 (transfer -> RRETURN .)
    RCONTINUE       reduce using rule 40 (transfer -> RRETURN .)
    RRETURN         reduce using rule 40 (transfer -> RRETURN .)
    RCONST          reduce using rule 40 (transfer -> RRETURN .)
    RVAR            reduce using rule 40 (transfer -> RRETURN .)
    $end            reduce using rule 40 (transfer -> RRETURN .)
    LLAVEC          reduce using rule 40 (transfer -> RRETURN .)
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

  ! ID              [ reduce using rule 40 (transfer -> RRETURN .) ]
  ! NUMBER          [ reduce using rule 40 (transfer -> RRETURN .) ]
  ! FLOAT           [ reduce using rule 40 (transfer -> RRETURN .) ]
  ! STRING          [ reduce using rule 40 (transfer -> RRETURN .) ]
  ! LESS            [ reduce using rule 40 (transfer -> RRETURN .) ]
  ! NOT             [ reduce using rule 40 (transfer -> RRETURN .) ]
  ! TRUE            [ reduce using rule 40 (transfer -> RRETURN .) ]
  ! FALSE           [ reduce using rule 40 (transfer -> RRETURN .) ]

    expression                     shift and go to state 66
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 28

    (16) declaration_type -> RCONST .

    ID              reduce using rule 16 (declaration_type -> RCONST .)


state 29

    (17) declaration_type -> RVAR .

    ID              reduce using rule 17 (declaration_type -> RVAR .)


state 30

    (42) expression -> primitivo .

    QUESTIONM       reduce using rule 42 (expression -> primitivo .)
    PLUS            reduce using rule 42 (expression -> primitivo .)
    BY              reduce using rule 42 (expression -> primitivo .)
    DIVIDED         reduce using rule 42 (expression -> primitivo .)
    LESS            reduce using rule 42 (expression -> primitivo .)
    MODUL           reduce using rule 42 (expression -> primitivo .)
    DEQUAL          reduce using rule 42 (expression -> primitivo .)
    DIFERENT        reduce using rule 42 (expression -> primitivo .)
    MINOR           reduce using rule 42 (expression -> primitivo .)
    MINOREQUAL      reduce using rule 42 (expression -> primitivo .)
    GREATER         reduce using rule 42 (expression -> primitivo .)
    GREATEREQUAL    reduce using rule 42 (expression -> primitivo .)
    CONSOLE         reduce using rule 42 (expression -> primitivo .)
    ID              reduce using rule 42 (expression -> primitivo .)
    RIF             reduce using rule 42 (expression -> primitivo .)
    RWHILE          reduce using rule 42 (expression -> primitivo .)
    RFOR            reduce using rule 42 (expression -> primitivo .)
    RBREAK          reduce using rule 42 (expression -> primitivo .)
    RCONTINUE       reduce using rule 42 (expression -> primitivo .)
    RRETURN         reduce using rule 42 (expression -> primitivo .)
    RCONST          reduce using rule 42 (expression -> primitivo .)
    RVAR            reduce using rule 42 (expression -> primitivo .)
    NUMBER          reduce using rule 42 (expression -> primitivo .)
    FLOAT           reduce using rule 42 (expression -> primitivo .)
    STRING          reduce using rule 42 (expression -> primitivo .)
    NOT             reduce using rule 42 (expression -> primitivo .)
    TRUE            reduce using rule 42 (expression -> primitivo .)
    FALSE           reduce using rule 42 (expression -> primitivo .)
    $end            reduce using rule 42 (expression -> primitivo .)
    LLAVEC          reduce using rule 42 (expression -> primitivo .)
    DOUBLEDOT       reduce using rule 42 (expression -> primitivo .)
    BRACKETC        reduce using rule 42 (expression -> primitivo .)
    PARC            reduce using rule 42 (expression -> primitivo .)
    SEMICOLON       reduce using rule 42 (expression -> primitivo .)
    COMMA           reduce using rule 42 (expression -> primitivo .)


state 31

    (43) expression -> aritmetica .

    QUESTIONM       reduce using rule 43 (expression -> aritmetica .)
    PLUS            reduce using rule 43 (expression -> aritmetica .)
    BY              reduce using rule 43 (expression -> aritmetica .)
    DIVIDED         reduce using rule 43 (expression -> aritmetica .)
    LESS            reduce using rule 43 (expression -> aritmetica .)
    MODUL           reduce using rule 43 (expression -> aritmetica .)
    DEQUAL          reduce using rule 43 (expression -> aritmetica .)
    DIFERENT        reduce using rule 43 (expression -> aritmetica .)
    MINOR           reduce using rule 43 (expression -> aritmetica .)
    MINOREQUAL      reduce using rule 43 (expression -> aritmetica .)
    GREATER         reduce using rule 43 (expression -> aritmetica .)
    GREATEREQUAL    reduce using rule 43 (expression -> aritmetica .)
    CONSOLE         reduce using rule 43 (expression -> aritmetica .)
    ID              reduce using rule 43 (expression -> aritmetica .)
    RIF             reduce using rule 43 (expression -> aritmetica .)
    RWHILE          reduce using rule 43 (expression -> aritmetica .)
    RFOR            reduce using rule 43 (expression -> aritmetica .)
    RBREAK          reduce using rule 43 (expression -> aritmetica .)
    RCONTINUE       reduce using rule 43 (expression -> aritmetica .)
    RRETURN         reduce using rule 43 (expression -> aritmetica .)
    RCONST          reduce using rule 43 (expression -> aritmetica .)
    RVAR            reduce using rule 43 (expression -> aritmetica .)
    NUMBER          reduce using rule 43 (expression -> aritmetica .)
    FLOAT           reduce using rule 43 (expression -> aritmetica .)
    STRING          reduce using rule 43 (expression -> aritmetica .)
    NOT             reduce using rule 43 (expression -> aritmetica .)
    TRUE            reduce using rule 43 (expression -> aritmetica .)
    FALSE           reduce using rule 43 (expression -> aritmetica .)
    $end            reduce using rule 43 (expression -> aritmetica .)
    LLAVEC          reduce using rule 43 (expression -> aritmetica .)
    DOUBLEDOT       reduce using rule 43 (expression -> aritmetica .)
    BRACKETC        reduce using rule 43 (expression -> aritmetica .)
    PARC            reduce using rule 43 (expression -> aritmetica .)
    SEMICOLON       reduce using rule 43 (expression -> aritmetica .)
    COMMA           reduce using rule 43 (expression -> aritmetica .)


state 32

    (45) expression -> logica .

    QUESTIONM       reduce using rule 45 (expression -> logica .)
    PLUS            reduce using rule 45 (expression -> logica .)
    BY              reduce using rule 45 (expression -> logica .)
    DIVIDED         reduce using rule 45 (expression -> logica .)
    LESS            reduce using rule 45 (expression -> logica .)
    MODUL           reduce using rule 45 (expression -> logica .)
    DEQUAL          reduce using rule 45 (expression -> logica .)
    DIFERENT        reduce using rule 45 (expression -> logica .)
    MINOR           reduce using rule 45 (expression -> logica .)
    MINOREQUAL      reduce using rule 45 (expression -> logica .)
    GREATER         reduce using rule 45 (expression -> logica .)
    GREATEREQUAL    reduce using rule 45 (expression -> logica .)
    CONSOLE         reduce using rule 45 (expression -> logica .)
    ID              reduce using rule 45 (expression -> logica .)
    RIF             reduce using rule 45 (expression -> logica .)
    RWHILE          reduce using rule 45 (expression -> logica .)
    RFOR            reduce using rule 45 (expression -> logica .)
    RBREAK          reduce using rule 45 (expression -> logica .)
    RCONTINUE       reduce using rule 45 (expression -> logica .)
    RRETURN         reduce using rule 45 (expression -> logica .)
    RCONST          reduce using rule 45 (expression -> logica .)
    RVAR            reduce using rule 45 (expression -> logica .)
    NUMBER          reduce using rule 45 (expression -> logica .)
    FLOAT           reduce using rule 45 (expression -> logica .)
    STRING          reduce using rule 45 (expression -> logica .)
    NOT             reduce using rule 45 (expression -> logica .)
    TRUE            reduce using rule 45 (expression -> logica .)
    FALSE           reduce using rule 45 (expression -> logica .)
    $end            reduce using rule 45 (expression -> logica .)
    LLAVEC          reduce using rule 45 (expression -> logica .)
    DOUBLEDOT       reduce using rule 45 (expression -> logica .)
    BRACKETC        reduce using rule 45 (expression -> logica .)
    PARC            reduce using rule 45 (expression -> logica .)
    SEMICOLON       reduce using rule 45 (expression -> logica .)
    COMMA           reduce using rule 45 (expression -> logica .)


state 33

    (47) expression -> arraysExpression .

    QUESTIONM       reduce using rule 47 (expression -> arraysExpression .)
    PLUS            reduce using rule 47 (expression -> arraysExpression .)
    BY              reduce using rule 47 (expression -> arraysExpression .)
    DIVIDED         reduce using rule 47 (expression -> arraysExpression .)
    LESS            reduce using rule 47 (expression -> arraysExpression .)
    MODUL           reduce using rule 47 (expression -> arraysExpression .)
    DEQUAL          reduce using rule 47 (expression -> arraysExpression .)
    DIFERENT        reduce using rule 47 (expression -> arraysExpression .)
    MINOR           reduce using rule 47 (expression -> arraysExpression .)
    MINOREQUAL      reduce using rule 47 (expression -> arraysExpression .)
    GREATER         reduce using rule 47 (expression -> arraysExpression .)
    GREATEREQUAL    reduce using rule 47 (expression -> arraysExpression .)
    CONSOLE         reduce using rule 47 (expression -> arraysExpression .)
    ID              reduce using rule 47 (expression -> arraysExpression .)
    RIF             reduce using rule 47 (expression -> arraysExpression .)
    RWHILE          reduce using rule 47 (expression -> arraysExpression .)
    RFOR            reduce using rule 47 (expression -> arraysExpression .)
    RBREAK          reduce using rule 47 (expression -> arraysExpression .)
    RCONTINUE       reduce using rule 47 (expression -> arraysExpression .)
    RRETURN         reduce using rule 47 (expression -> arraysExpression .)
    RCONST          reduce using rule 47 (expression -> arraysExpression .)
    RVAR            reduce using rule 47 (expression -> arraysExpression .)
    NUMBER          reduce using rule 47 (expression -> arraysExpression .)
    FLOAT           reduce using rule 47 (expression -> arraysExpression .)
    STRING          reduce using rule 47 (expression -> arraysExpression .)
    NOT             reduce using rule 47 (expression -> arraysExpression .)
    TRUE            reduce using rule 47 (expression -> arraysExpression .)
    FALSE           reduce using rule 47 (expression -> arraysExpression .)
    $end            reduce using rule 47 (expression -> arraysExpression .)
    LLAVEC          reduce using rule 47 (expression -> arraysExpression .)
    DOUBLEDOT       reduce using rule 47 (expression -> arraysExpression .)
    BRACKETC        reduce using rule 47 (expression -> arraysExpression .)
    PARC            reduce using rule 47 (expression -> arraysExpression .)
    SEMICOLON       reduce using rule 47 (expression -> arraysExpression .)
    COMMA           reduce using rule 47 (expression -> arraysExpression .)


state 34

    (67) primitivo -> NUMBER .

    QUESTIONM       reduce using rule 67 (primitivo -> NUMBER .)
    PLUS            reduce using rule 67 (primitivo -> NUMBER .)
    BY              reduce using rule 67 (primitivo -> NUMBER .)
    DIVIDED         reduce using rule 67 (primitivo -> NUMBER .)
    LESS            reduce using rule 67 (primitivo -> NUMBER .)
    MODUL           reduce using rule 67 (primitivo -> NUMBER .)
    DEQUAL          reduce using rule 67 (primitivo -> NUMBER .)
    DIFERENT        reduce using rule 67 (primitivo -> NUMBER .)
    MINOR           reduce using rule 67 (primitivo -> NUMBER .)
    MINOREQUAL      reduce using rule 67 (primitivo -> NUMBER .)
    GREATER         reduce using rule 67 (primitivo -> NUMBER .)
    GREATEREQUAL    reduce using rule 67 (primitivo -> NUMBER .)
    CONSOLE         reduce using rule 67 (primitivo -> NUMBER .)
    ID              reduce using rule 67 (primitivo -> NUMBER .)
    RIF             reduce using rule 67 (primitivo -> NUMBER .)
    RWHILE          reduce using rule 67 (primitivo -> NUMBER .)
    RFOR            reduce using rule 67 (primitivo -> NUMBER .)
    RBREAK          reduce using rule 67 (primitivo -> NUMBER .)
    RCONTINUE       reduce using rule 67 (primitivo -> NUMBER .)
    RRETURN         reduce using rule 67 (primitivo -> NUMBER .)
    RCONST          reduce using rule 67 (primitivo -> NUMBER .)
    RVAR            reduce using rule 67 (primitivo -> NUMBER .)
    NUMBER          reduce using rule 67 (primitivo -> NUMBER .)
    FLOAT           reduce using rule 67 (primitivo -> NUMBER .)
    STRING          reduce using rule 67 (primitivo -> NUMBER .)
    NOT             reduce using rule 67 (primitivo -> NUMBER .)
    TRUE            reduce using rule 67 (primitivo -> NUMBER .)
    FALSE           reduce using rule 67 (primitivo -> NUMBER .)
    $end            reduce using rule 67 (primitivo -> NUMBER .)
    LLAVEC          reduce using rule 67 (primitivo -> NUMBER .)
    DOUBLEDOT       reduce using rule 67 (primitivo -> NUMBER .)
    BRACKETC        reduce using rule 67 (primitivo -> NUMBER .)
    PARC            reduce using rule 67 (primitivo -> NUMBER .)
    SEMICOLON       reduce using rule 67 (primitivo -> NUMBER .)
    COMMA           reduce using rule 67 (primitivo -> NUMBER .)


state 35

    (68) primitivo -> FLOAT .

    QUESTIONM       reduce using rule 68 (primitivo -> FLOAT .)
    PLUS            reduce using rule 68 (primitivo -> FLOAT .)
    BY              reduce using rule 68 (primitivo -> FLOAT .)
    DIVIDED         reduce using rule 68 (primitivo -> FLOAT .)
    LESS            reduce using rule 68 (primitivo -> FLOAT .)
    MODUL           reduce using rule 68 (primitivo -> FLOAT .)
    DEQUAL          reduce using rule 68 (primitivo -> FLOAT .)
    DIFERENT        reduce using rule 68 (primitivo -> FLOAT .)
    MINOR           reduce using rule 68 (primitivo -> FLOAT .)
    MINOREQUAL      reduce using rule 68 (primitivo -> FLOAT .)
    GREATER         reduce using rule 68 (primitivo -> FLOAT .)
    GREATEREQUAL    reduce using rule 68 (primitivo -> FLOAT .)
    CONSOLE         reduce using rule 68 (primitivo -> FLOAT .)
    ID              reduce using rule 68 (primitivo -> FLOAT .)
    RIF             reduce using rule 68 (primitivo -> FLOAT .)
    RWHILE          reduce using rule 68 (primitivo -> FLOAT .)
    RFOR            reduce using rule 68 (primitivo -> FLOAT .)
    RBREAK          reduce using rule 68 (primitivo -> FLOAT .)
    RCONTINUE       reduce using rule 68 (primitivo -> FLOAT .)
    RRETURN         reduce using rule 68 (primitivo -> FLOAT .)
    RCONST          reduce using rule 68 (primitivo -> FLOAT .)
    RVAR            reduce using rule 68 (primitivo -> FLOAT .)
    NUMBER          reduce using rule 68 (primitivo -> FLOAT .)
    FLOAT           reduce using rule 68 (primitivo -> FLOAT .)
    STRING          reduce using rule 68 (primitivo -> FLOAT .)
    NOT             reduce using rule 68 (primitivo -> FLOAT .)
    TRUE            reduce using rule 68 (primitivo -> FLOAT .)
    FALSE           reduce using rule 68 (primitivo -> FLOAT .)
    $end            reduce using rule 68 (primitivo -> FLOAT .)
    LLAVEC          reduce using rule 68 (primitivo -> FLOAT .)
    DOUBLEDOT       reduce using rule 68 (primitivo -> FLOAT .)
    BRACKETC        reduce using rule 68 (primitivo -> FLOAT .)
    PARC            reduce using rule 68 (primitivo -> FLOAT .)
    SEMICOLON       reduce using rule 68 (primitivo -> FLOAT .)
    COMMA           reduce using rule 68 (primitivo -> FLOAT .)


state 36

    (69) primitivo -> STRING .

    QUESTIONM       reduce using rule 69 (primitivo -> STRING .)
    PLUS            reduce using rule 69 (primitivo -> STRING .)
    BY              reduce using rule 69 (primitivo -> STRING .)
    DIVIDED         reduce using rule 69 (primitivo -> STRING .)
    LESS            reduce using rule 69 (primitivo -> STRING .)
    MODUL           reduce using rule 69 (primitivo -> STRING .)
    DEQUAL          reduce using rule 69 (primitivo -> STRING .)
    DIFERENT        reduce using rule 69 (primitivo -> STRING .)
    MINOR           reduce using rule 69 (primitivo -> STRING .)
    MINOREQUAL      reduce using rule 69 (primitivo -> STRING .)
    GREATER         reduce using rule 69 (primitivo -> STRING .)
    GREATEREQUAL    reduce using rule 69 (primitivo -> STRING .)
    CONSOLE         reduce using rule 69 (primitivo -> STRING .)
    ID              reduce using rule 69 (primitivo -> STRING .)
    RIF             reduce using rule 69 (primitivo -> STRING .)
    RWHILE          reduce using rule 69 (primitivo -> STRING .)
    RFOR            reduce using rule 69 (primitivo -> STRING .)
    RBREAK          reduce using rule 69 (primitivo -> STRING .)
    RCONTINUE       reduce using rule 69 (primitivo -> STRING .)
    RRETURN         reduce using rule 69 (primitivo -> STRING .)
    RCONST          reduce using rule 69 (primitivo -> STRING .)
    RVAR            reduce using rule 69 (primitivo -> STRING .)
    NUMBER          reduce using rule 69 (primitivo -> STRING .)
    FLOAT           reduce using rule 69 (primitivo -> STRING .)
    STRING          reduce using rule 69 (primitivo -> STRING .)
    NOT             reduce using rule 69 (primitivo -> STRING .)
    TRUE            reduce using rule 69 (primitivo -> STRING .)
    FALSE           reduce using rule 69 (primitivo -> STRING .)
    $end            reduce using rule 69 (primitivo -> STRING .)
    LLAVEC          reduce using rule 69 (primitivo -> STRING .)
    DOUBLEDOT       reduce using rule 69 (primitivo -> STRING .)
    BRACKETC        reduce using rule 69 (primitivo -> STRING .)
    PARC            reduce using rule 69 (primitivo -> STRING .)
    SEMICOLON       reduce using rule 69 (primitivo -> STRING .)
    COMMA           reduce using rule 69 (primitivo -> STRING .)


state 37

    (70) primitivo -> boolean .
    (64) logica -> boolean . AND boolean
    (65) logica -> boolean . OR boolean

    QUESTIONM       reduce using rule 70 (primitivo -> boolean .)
    PLUS            reduce using rule 70 (primitivo -> boolean .)
    BY              reduce using rule 70 (primitivo -> boolean .)
    DIVIDED         reduce using rule 70 (primitivo -> boolean .)
    LESS            reduce using rule 70 (primitivo -> boolean .)
    MODUL           reduce using rule 70 (primitivo -> boolean .)
    DEQUAL          reduce using rule 70 (primitivo -> boolean .)
    DIFERENT        reduce using rule 70 (primitivo -> boolean .)
    MINOR           reduce using rule 70 (primitivo -> boolean .)
    MINOREQUAL      reduce using rule 70 (primitivo -> boolean .)
    GREATER         reduce using rule 70 (primitivo -> boolean .)
    GREATEREQUAL    reduce using rule 70 (primitivo -> boolean .)
    CONSOLE         reduce using rule 70 (primitivo -> boolean .)
    ID              reduce using rule 70 (primitivo -> boolean .)
    RIF             reduce using rule 70 (primitivo -> boolean .)
    RWHILE          reduce using rule 70 (primitivo -> boolean .)
    RFOR            reduce using rule 70 (primitivo -> boolean .)
    RBREAK          reduce using rule 70 (primitivo -> boolean .)
    RCONTINUE       reduce using rule 70 (primitivo -> boolean .)
    RRETURN         reduce using rule 70 (primitivo -> boolean .)
    RCONST          reduce using rule 70 (primitivo -> boolean .)
    RVAR            reduce using rule 70 (primitivo -> boolean .)
    NUMBER          reduce using rule 70 (primitivo -> boolean .)
    FLOAT           reduce using rule 70 (primitivo -> boolean .)
    STRING          reduce using rule 70 (primitivo -> boolean .)
    NOT             reduce using rule 70 (primitivo -> boolean .)
    TRUE            reduce using rule 70 (primitivo -> boolean .)
    FALSE           reduce using rule 70 (primitivo -> boolean .)
    $end            reduce using rule 70 (primitivo -> boolean .)
    LLAVEC          reduce using rule 70 (primitivo -> boolean .)
    DOUBLEDOT       reduce using rule 70 (primitivo -> boolean .)
    BRACKETC        reduce using rule 70 (primitivo -> boolean .)
    PARC            reduce using rule 70 (primitivo -> boolean .)
    SEMICOLON       reduce using rule 70 (primitivo -> boolean .)
    COMMA           reduce using rule 70 (primitivo -> boolean .)
    AND             shift and go to state 67
    OR              shift and go to state 68


state 38

    (66) logica -> NOT . boolean
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    boolean                        shift and go to state 69

state 39

    (75) boolean -> TRUE .

    AND             reduce using rule 75 (boolean -> TRUE .)
    OR              reduce using rule 75 (boolean -> TRUE .)
    QUESTIONM       reduce using rule 75 (boolean -> TRUE .)
    PLUS            reduce using rule 75 (boolean -> TRUE .)
    BY              reduce using rule 75 (boolean -> TRUE .)
    DIVIDED         reduce using rule 75 (boolean -> TRUE .)
    LESS            reduce using rule 75 (boolean -> TRUE .)
    MODUL           reduce using rule 75 (boolean -> TRUE .)
    DEQUAL          reduce using rule 75 (boolean -> TRUE .)
    DIFERENT        reduce using rule 75 (boolean -> TRUE .)
    MINOR           reduce using rule 75 (boolean -> TRUE .)
    MINOREQUAL      reduce using rule 75 (boolean -> TRUE .)
    GREATER         reduce using rule 75 (boolean -> TRUE .)
    GREATEREQUAL    reduce using rule 75 (boolean -> TRUE .)
    CONSOLE         reduce using rule 75 (boolean -> TRUE .)
    ID              reduce using rule 75 (boolean -> TRUE .)
    RIF             reduce using rule 75 (boolean -> TRUE .)
    RWHILE          reduce using rule 75 (boolean -> TRUE .)
    RFOR            reduce using rule 75 (boolean -> TRUE .)
    RBREAK          reduce using rule 75 (boolean -> TRUE .)
    RCONTINUE       reduce using rule 75 (boolean -> TRUE .)
    RRETURN         reduce using rule 75 (boolean -> TRUE .)
    RCONST          reduce using rule 75 (boolean -> TRUE .)
    RVAR            reduce using rule 75 (boolean -> TRUE .)
    NUMBER          reduce using rule 75 (boolean -> TRUE .)
    FLOAT           reduce using rule 75 (boolean -> TRUE .)
    STRING          reduce using rule 75 (boolean -> TRUE .)
    NOT             reduce using rule 75 (boolean -> TRUE .)
    TRUE            reduce using rule 75 (boolean -> TRUE .)
    FALSE           reduce using rule 75 (boolean -> TRUE .)
    $end            reduce using rule 75 (boolean -> TRUE .)
    LLAVEC          reduce using rule 75 (boolean -> TRUE .)
    DOUBLEDOT       reduce using rule 75 (boolean -> TRUE .)
    BRACKETC        reduce using rule 75 (boolean -> TRUE .)
    PARC            reduce using rule 75 (boolean -> TRUE .)
    SEMICOLON       reduce using rule 75 (boolean -> TRUE .)
    COMMA           reduce using rule 75 (boolean -> TRUE .)


state 40

    (76) boolean -> FALSE .

    AND             reduce using rule 76 (boolean -> FALSE .)
    OR              reduce using rule 76 (boolean -> FALSE .)
    QUESTIONM       reduce using rule 76 (boolean -> FALSE .)
    PLUS            reduce using rule 76 (boolean -> FALSE .)
    BY              reduce using rule 76 (boolean -> FALSE .)
    DIVIDED         reduce using rule 76 (boolean -> FALSE .)
    LESS            reduce using rule 76 (boolean -> FALSE .)
    MODUL           reduce using rule 76 (boolean -> FALSE .)
    DEQUAL          reduce using rule 76 (boolean -> FALSE .)
    DIFERENT        reduce using rule 76 (boolean -> FALSE .)
    MINOR           reduce using rule 76 (boolean -> FALSE .)
    MINOREQUAL      reduce using rule 76 (boolean -> FALSE .)
    GREATER         reduce using rule 76 (boolean -> FALSE .)
    GREATEREQUAL    reduce using rule 76 (boolean -> FALSE .)
    CONSOLE         reduce using rule 76 (boolean -> FALSE .)
    ID              reduce using rule 76 (boolean -> FALSE .)
    RIF             reduce using rule 76 (boolean -> FALSE .)
    RWHILE          reduce using rule 76 (boolean -> FALSE .)
    RFOR            reduce using rule 76 (boolean -> FALSE .)
    RBREAK          reduce using rule 76 (boolean -> FALSE .)
    RCONTINUE       reduce using rule 76 (boolean -> FALSE .)
    RRETURN         reduce using rule 76 (boolean -> FALSE .)
    RCONST          reduce using rule 76 (boolean -> FALSE .)
    RVAR            reduce using rule 76 (boolean -> FALSE .)
    NUMBER          reduce using rule 76 (boolean -> FALSE .)
    FLOAT           reduce using rule 76 (boolean -> FALSE .)
    STRING          reduce using rule 76 (boolean -> FALSE .)
    NOT             reduce using rule 76 (boolean -> FALSE .)
    TRUE            reduce using rule 76 (boolean -> FALSE .)
    FALSE           reduce using rule 76 (boolean -> FALSE .)
    $end            reduce using rule 76 (boolean -> FALSE .)
    LLAVEC          reduce using rule 76 (boolean -> FALSE .)
    DOUBLEDOT       reduce using rule 76 (boolean -> FALSE .)
    BRACKETC        reduce using rule 76 (boolean -> FALSE .)
    PARC            reduce using rule 76 (boolean -> FALSE .)
    SEMICOLON       reduce using rule 76 (boolean -> FALSE .)
    COMMA           reduce using rule 76 (boolean -> FALSE .)


state 41

    (2) instrucciones -> instrucciones instruccion .

    CONSOLE         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RIF             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RWHILE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RFOR            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RBREAK          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RCONTINUE       reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RRETURN         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RCONST          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RVAR            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    NUMBER          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FLOAT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    STRING          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LESS            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    NOT             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    TRUE            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FALSE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVEC          reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 42

    (15) print -> CONSOLE DOT . LOG PARA expression PARC

    LOG             shift and go to state 70


state 43

    (34) ternario -> expression QUESTIONM . expression DOUBLEDOT expression
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 71
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 44

    (52) aritmetica -> expression PLUS . expression
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 72
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 45

    (53) aritmetica -> expression BY . expression
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 73
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 46

    (54) aritmetica -> expression DIVIDED . expression
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 74
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 47

    (55) aritmetica -> expression LESS . expression
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 75
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 48

    (56) aritmetica -> expression MODUL . expression
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 76
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 49

    (58) relacional -> expression DEQUAL . expression
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 77
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 50

    (59) relacional -> expression DIFERENT . expression
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 78
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 51

    (60) relacional -> expression MINOR . expression
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 79
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 52

    (61) relacional -> expression MINOREQUAL . expression
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 80
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 53

    (62) relacional -> expression GREATER . expression
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 81
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 54

    (63) relacional -> expression GREATEREQUAL . expression
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 82
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 55

    (18) declarevar -> declaration_type ID . DOUBLEDOT type EQUAL expression
    (19) declarevar -> declaration_type ID . EQUAL expression
    (20) declarevar -> declaration_type ID . DOUBLEDOT type
    (24) declareArray -> declaration_type ID . DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (25) declareArray -> declaration_type ID . DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (26) declareArray -> declaration_type ID . DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC

    DOUBLEDOT       shift and go to state 83
    EQUAL           shift and go to state 84


state 56

    (21) assignVar -> ID EQUAL . expression
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 85
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 57

    (22) assignVar -> ID PLUS . EQUAL expression

    EQUAL           shift and go to state 86


state 58

    (23) assignVar -> ID LESS . EQUAL expression

    EQUAL           shift and go to state 87


state 59

    (27) assingArray -> ID BRACKETO . expression BRACKETC EQUAL expression
    (51) id_ -> ID BRACKETO . expression BRACKETC
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 88
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 60

    (28) arrayFuncs -> ID DOT . RPUSH PARA expression PARC
    (29) arrayFuncs -> ID DOT . RPOP PARA PARC
    (71) arraysExpression -> ID DOT . RPOP PARA PARC
    (72) arraysExpression -> ID DOT . RINDEXOF PARA expression PARC
    (73) arraysExpression -> ID DOT . RJOIN PARA PARC
    (74) arraysExpression -> ID DOT . RLENGTH PARA PARC

    RPUSH           shift and go to state 89
    RPOP            shift and go to state 90
    RINDEXOF        shift and go to state 91
    RJOIN           shift and go to state 92
    RLENGTH         shift and go to state 93


state 61

    (57) aritmetica -> LESS expression .
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

    QUESTIONM       reduce using rule 57 (aritmetica -> LESS expression .)
    PLUS            reduce using rule 57 (aritmetica -> LESS expression .)
    BY              reduce using rule 57 (aritmetica -> LESS expression .)
    DIVIDED         reduce using rule 57 (aritmetica -> LESS expression .)
    LESS            reduce using rule 57 (aritmetica -> LESS expression .)
    MODUL           reduce using rule 57 (aritmetica -> LESS expression .)
    DEQUAL          reduce using rule 57 (aritmetica -> LESS expression .)
    DIFERENT        reduce using rule 57 (aritmetica -> LESS expression .)
    MINOR           reduce using rule 57 (aritmetica -> LESS expression .)
    MINOREQUAL      reduce using rule 57 (aritmetica -> LESS expression .)
    GREATER         reduce using rule 57 (aritmetica -> LESS expression .)
    GREATEREQUAL    reduce using rule 57 (aritmetica -> LESS expression .)
    CONSOLE         reduce using rule 57 (aritmetica -> LESS expression .)
    ID              reduce using rule 57 (aritmetica -> LESS expression .)
    RIF             reduce using rule 57 (aritmetica -> LESS expression .)
    RWHILE          reduce using rule 57 (aritmetica -> LESS expression .)
    RFOR            reduce using rule 57 (aritmetica -> LESS expression .)
    RBREAK          reduce using rule 57 (aritmetica -> LESS expression .)
    RCONTINUE       reduce using rule 57 (aritmetica -> LESS expression .)
    RRETURN         reduce using rule 57 (aritmetica -> LESS expression .)
    RCONST          reduce using rule 57 (aritmetica -> LESS expression .)
    RVAR            reduce using rule 57 (aritmetica -> LESS expression .)
    NUMBER          reduce using rule 57 (aritmetica -> LESS expression .)
    FLOAT           reduce using rule 57 (aritmetica -> LESS expression .)
    STRING          reduce using rule 57 (aritmetica -> LESS expression .)
    NOT             reduce using rule 57 (aritmetica -> LESS expression .)
    TRUE            reduce using rule 57 (aritmetica -> LESS expression .)
    FALSE           reduce using rule 57 (aritmetica -> LESS expression .)
    $end            reduce using rule 57 (aritmetica -> LESS expression .)
    LLAVEC          reduce using rule 57 (aritmetica -> LESS expression .)
    DOUBLEDOT       reduce using rule 57 (aritmetica -> LESS expression .)
    BRACKETC        reduce using rule 57 (aritmetica -> LESS expression .)
    PARC            reduce using rule 57 (aritmetica -> LESS expression .)
    SEMICOLON       reduce using rule 57 (aritmetica -> LESS expression .)
    COMMA           reduce using rule 57 (aritmetica -> LESS expression .)

  ! PLUS            [ shift and go to state 44 ]
  ! BY              [ shift and go to state 45 ]
  ! DIVIDED         [ shift and go to state 46 ]
  ! LESS            [ shift and go to state 47 ]
  ! MODUL           [ shift and go to state 48 ]
  ! DEQUAL          [ shift and go to state 49 ]
  ! DIFERENT        [ shift and go to state 50 ]
  ! MINOR           [ shift and go to state 51 ]
  ! MINOREQUAL      [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! GREATEREQUAL    [ shift and go to state 54 ]


state 62

    (50) id_ -> ID .
    (51) id_ -> ID . BRACKETO expression BRACKETC
    (71) arraysExpression -> ID . DOT RPOP PARA PARC
    (72) arraysExpression -> ID . DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> ID . DOT RJOIN PARA PARC
    (74) arraysExpression -> ID . DOT RLENGTH PARA PARC

    PLUS            reduce using rule 50 (id_ -> ID .)
    BY              reduce using rule 50 (id_ -> ID .)
    DIVIDED         reduce using rule 50 (id_ -> ID .)
    LESS            reduce using rule 50 (id_ -> ID .)
    MODUL           reduce using rule 50 (id_ -> ID .)
    DEQUAL          reduce using rule 50 (id_ -> ID .)
    DIFERENT        reduce using rule 50 (id_ -> ID .)
    MINOR           reduce using rule 50 (id_ -> ID .)
    MINOREQUAL      reduce using rule 50 (id_ -> ID .)
    GREATER         reduce using rule 50 (id_ -> ID .)
    GREATEREQUAL    reduce using rule 50 (id_ -> ID .)
    QUESTIONM       reduce using rule 50 (id_ -> ID .)
    CONSOLE         reduce using rule 50 (id_ -> ID .)
    ID              reduce using rule 50 (id_ -> ID .)
    RIF             reduce using rule 50 (id_ -> ID .)
    RWHILE          reduce using rule 50 (id_ -> ID .)
    RFOR            reduce using rule 50 (id_ -> ID .)
    RBREAK          reduce using rule 50 (id_ -> ID .)
    RCONTINUE       reduce using rule 50 (id_ -> ID .)
    RRETURN         reduce using rule 50 (id_ -> ID .)
    RCONST          reduce using rule 50 (id_ -> ID .)
    RVAR            reduce using rule 50 (id_ -> ID .)
    NUMBER          reduce using rule 50 (id_ -> ID .)
    FLOAT           reduce using rule 50 (id_ -> ID .)
    STRING          reduce using rule 50 (id_ -> ID .)
    NOT             reduce using rule 50 (id_ -> ID .)
    TRUE            reduce using rule 50 (id_ -> ID .)
    FALSE           reduce using rule 50 (id_ -> ID .)
    $end            reduce using rule 50 (id_ -> ID .)
    LLAVEC          reduce using rule 50 (id_ -> ID .)
    DOUBLEDOT       reduce using rule 50 (id_ -> ID .)
    BRACKETC        reduce using rule 50 (id_ -> ID .)
    PARC            reduce using rule 50 (id_ -> ID .)
    SEMICOLON       reduce using rule 50 (id_ -> ID .)
    COMMA           reduce using rule 50 (id_ -> ID .)
    BRACKETO        shift and go to state 94
    DOT             shift and go to state 95


state 63

    (30) if_else -> RIF PARA . expression PARC LLAVEA instrucciones LLAVEC else
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 96
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 64

    (35) while_ -> RWHILE PARA . expression PARC LLAVEA instrucciones LLAVEC
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 97
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 65

    (36) for_ -> RFOR PARA . declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (37) for_ -> RFOR PARA . declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (18) declarevar -> . declaration_type ID DOUBLEDOT type EQUAL expression
    (19) declarevar -> . declaration_type ID EQUAL expression
    (20) declarevar -> . declaration_type ID DOUBLEDOT type
    (16) declaration_type -> . RCONST
    (17) declaration_type -> . RVAR

    RCONST          shift and go to state 28
    RVAR            shift and go to state 29

    declarevar                     shift and go to state 98
    declaration_type               shift and go to state 99

state 66

    (41) transfer -> RRETURN expression .
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

  ! shift/reduce conflict for LESS resolved as shift
    CONSOLE         reduce using rule 41 (transfer -> RRETURN expression .)
    ID              reduce using rule 41 (transfer -> RRETURN expression .)
    RIF             reduce using rule 41 (transfer -> RRETURN expression .)
    RWHILE          reduce using rule 41 (transfer -> RRETURN expression .)
    RFOR            reduce using rule 41 (transfer -> RRETURN expression .)
    RBREAK          reduce using rule 41 (transfer -> RRETURN expression .)
    RCONTINUE       reduce using rule 41 (transfer -> RRETURN expression .)
    RRETURN         reduce using rule 41 (transfer -> RRETURN expression .)
    RCONST          reduce using rule 41 (transfer -> RRETURN expression .)
    RVAR            reduce using rule 41 (transfer -> RRETURN expression .)
    NUMBER          reduce using rule 41 (transfer -> RRETURN expression .)
    FLOAT           reduce using rule 41 (transfer -> RRETURN expression .)
    STRING          reduce using rule 41 (transfer -> RRETURN expression .)
    NOT             reduce using rule 41 (transfer -> RRETURN expression .)
    TRUE            reduce using rule 41 (transfer -> RRETURN expression .)
    FALSE           reduce using rule 41 (transfer -> RRETURN expression .)
    $end            reduce using rule 41 (transfer -> RRETURN expression .)
    LLAVEC          reduce using rule 41 (transfer -> RRETURN expression .)
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48
    DEQUAL          shift and go to state 49
    DIFERENT        shift and go to state 50
    MINOR           shift and go to state 51
    MINOREQUAL      shift and go to state 52
    GREATER         shift and go to state 53
    GREATEREQUAL    shift and go to state 54

  ! LESS            [ reduce using rule 41 (transfer -> RRETURN expression .) ]


state 67

    (64) logica -> boolean AND . boolean
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    boolean                        shift and go to state 100

state 68

    (65) logica -> boolean OR . boolean
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    boolean                        shift and go to state 101

state 69

    (66) logica -> NOT boolean .

    QUESTIONM       reduce using rule 66 (logica -> NOT boolean .)
    PLUS            reduce using rule 66 (logica -> NOT boolean .)
    BY              reduce using rule 66 (logica -> NOT boolean .)
    DIVIDED         reduce using rule 66 (logica -> NOT boolean .)
    LESS            reduce using rule 66 (logica -> NOT boolean .)
    MODUL           reduce using rule 66 (logica -> NOT boolean .)
    DEQUAL          reduce using rule 66 (logica -> NOT boolean .)
    DIFERENT        reduce using rule 66 (logica -> NOT boolean .)
    MINOR           reduce using rule 66 (logica -> NOT boolean .)
    MINOREQUAL      reduce using rule 66 (logica -> NOT boolean .)
    GREATER         reduce using rule 66 (logica -> NOT boolean .)
    GREATEREQUAL    reduce using rule 66 (logica -> NOT boolean .)
    CONSOLE         reduce using rule 66 (logica -> NOT boolean .)
    ID              reduce using rule 66 (logica -> NOT boolean .)
    RIF             reduce using rule 66 (logica -> NOT boolean .)
    RWHILE          reduce using rule 66 (logica -> NOT boolean .)
    RFOR            reduce using rule 66 (logica -> NOT boolean .)
    RBREAK          reduce using rule 66 (logica -> NOT boolean .)
    RCONTINUE       reduce using rule 66 (logica -> NOT boolean .)
    RRETURN         reduce using rule 66 (logica -> NOT boolean .)
    RCONST          reduce using rule 66 (logica -> NOT boolean .)
    RVAR            reduce using rule 66 (logica -> NOT boolean .)
    NUMBER          reduce using rule 66 (logica -> NOT boolean .)
    FLOAT           reduce using rule 66 (logica -> NOT boolean .)
    STRING          reduce using rule 66 (logica -> NOT boolean .)
    NOT             reduce using rule 66 (logica -> NOT boolean .)
    TRUE            reduce using rule 66 (logica -> NOT boolean .)
    FALSE           reduce using rule 66 (logica -> NOT boolean .)
    $end            reduce using rule 66 (logica -> NOT boolean .)
    LLAVEC          reduce using rule 66 (logica -> NOT boolean .)
    DOUBLEDOT       reduce using rule 66 (logica -> NOT boolean .)
    BRACKETC        reduce using rule 66 (logica -> NOT boolean .)
    PARC            reduce using rule 66 (logica -> NOT boolean .)
    SEMICOLON       reduce using rule 66 (logica -> NOT boolean .)
    COMMA           reduce using rule 66 (logica -> NOT boolean .)


state 70

    (15) print -> CONSOLE DOT LOG . PARA expression PARC

    PARA            shift and go to state 102


state 71

    (34) ternario -> expression QUESTIONM expression . DOUBLEDOT expression
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

    DOUBLEDOT       shift and go to state 103
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48
    DEQUAL          shift and go to state 49
    DIFERENT        shift and go to state 50
    MINOR           shift and go to state 51
    MINOREQUAL      shift and go to state 52
    GREATER         shift and go to state 53
    GREATEREQUAL    shift and go to state 54


state 72

    (52) aritmetica -> expression PLUS expression .
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

    QUESTIONM       reduce using rule 52 (aritmetica -> expression PLUS expression .)
    PLUS            reduce using rule 52 (aritmetica -> expression PLUS expression .)
    LESS            reduce using rule 52 (aritmetica -> expression PLUS expression .)
    DEQUAL          reduce using rule 52 (aritmetica -> expression PLUS expression .)
    DIFERENT        reduce using rule 52 (aritmetica -> expression PLUS expression .)
    MINOR           reduce using rule 52 (aritmetica -> expression PLUS expression .)
    MINOREQUAL      reduce using rule 52 (aritmetica -> expression PLUS expression .)
    GREATER         reduce using rule 52 (aritmetica -> expression PLUS expression .)
    GREATEREQUAL    reduce using rule 52 (aritmetica -> expression PLUS expression .)
    CONSOLE         reduce using rule 52 (aritmetica -> expression PLUS expression .)
    ID              reduce using rule 52 (aritmetica -> expression PLUS expression .)
    RIF             reduce using rule 52 (aritmetica -> expression PLUS expression .)
    RWHILE          reduce using rule 52 (aritmetica -> expression PLUS expression .)
    RFOR            reduce using rule 52 (aritmetica -> expression PLUS expression .)
    RBREAK          reduce using rule 52 (aritmetica -> expression PLUS expression .)
    RCONTINUE       reduce using rule 52 (aritmetica -> expression PLUS expression .)
    RRETURN         reduce using rule 52 (aritmetica -> expression PLUS expression .)
    RCONST          reduce using rule 52 (aritmetica -> expression PLUS expression .)
    RVAR            reduce using rule 52 (aritmetica -> expression PLUS expression .)
    NUMBER          reduce using rule 52 (aritmetica -> expression PLUS expression .)
    FLOAT           reduce using rule 52 (aritmetica -> expression PLUS expression .)
    STRING          reduce using rule 52 (aritmetica -> expression PLUS expression .)
    NOT             reduce using rule 52 (aritmetica -> expression PLUS expression .)
    TRUE            reduce using rule 52 (aritmetica -> expression PLUS expression .)
    FALSE           reduce using rule 52 (aritmetica -> expression PLUS expression .)
    $end            reduce using rule 52 (aritmetica -> expression PLUS expression .)
    LLAVEC          reduce using rule 52 (aritmetica -> expression PLUS expression .)
    DOUBLEDOT       reduce using rule 52 (aritmetica -> expression PLUS expression .)
    BRACKETC        reduce using rule 52 (aritmetica -> expression PLUS expression .)
    PARC            reduce using rule 52 (aritmetica -> expression PLUS expression .)
    SEMICOLON       reduce using rule 52 (aritmetica -> expression PLUS expression .)
    COMMA           reduce using rule 52 (aritmetica -> expression PLUS expression .)
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    MODUL           shift and go to state 48

  ! BY              [ reduce using rule 52 (aritmetica -> expression PLUS expression .) ]
  ! DIVIDED         [ reduce using rule 52 (aritmetica -> expression PLUS expression .) ]
  ! MODUL           [ reduce using rule 52 (aritmetica -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 44 ]
  ! LESS            [ shift and go to state 47 ]
  ! DEQUAL          [ shift and go to state 49 ]
  ! DIFERENT        [ shift and go to state 50 ]
  ! MINOR           [ shift and go to state 51 ]
  ! MINOREQUAL      [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! GREATEREQUAL    [ shift and go to state 54 ]


state 73

    (53) aritmetica -> expression BY expression .
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

    QUESTIONM       reduce using rule 53 (aritmetica -> expression BY expression .)
    PLUS            reduce using rule 53 (aritmetica -> expression BY expression .)
    BY              reduce using rule 53 (aritmetica -> expression BY expression .)
    DIVIDED         reduce using rule 53 (aritmetica -> expression BY expression .)
    LESS            reduce using rule 53 (aritmetica -> expression BY expression .)
    MODUL           reduce using rule 53 (aritmetica -> expression BY expression .)
    DEQUAL          reduce using rule 53 (aritmetica -> expression BY expression .)
    DIFERENT        reduce using rule 53 (aritmetica -> expression BY expression .)
    MINOR           reduce using rule 53 (aritmetica -> expression BY expression .)
    MINOREQUAL      reduce using rule 53 (aritmetica -> expression BY expression .)
    GREATER         reduce using rule 53 (aritmetica -> expression BY expression .)
    GREATEREQUAL    reduce using rule 53 (aritmetica -> expression BY expression .)
    CONSOLE         reduce using rule 53 (aritmetica -> expression BY expression .)
    ID              reduce using rule 53 (aritmetica -> expression BY expression .)
    RIF             reduce using rule 53 (aritmetica -> expression BY expression .)
    RWHILE          reduce using rule 53 (aritmetica -> expression BY expression .)
    RFOR            reduce using rule 53 (aritmetica -> expression BY expression .)
    RBREAK          reduce using rule 53 (aritmetica -> expression BY expression .)
    RCONTINUE       reduce using rule 53 (aritmetica -> expression BY expression .)
    RRETURN         reduce using rule 53 (aritmetica -> expression BY expression .)
    RCONST          reduce using rule 53 (aritmetica -> expression BY expression .)
    RVAR            reduce using rule 53 (aritmetica -> expression BY expression .)
    NUMBER          reduce using rule 53 (aritmetica -> expression BY expression .)
    FLOAT           reduce using rule 53 (aritmetica -> expression BY expression .)
    STRING          reduce using rule 53 (aritmetica -> expression BY expression .)
    NOT             reduce using rule 53 (aritmetica -> expression BY expression .)
    TRUE            reduce using rule 53 (aritmetica -> expression BY expression .)
    FALSE           reduce using rule 53 (aritmetica -> expression BY expression .)
    $end            reduce using rule 53 (aritmetica -> expression BY expression .)
    LLAVEC          reduce using rule 53 (aritmetica -> expression BY expression .)
    DOUBLEDOT       reduce using rule 53 (aritmetica -> expression BY expression .)
    BRACKETC        reduce using rule 53 (aritmetica -> expression BY expression .)
    PARC            reduce using rule 53 (aritmetica -> expression BY expression .)
    SEMICOLON       reduce using rule 53 (aritmetica -> expression BY expression .)
    COMMA           reduce using rule 53 (aritmetica -> expression BY expression .)

  ! PLUS            [ shift and go to state 44 ]
  ! BY              [ shift and go to state 45 ]
  ! DIVIDED         [ shift and go to state 46 ]
  ! LESS            [ shift and go to state 47 ]
  ! MODUL           [ shift and go to state 48 ]
  ! DEQUAL          [ shift and go to state 49 ]
  ! DIFERENT        [ shift and go to state 50 ]
  ! MINOR           [ shift and go to state 51 ]
  ! MINOREQUAL      [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! GREATEREQUAL    [ shift and go to state 54 ]


state 74

    (54) aritmetica -> expression DIVIDED expression .
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

    QUESTIONM       reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    PLUS            reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    BY              reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    DIVIDED         reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    LESS            reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    MODUL           reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    DEQUAL          reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    DIFERENT        reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    MINOR           reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    MINOREQUAL      reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    GREATER         reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    GREATEREQUAL    reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    CONSOLE         reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    ID              reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    RIF             reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    RWHILE          reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    RFOR            reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    RBREAK          reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    RCONTINUE       reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    RRETURN         reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    RCONST          reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    RVAR            reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    NUMBER          reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    FLOAT           reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    STRING          reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    NOT             reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    TRUE            reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    FALSE           reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    $end            reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    LLAVEC          reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    DOUBLEDOT       reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    BRACKETC        reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    PARC            reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    SEMICOLON       reduce using rule 54 (aritmetica -> expression DIVIDED expression .)
    COMMA           reduce using rule 54 (aritmetica -> expression DIVIDED expression .)

  ! PLUS            [ shift and go to state 44 ]
  ! BY              [ shift and go to state 45 ]
  ! DIVIDED         [ shift and go to state 46 ]
  ! LESS            [ shift and go to state 47 ]
  ! MODUL           [ shift and go to state 48 ]
  ! DEQUAL          [ shift and go to state 49 ]
  ! DIFERENT        [ shift and go to state 50 ]
  ! MINOR           [ shift and go to state 51 ]
  ! MINOREQUAL      [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! GREATEREQUAL    [ shift and go to state 54 ]


state 75

    (55) aritmetica -> expression LESS expression .
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

    QUESTIONM       reduce using rule 55 (aritmetica -> expression LESS expression .)
    PLUS            reduce using rule 55 (aritmetica -> expression LESS expression .)
    LESS            reduce using rule 55 (aritmetica -> expression LESS expression .)
    DEQUAL          reduce using rule 55 (aritmetica -> expression LESS expression .)
    DIFERENT        reduce using rule 55 (aritmetica -> expression LESS expression .)
    MINOR           reduce using rule 55 (aritmetica -> expression LESS expression .)
    MINOREQUAL      reduce using rule 55 (aritmetica -> expression LESS expression .)
    GREATER         reduce using rule 55 (aritmetica -> expression LESS expression .)
    GREATEREQUAL    reduce using rule 55 (aritmetica -> expression LESS expression .)
    CONSOLE         reduce using rule 55 (aritmetica -> expression LESS expression .)
    ID              reduce using rule 55 (aritmetica -> expression LESS expression .)
    RIF             reduce using rule 55 (aritmetica -> expression LESS expression .)
    RWHILE          reduce using rule 55 (aritmetica -> expression LESS expression .)
    RFOR            reduce using rule 55 (aritmetica -> expression LESS expression .)
    RBREAK          reduce using rule 55 (aritmetica -> expression LESS expression .)
    RCONTINUE       reduce using rule 55 (aritmetica -> expression LESS expression .)
    RRETURN         reduce using rule 55 (aritmetica -> expression LESS expression .)
    RCONST          reduce using rule 55 (aritmetica -> expression LESS expression .)
    RVAR            reduce using rule 55 (aritmetica -> expression LESS expression .)
    NUMBER          reduce using rule 55 (aritmetica -> expression LESS expression .)
    FLOAT           reduce using rule 55 (aritmetica -> expression LESS expression .)
    STRING          reduce using rule 55 (aritmetica -> expression LESS expression .)
    NOT             reduce using rule 55 (aritmetica -> expression LESS expression .)
    TRUE            reduce using rule 55 (aritmetica -> expression LESS expression .)
    FALSE           reduce using rule 55 (aritmetica -> expression LESS expression .)
    $end            reduce using rule 55 (aritmetica -> expression LESS expression .)
    LLAVEC          reduce using rule 55 (aritmetica -> expression LESS expression .)
    DOUBLEDOT       reduce using rule 55 (aritmetica -> expression LESS expression .)
    BRACKETC        reduce using rule 55 (aritmetica -> expression LESS expression .)
    PARC            reduce using rule 55 (aritmetica -> expression LESS expression .)
    SEMICOLON       reduce using rule 55 (aritmetica -> expression LESS expression .)
    COMMA           reduce using rule 55 (aritmetica -> expression LESS expression .)
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    MODUL           shift and go to state 48

  ! BY              [ reduce using rule 55 (aritmetica -> expression LESS expression .) ]
  ! DIVIDED         [ reduce using rule 55 (aritmetica -> expression LESS expression .) ]
  ! MODUL           [ reduce using rule 55 (aritmetica -> expression LESS expression .) ]
  ! PLUS            [ shift and go to state 44 ]
  ! LESS            [ shift and go to state 47 ]
  ! DEQUAL          [ shift and go to state 49 ]
  ! DIFERENT        [ shift and go to state 50 ]
  ! MINOR           [ shift and go to state 51 ]
  ! MINOREQUAL      [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! GREATEREQUAL    [ shift and go to state 54 ]


state 76

    (56) aritmetica -> expression MODUL expression .
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

    QUESTIONM       reduce using rule 56 (aritmetica -> expression MODUL expression .)
    PLUS            reduce using rule 56 (aritmetica -> expression MODUL expression .)
    BY              reduce using rule 56 (aritmetica -> expression MODUL expression .)
    DIVIDED         reduce using rule 56 (aritmetica -> expression MODUL expression .)
    LESS            reduce using rule 56 (aritmetica -> expression MODUL expression .)
    MODUL           reduce using rule 56 (aritmetica -> expression MODUL expression .)
    DEQUAL          reduce using rule 56 (aritmetica -> expression MODUL expression .)
    DIFERENT        reduce using rule 56 (aritmetica -> expression MODUL expression .)
    MINOR           reduce using rule 56 (aritmetica -> expression MODUL expression .)
    MINOREQUAL      reduce using rule 56 (aritmetica -> expression MODUL expression .)
    GREATER         reduce using rule 56 (aritmetica -> expression MODUL expression .)
    GREATEREQUAL    reduce using rule 56 (aritmetica -> expression MODUL expression .)
    CONSOLE         reduce using rule 56 (aritmetica -> expression MODUL expression .)
    ID              reduce using rule 56 (aritmetica -> expression MODUL expression .)
    RIF             reduce using rule 56 (aritmetica -> expression MODUL expression .)
    RWHILE          reduce using rule 56 (aritmetica -> expression MODUL expression .)
    RFOR            reduce using rule 56 (aritmetica -> expression MODUL expression .)
    RBREAK          reduce using rule 56 (aritmetica -> expression MODUL expression .)
    RCONTINUE       reduce using rule 56 (aritmetica -> expression MODUL expression .)
    RRETURN         reduce using rule 56 (aritmetica -> expression MODUL expression .)
    RCONST          reduce using rule 56 (aritmetica -> expression MODUL expression .)
    RVAR            reduce using rule 56 (aritmetica -> expression MODUL expression .)
    NUMBER          reduce using rule 56 (aritmetica -> expression MODUL expression .)
    FLOAT           reduce using rule 56 (aritmetica -> expression MODUL expression .)
    STRING          reduce using rule 56 (aritmetica -> expression MODUL expression .)
    NOT             reduce using rule 56 (aritmetica -> expression MODUL expression .)
    TRUE            reduce using rule 56 (aritmetica -> expression MODUL expression .)
    FALSE           reduce using rule 56 (aritmetica -> expression MODUL expression .)
    $end            reduce using rule 56 (aritmetica -> expression MODUL expression .)
    LLAVEC          reduce using rule 56 (aritmetica -> expression MODUL expression .)
    DOUBLEDOT       reduce using rule 56 (aritmetica -> expression MODUL expression .)
    BRACKETC        reduce using rule 56 (aritmetica -> expression MODUL expression .)
    PARC            reduce using rule 56 (aritmetica -> expression MODUL expression .)
    SEMICOLON       reduce using rule 56 (aritmetica -> expression MODUL expression .)
    COMMA           reduce using rule 56 (aritmetica -> expression MODUL expression .)

  ! PLUS            [ shift and go to state 44 ]
  ! BY              [ shift and go to state 45 ]
  ! DIVIDED         [ shift and go to state 46 ]
  ! LESS            [ shift and go to state 47 ]
  ! MODUL           [ shift and go to state 48 ]
  ! DEQUAL          [ shift and go to state 49 ]
  ! DIFERENT        [ shift and go to state 50 ]
  ! MINOR           [ shift and go to state 51 ]
  ! MINOREQUAL      [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! GREATEREQUAL    [ shift and go to state 54 ]


state 77

    (58) relacional -> expression DEQUAL expression .
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

    QUESTIONM       reduce using rule 58 (relacional -> expression DEQUAL expression .)
    DEQUAL          reduce using rule 58 (relacional -> expression DEQUAL expression .)
    DIFERENT        reduce using rule 58 (relacional -> expression DEQUAL expression .)
    MINOR           reduce using rule 58 (relacional -> expression DEQUAL expression .)
    MINOREQUAL      reduce using rule 58 (relacional -> expression DEQUAL expression .)
    GREATER         reduce using rule 58 (relacional -> expression DEQUAL expression .)
    GREATEREQUAL    reduce using rule 58 (relacional -> expression DEQUAL expression .)
    CONSOLE         reduce using rule 58 (relacional -> expression DEQUAL expression .)
    ID              reduce using rule 58 (relacional -> expression DEQUAL expression .)
    RIF             reduce using rule 58 (relacional -> expression DEQUAL expression .)
    RWHILE          reduce using rule 58 (relacional -> expression DEQUAL expression .)
    RFOR            reduce using rule 58 (relacional -> expression DEQUAL expression .)
    RBREAK          reduce using rule 58 (relacional -> expression DEQUAL expression .)
    RCONTINUE       reduce using rule 58 (relacional -> expression DEQUAL expression .)
    RRETURN         reduce using rule 58 (relacional -> expression DEQUAL expression .)
    RCONST          reduce using rule 58 (relacional -> expression DEQUAL expression .)
    RVAR            reduce using rule 58 (relacional -> expression DEQUAL expression .)
    NUMBER          reduce using rule 58 (relacional -> expression DEQUAL expression .)
    FLOAT           reduce using rule 58 (relacional -> expression DEQUAL expression .)
    STRING          reduce using rule 58 (relacional -> expression DEQUAL expression .)
    NOT             reduce using rule 58 (relacional -> expression DEQUAL expression .)
    TRUE            reduce using rule 58 (relacional -> expression DEQUAL expression .)
    FALSE           reduce using rule 58 (relacional -> expression DEQUAL expression .)
    $end            reduce using rule 58 (relacional -> expression DEQUAL expression .)
    LLAVEC          reduce using rule 58 (relacional -> expression DEQUAL expression .)
    DOUBLEDOT       reduce using rule 58 (relacional -> expression DEQUAL expression .)
    BRACKETC        reduce using rule 58 (relacional -> expression DEQUAL expression .)
    PARC            reduce using rule 58 (relacional -> expression DEQUAL expression .)
    SEMICOLON       reduce using rule 58 (relacional -> expression DEQUAL expression .)
    COMMA           reduce using rule 58 (relacional -> expression DEQUAL expression .)
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48

  ! PLUS            [ reduce using rule 58 (relacional -> expression DEQUAL expression .) ]
  ! BY              [ reduce using rule 58 (relacional -> expression DEQUAL expression .) ]
  ! DIVIDED         [ reduce using rule 58 (relacional -> expression DEQUAL expression .) ]
  ! LESS            [ reduce using rule 58 (relacional -> expression DEQUAL expression .) ]
  ! MODUL           [ reduce using rule 58 (relacional -> expression DEQUAL expression .) ]
  ! DEQUAL          [ shift and go to state 49 ]
  ! DIFERENT        [ shift and go to state 50 ]
  ! MINOR           [ shift and go to state 51 ]
  ! MINOREQUAL      [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! GREATEREQUAL    [ shift and go to state 54 ]


state 78

    (59) relacional -> expression DIFERENT expression .
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

    QUESTIONM       reduce using rule 59 (relacional -> expression DIFERENT expression .)
    DEQUAL          reduce using rule 59 (relacional -> expression DIFERENT expression .)
    DIFERENT        reduce using rule 59 (relacional -> expression DIFERENT expression .)
    MINOR           reduce using rule 59 (relacional -> expression DIFERENT expression .)
    MINOREQUAL      reduce using rule 59 (relacional -> expression DIFERENT expression .)
    GREATER         reduce using rule 59 (relacional -> expression DIFERENT expression .)
    GREATEREQUAL    reduce using rule 59 (relacional -> expression DIFERENT expression .)
    CONSOLE         reduce using rule 59 (relacional -> expression DIFERENT expression .)
    ID              reduce using rule 59 (relacional -> expression DIFERENT expression .)
    RIF             reduce using rule 59 (relacional -> expression DIFERENT expression .)
    RWHILE          reduce using rule 59 (relacional -> expression DIFERENT expression .)
    RFOR            reduce using rule 59 (relacional -> expression DIFERENT expression .)
    RBREAK          reduce using rule 59 (relacional -> expression DIFERENT expression .)
    RCONTINUE       reduce using rule 59 (relacional -> expression DIFERENT expression .)
    RRETURN         reduce using rule 59 (relacional -> expression DIFERENT expression .)
    RCONST          reduce using rule 59 (relacional -> expression DIFERENT expression .)
    RVAR            reduce using rule 59 (relacional -> expression DIFERENT expression .)
    NUMBER          reduce using rule 59 (relacional -> expression DIFERENT expression .)
    FLOAT           reduce using rule 59 (relacional -> expression DIFERENT expression .)
    STRING          reduce using rule 59 (relacional -> expression DIFERENT expression .)
    NOT             reduce using rule 59 (relacional -> expression DIFERENT expression .)
    TRUE            reduce using rule 59 (relacional -> expression DIFERENT expression .)
    FALSE           reduce using rule 59 (relacional -> expression DIFERENT expression .)
    $end            reduce using rule 59 (relacional -> expression DIFERENT expression .)
    LLAVEC          reduce using rule 59 (relacional -> expression DIFERENT expression .)
    DOUBLEDOT       reduce using rule 59 (relacional -> expression DIFERENT expression .)
    BRACKETC        reduce using rule 59 (relacional -> expression DIFERENT expression .)
    PARC            reduce using rule 59 (relacional -> expression DIFERENT expression .)
    SEMICOLON       reduce using rule 59 (relacional -> expression DIFERENT expression .)
    COMMA           reduce using rule 59 (relacional -> expression DIFERENT expression .)
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48

  ! PLUS            [ reduce using rule 59 (relacional -> expression DIFERENT expression .) ]
  ! BY              [ reduce using rule 59 (relacional -> expression DIFERENT expression .) ]
  ! DIVIDED         [ reduce using rule 59 (relacional -> expression DIFERENT expression .) ]
  ! LESS            [ reduce using rule 59 (relacional -> expression DIFERENT expression .) ]
  ! MODUL           [ reduce using rule 59 (relacional -> expression DIFERENT expression .) ]
  ! DEQUAL          [ shift and go to state 49 ]
  ! DIFERENT        [ shift and go to state 50 ]
  ! MINOR           [ shift and go to state 51 ]
  ! MINOREQUAL      [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! GREATEREQUAL    [ shift and go to state 54 ]


state 79

    (60) relacional -> expression MINOR expression .
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

    QUESTIONM       reduce using rule 60 (relacional -> expression MINOR expression .)
    DEQUAL          reduce using rule 60 (relacional -> expression MINOR expression .)
    DIFERENT        reduce using rule 60 (relacional -> expression MINOR expression .)
    MINOR           reduce using rule 60 (relacional -> expression MINOR expression .)
    MINOREQUAL      reduce using rule 60 (relacional -> expression MINOR expression .)
    GREATER         reduce using rule 60 (relacional -> expression MINOR expression .)
    GREATEREQUAL    reduce using rule 60 (relacional -> expression MINOR expression .)
    CONSOLE         reduce using rule 60 (relacional -> expression MINOR expression .)
    ID              reduce using rule 60 (relacional -> expression MINOR expression .)
    RIF             reduce using rule 60 (relacional -> expression MINOR expression .)
    RWHILE          reduce using rule 60 (relacional -> expression MINOR expression .)
    RFOR            reduce using rule 60 (relacional -> expression MINOR expression .)
    RBREAK          reduce using rule 60 (relacional -> expression MINOR expression .)
    RCONTINUE       reduce using rule 60 (relacional -> expression MINOR expression .)
    RRETURN         reduce using rule 60 (relacional -> expression MINOR expression .)
    RCONST          reduce using rule 60 (relacional -> expression MINOR expression .)
    RVAR            reduce using rule 60 (relacional -> expression MINOR expression .)
    NUMBER          reduce using rule 60 (relacional -> expression MINOR expression .)
    FLOAT           reduce using rule 60 (relacional -> expression MINOR expression .)
    STRING          reduce using rule 60 (relacional -> expression MINOR expression .)
    NOT             reduce using rule 60 (relacional -> expression MINOR expression .)
    TRUE            reduce using rule 60 (relacional -> expression MINOR expression .)
    FALSE           reduce using rule 60 (relacional -> expression MINOR expression .)
    $end            reduce using rule 60 (relacional -> expression MINOR expression .)
    LLAVEC          reduce using rule 60 (relacional -> expression MINOR expression .)
    DOUBLEDOT       reduce using rule 60 (relacional -> expression MINOR expression .)
    BRACKETC        reduce using rule 60 (relacional -> expression MINOR expression .)
    PARC            reduce using rule 60 (relacional -> expression MINOR expression .)
    SEMICOLON       reduce using rule 60 (relacional -> expression MINOR expression .)
    COMMA           reduce using rule 60 (relacional -> expression MINOR expression .)
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48

  ! PLUS            [ reduce using rule 60 (relacional -> expression MINOR expression .) ]
  ! BY              [ reduce using rule 60 (relacional -> expression MINOR expression .) ]
  ! DIVIDED         [ reduce using rule 60 (relacional -> expression MINOR expression .) ]
  ! LESS            [ reduce using rule 60 (relacional -> expression MINOR expression .) ]
  ! MODUL           [ reduce using rule 60 (relacional -> expression MINOR expression .) ]
  ! DEQUAL          [ shift and go to state 49 ]
  ! DIFERENT        [ shift and go to state 50 ]
  ! MINOR           [ shift and go to state 51 ]
  ! MINOREQUAL      [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! GREATEREQUAL    [ shift and go to state 54 ]


state 80

    (61) relacional -> expression MINOREQUAL expression .
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

    QUESTIONM       reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    DEQUAL          reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    DIFERENT        reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    MINOR           reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    MINOREQUAL      reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    GREATER         reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    GREATEREQUAL    reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    CONSOLE         reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    ID              reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    RIF             reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    RWHILE          reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    RFOR            reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    RBREAK          reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    RCONTINUE       reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    RRETURN         reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    RCONST          reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    RVAR            reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    NUMBER          reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    FLOAT           reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    STRING          reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    NOT             reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    TRUE            reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    FALSE           reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    $end            reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    LLAVEC          reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    DOUBLEDOT       reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    BRACKETC        reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    PARC            reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    SEMICOLON       reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    COMMA           reduce using rule 61 (relacional -> expression MINOREQUAL expression .)
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48

  ! PLUS            [ reduce using rule 61 (relacional -> expression MINOREQUAL expression .) ]
  ! BY              [ reduce using rule 61 (relacional -> expression MINOREQUAL expression .) ]
  ! DIVIDED         [ reduce using rule 61 (relacional -> expression MINOREQUAL expression .) ]
  ! LESS            [ reduce using rule 61 (relacional -> expression MINOREQUAL expression .) ]
  ! MODUL           [ reduce using rule 61 (relacional -> expression MINOREQUAL expression .) ]
  ! DEQUAL          [ shift and go to state 49 ]
  ! DIFERENT        [ shift and go to state 50 ]
  ! MINOR           [ shift and go to state 51 ]
  ! MINOREQUAL      [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! GREATEREQUAL    [ shift and go to state 54 ]


state 81

    (62) relacional -> expression GREATER expression .
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

    QUESTIONM       reduce using rule 62 (relacional -> expression GREATER expression .)
    DEQUAL          reduce using rule 62 (relacional -> expression GREATER expression .)
    DIFERENT        reduce using rule 62 (relacional -> expression GREATER expression .)
    MINOR           reduce using rule 62 (relacional -> expression GREATER expression .)
    MINOREQUAL      reduce using rule 62 (relacional -> expression GREATER expression .)
    GREATER         reduce using rule 62 (relacional -> expression GREATER expression .)
    GREATEREQUAL    reduce using rule 62 (relacional -> expression GREATER expression .)
    CONSOLE         reduce using rule 62 (relacional -> expression GREATER expression .)
    ID              reduce using rule 62 (relacional -> expression GREATER expression .)
    RIF             reduce using rule 62 (relacional -> expression GREATER expression .)
    RWHILE          reduce using rule 62 (relacional -> expression GREATER expression .)
    RFOR            reduce using rule 62 (relacional -> expression GREATER expression .)
    RBREAK          reduce using rule 62 (relacional -> expression GREATER expression .)
    RCONTINUE       reduce using rule 62 (relacional -> expression GREATER expression .)
    RRETURN         reduce using rule 62 (relacional -> expression GREATER expression .)
    RCONST          reduce using rule 62 (relacional -> expression GREATER expression .)
    RVAR            reduce using rule 62 (relacional -> expression GREATER expression .)
    NUMBER          reduce using rule 62 (relacional -> expression GREATER expression .)
    FLOAT           reduce using rule 62 (relacional -> expression GREATER expression .)
    STRING          reduce using rule 62 (relacional -> expression GREATER expression .)
    NOT             reduce using rule 62 (relacional -> expression GREATER expression .)
    TRUE            reduce using rule 62 (relacional -> expression GREATER expression .)
    FALSE           reduce using rule 62 (relacional -> expression GREATER expression .)
    $end            reduce using rule 62 (relacional -> expression GREATER expression .)
    LLAVEC          reduce using rule 62 (relacional -> expression GREATER expression .)
    DOUBLEDOT       reduce using rule 62 (relacional -> expression GREATER expression .)
    BRACKETC        reduce using rule 62 (relacional -> expression GREATER expression .)
    PARC            reduce using rule 62 (relacional -> expression GREATER expression .)
    SEMICOLON       reduce using rule 62 (relacional -> expression GREATER expression .)
    COMMA           reduce using rule 62 (relacional -> expression GREATER expression .)
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48

  ! PLUS            [ reduce using rule 62 (relacional -> expression GREATER expression .) ]
  ! BY              [ reduce using rule 62 (relacional -> expression GREATER expression .) ]
  ! DIVIDED         [ reduce using rule 62 (relacional -> expression GREATER expression .) ]
  ! LESS            [ reduce using rule 62 (relacional -> expression GREATER expression .) ]
  ! MODUL           [ reduce using rule 62 (relacional -> expression GREATER expression .) ]
  ! DEQUAL          [ shift and go to state 49 ]
  ! DIFERENT        [ shift and go to state 50 ]
  ! MINOR           [ shift and go to state 51 ]
  ! MINOREQUAL      [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! GREATEREQUAL    [ shift and go to state 54 ]


state 82

    (63) relacional -> expression GREATEREQUAL expression .
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

    QUESTIONM       reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    DEQUAL          reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    DIFERENT        reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    MINOR           reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    MINOREQUAL      reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    GREATER         reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    GREATEREQUAL    reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    CONSOLE         reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    ID              reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    RIF             reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    RWHILE          reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    RFOR            reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    RBREAK          reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    RCONTINUE       reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    RRETURN         reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    RCONST          reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    RVAR            reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    NUMBER          reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    FLOAT           reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    STRING          reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    NOT             reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    TRUE            reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    FALSE           reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    $end            reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    LLAVEC          reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    DOUBLEDOT       reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    BRACKETC        reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    PARC            reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    SEMICOLON       reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    COMMA           reduce using rule 63 (relacional -> expression GREATEREQUAL expression .)
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48

  ! PLUS            [ reduce using rule 63 (relacional -> expression GREATEREQUAL expression .) ]
  ! BY              [ reduce using rule 63 (relacional -> expression GREATEREQUAL expression .) ]
  ! DIVIDED         [ reduce using rule 63 (relacional -> expression GREATEREQUAL expression .) ]
  ! LESS            [ reduce using rule 63 (relacional -> expression GREATEREQUAL expression .) ]
  ! MODUL           [ reduce using rule 63 (relacional -> expression GREATEREQUAL expression .) ]
  ! DEQUAL          [ shift and go to state 49 ]
  ! DIFERENT        [ shift and go to state 50 ]
  ! MINOR           [ shift and go to state 51 ]
  ! MINOREQUAL      [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! GREATEREQUAL    [ shift and go to state 54 ]


state 83

    (18) declarevar -> declaration_type ID DOUBLEDOT . type EQUAL expression
    (20) declarevar -> declaration_type ID DOUBLEDOT . type
    (24) declareArray -> declaration_type ID DOUBLEDOT . type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (25) declareArray -> declaration_type ID DOUBLEDOT . type BRACKETO BRACKETC EQUAL expression
    (26) declareArray -> declaration_type ID DOUBLEDOT . type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (77) type -> . RNUMBER
    (78) type -> . RFLOAT
    (79) type -> . RSTRING
    (80) type -> . RBOOLEAN

    RNUMBER         shift and go to state 105
    RFLOAT          shift and go to state 106
    RSTRING         shift and go to state 107
    RBOOLEAN        shift and go to state 108

    type                           shift and go to state 104

state 84

    (19) declarevar -> declaration_type ID EQUAL . expression
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 109
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 85

    (21) assignVar -> ID EQUAL expression .
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

  ! shift/reduce conflict for LESS resolved as shift
    CONSOLE         reduce using rule 21 (assignVar -> ID EQUAL expression .)
    ID              reduce using rule 21 (assignVar -> ID EQUAL expression .)
    RIF             reduce using rule 21 (assignVar -> ID EQUAL expression .)
    RWHILE          reduce using rule 21 (assignVar -> ID EQUAL expression .)
    RFOR            reduce using rule 21 (assignVar -> ID EQUAL expression .)
    RBREAK          reduce using rule 21 (assignVar -> ID EQUAL expression .)
    RCONTINUE       reduce using rule 21 (assignVar -> ID EQUAL expression .)
    RRETURN         reduce using rule 21 (assignVar -> ID EQUAL expression .)
    RCONST          reduce using rule 21 (assignVar -> ID EQUAL expression .)
    RVAR            reduce using rule 21 (assignVar -> ID EQUAL expression .)
    NUMBER          reduce using rule 21 (assignVar -> ID EQUAL expression .)
    FLOAT           reduce using rule 21 (assignVar -> ID EQUAL expression .)
    STRING          reduce using rule 21 (assignVar -> ID EQUAL expression .)
    NOT             reduce using rule 21 (assignVar -> ID EQUAL expression .)
    TRUE            reduce using rule 21 (assignVar -> ID EQUAL expression .)
    FALSE           reduce using rule 21 (assignVar -> ID EQUAL expression .)
    $end            reduce using rule 21 (assignVar -> ID EQUAL expression .)
    LLAVEC          reduce using rule 21 (assignVar -> ID EQUAL expression .)
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48
    DEQUAL          shift and go to state 49
    DIFERENT        shift and go to state 50
    MINOR           shift and go to state 51
    MINOREQUAL      shift and go to state 52
    GREATER         shift and go to state 53
    GREATEREQUAL    shift and go to state 54

  ! LESS            [ reduce using rule 21 (assignVar -> ID EQUAL expression .) ]


state 86

    (22) assignVar -> ID PLUS EQUAL . expression
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 110
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 87

    (23) assignVar -> ID LESS EQUAL . expression
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 111
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 88

    (27) assingArray -> ID BRACKETO expression . BRACKETC EQUAL expression
    (51) id_ -> ID BRACKETO expression . BRACKETC
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

    BRACKETC        shift and go to state 112
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48
    DEQUAL          shift and go to state 49
    DIFERENT        shift and go to state 50
    MINOR           shift and go to state 51
    MINOREQUAL      shift and go to state 52
    GREATER         shift and go to state 53
    GREATEREQUAL    shift and go to state 54


state 89

    (28) arrayFuncs -> ID DOT RPUSH . PARA expression PARC

    PARA            shift and go to state 113


state 90

    (29) arrayFuncs -> ID DOT RPOP . PARA PARC
    (71) arraysExpression -> ID DOT RPOP . PARA PARC

    PARA            shift and go to state 114


state 91

    (72) arraysExpression -> ID DOT RINDEXOF . PARA expression PARC

    PARA            shift and go to state 115


state 92

    (73) arraysExpression -> ID DOT RJOIN . PARA PARC

    PARA            shift and go to state 116


state 93

    (74) arraysExpression -> ID DOT RLENGTH . PARA PARC

    PARA            shift and go to state 117


state 94

    (51) id_ -> ID BRACKETO . expression BRACKETC
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 118
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 95

    (71) arraysExpression -> ID DOT . RPOP PARA PARC
    (72) arraysExpression -> ID DOT . RINDEXOF PARA expression PARC
    (73) arraysExpression -> ID DOT . RJOIN PARA PARC
    (74) arraysExpression -> ID DOT . RLENGTH PARA PARC

    RPOP            shift and go to state 119
    RINDEXOF        shift and go to state 91
    RJOIN           shift and go to state 92
    RLENGTH         shift and go to state 93


state 96

    (30) if_else -> RIF PARA expression . PARC LLAVEA instrucciones LLAVEC else
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

    PARC            shift and go to state 120
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48
    DEQUAL          shift and go to state 49
    DIFERENT        shift and go to state 50
    MINOR           shift and go to state 51
    MINOREQUAL      shift and go to state 52
    GREATER         shift and go to state 53
    GREATEREQUAL    shift and go to state 54


state 97

    (35) while_ -> RWHILE PARA expression . PARC LLAVEA instrucciones LLAVEC
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

    PARC            shift and go to state 121
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48
    DEQUAL          shift and go to state 49
    DIFERENT        shift and go to state 50
    MINOR           shift and go to state 51
    MINOREQUAL      shift and go to state 52
    GREATER         shift and go to state 53
    GREATEREQUAL    shift and go to state 54


state 98

    (36) for_ -> RFOR PARA declarevar . SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (37) for_ -> RFOR PARA declarevar . SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC

    SEMICOLON       shift and go to state 122


state 99

    (18) declarevar -> declaration_type . ID DOUBLEDOT type EQUAL expression
    (19) declarevar -> declaration_type . ID EQUAL expression
    (20) declarevar -> declaration_type . ID DOUBLEDOT type

    ID              shift and go to state 123


state 100

    (64) logica -> boolean AND boolean .

    QUESTIONM       reduce using rule 64 (logica -> boolean AND boolean .)
    PLUS            reduce using rule 64 (logica -> boolean AND boolean .)
    BY              reduce using rule 64 (logica -> boolean AND boolean .)
    DIVIDED         reduce using rule 64 (logica -> boolean AND boolean .)
    LESS            reduce using rule 64 (logica -> boolean AND boolean .)
    MODUL           reduce using rule 64 (logica -> boolean AND boolean .)
    DEQUAL          reduce using rule 64 (logica -> boolean AND boolean .)
    DIFERENT        reduce using rule 64 (logica -> boolean AND boolean .)
    MINOR           reduce using rule 64 (logica -> boolean AND boolean .)
    MINOREQUAL      reduce using rule 64 (logica -> boolean AND boolean .)
    GREATER         reduce using rule 64 (logica -> boolean AND boolean .)
    GREATEREQUAL    reduce using rule 64 (logica -> boolean AND boolean .)
    CONSOLE         reduce using rule 64 (logica -> boolean AND boolean .)
    ID              reduce using rule 64 (logica -> boolean AND boolean .)
    RIF             reduce using rule 64 (logica -> boolean AND boolean .)
    RWHILE          reduce using rule 64 (logica -> boolean AND boolean .)
    RFOR            reduce using rule 64 (logica -> boolean AND boolean .)
    RBREAK          reduce using rule 64 (logica -> boolean AND boolean .)
    RCONTINUE       reduce using rule 64 (logica -> boolean AND boolean .)
    RRETURN         reduce using rule 64 (logica -> boolean AND boolean .)
    RCONST          reduce using rule 64 (logica -> boolean AND boolean .)
    RVAR            reduce using rule 64 (logica -> boolean AND boolean .)
    NUMBER          reduce using rule 64 (logica -> boolean AND boolean .)
    FLOAT           reduce using rule 64 (logica -> boolean AND boolean .)
    STRING          reduce using rule 64 (logica -> boolean AND boolean .)
    NOT             reduce using rule 64 (logica -> boolean AND boolean .)
    TRUE            reduce using rule 64 (logica -> boolean AND boolean .)
    FALSE           reduce using rule 64 (logica -> boolean AND boolean .)
    $end            reduce using rule 64 (logica -> boolean AND boolean .)
    LLAVEC          reduce using rule 64 (logica -> boolean AND boolean .)
    DOUBLEDOT       reduce using rule 64 (logica -> boolean AND boolean .)
    BRACKETC        reduce using rule 64 (logica -> boolean AND boolean .)
    PARC            reduce using rule 64 (logica -> boolean AND boolean .)
    SEMICOLON       reduce using rule 64 (logica -> boolean AND boolean .)
    COMMA           reduce using rule 64 (logica -> boolean AND boolean .)


state 101

    (65) logica -> boolean OR boolean .

    QUESTIONM       reduce using rule 65 (logica -> boolean OR boolean .)
    PLUS            reduce using rule 65 (logica -> boolean OR boolean .)
    BY              reduce using rule 65 (logica -> boolean OR boolean .)
    DIVIDED         reduce using rule 65 (logica -> boolean OR boolean .)
    LESS            reduce using rule 65 (logica -> boolean OR boolean .)
    MODUL           reduce using rule 65 (logica -> boolean OR boolean .)
    DEQUAL          reduce using rule 65 (logica -> boolean OR boolean .)
    DIFERENT        reduce using rule 65 (logica -> boolean OR boolean .)
    MINOR           reduce using rule 65 (logica -> boolean OR boolean .)
    MINOREQUAL      reduce using rule 65 (logica -> boolean OR boolean .)
    GREATER         reduce using rule 65 (logica -> boolean OR boolean .)
    GREATEREQUAL    reduce using rule 65 (logica -> boolean OR boolean .)
    CONSOLE         reduce using rule 65 (logica -> boolean OR boolean .)
    ID              reduce using rule 65 (logica -> boolean OR boolean .)
    RIF             reduce using rule 65 (logica -> boolean OR boolean .)
    RWHILE          reduce using rule 65 (logica -> boolean OR boolean .)
    RFOR            reduce using rule 65 (logica -> boolean OR boolean .)
    RBREAK          reduce using rule 65 (logica -> boolean OR boolean .)
    RCONTINUE       reduce using rule 65 (logica -> boolean OR boolean .)
    RRETURN         reduce using rule 65 (logica -> boolean OR boolean .)
    RCONST          reduce using rule 65 (logica -> boolean OR boolean .)
    RVAR            reduce using rule 65 (logica -> boolean OR boolean .)
    NUMBER          reduce using rule 65 (logica -> boolean OR boolean .)
    FLOAT           reduce using rule 65 (logica -> boolean OR boolean .)
    STRING          reduce using rule 65 (logica -> boolean OR boolean .)
    NOT             reduce using rule 65 (logica -> boolean OR boolean .)
    TRUE            reduce using rule 65 (logica -> boolean OR boolean .)
    FALSE           reduce using rule 65 (logica -> boolean OR boolean .)
    $end            reduce using rule 65 (logica -> boolean OR boolean .)
    LLAVEC          reduce using rule 65 (logica -> boolean OR boolean .)
    DOUBLEDOT       reduce using rule 65 (logica -> boolean OR boolean .)
    BRACKETC        reduce using rule 65 (logica -> boolean OR boolean .)
    PARC            reduce using rule 65 (logica -> boolean OR boolean .)
    SEMICOLON       reduce using rule 65 (logica -> boolean OR boolean .)
    COMMA           reduce using rule 65 (logica -> boolean OR boolean .)


state 102

    (15) print -> CONSOLE DOT LOG PARA . expression PARC
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 124
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 103

    (34) ternario -> expression QUESTIONM expression DOUBLEDOT . expression
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 125
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 104

    (18) declarevar -> declaration_type ID DOUBLEDOT type . EQUAL expression
    (20) declarevar -> declaration_type ID DOUBLEDOT type .
    (24) declareArray -> declaration_type ID DOUBLEDOT type . BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (25) declareArray -> declaration_type ID DOUBLEDOT type . BRACKETO BRACKETC EQUAL expression
    (26) declareArray -> declaration_type ID DOUBLEDOT type . BRACKETO BRACKETC EQUAL BRACKETO BRACKETC

    EQUAL           shift and go to state 126
    CONSOLE         reduce using rule 20 (declarevar -> declaration_type ID DOUBLEDOT type .)
    ID              reduce using rule 20 (declarevar -> declaration_type ID DOUBLEDOT type .)
    RIF             reduce using rule 20 (declarevar -> declaration_type ID DOUBLEDOT type .)
    RWHILE          reduce using rule 20 (declarevar -> declaration_type ID DOUBLEDOT type .)
    RFOR            reduce using rule 20 (declarevar -> declaration_type ID DOUBLEDOT type .)
    RBREAK          reduce using rule 20 (declarevar -> declaration_type ID DOUBLEDOT type .)
    RCONTINUE       reduce using rule 20 (declarevar -> declaration_type ID DOUBLEDOT type .)
    RRETURN         reduce using rule 20 (declarevar -> declaration_type ID DOUBLEDOT type .)
    RCONST          reduce using rule 20 (declarevar -> declaration_type ID DOUBLEDOT type .)
    RVAR            reduce using rule 20 (declarevar -> declaration_type ID DOUBLEDOT type .)
    NUMBER          reduce using rule 20 (declarevar -> declaration_type ID DOUBLEDOT type .)
    FLOAT           reduce using rule 20 (declarevar -> declaration_type ID DOUBLEDOT type .)
    STRING          reduce using rule 20 (declarevar -> declaration_type ID DOUBLEDOT type .)
    LESS            reduce using rule 20 (declarevar -> declaration_type ID DOUBLEDOT type .)
    NOT             reduce using rule 20 (declarevar -> declaration_type ID DOUBLEDOT type .)
    TRUE            reduce using rule 20 (declarevar -> declaration_type ID DOUBLEDOT type .)
    FALSE           reduce using rule 20 (declarevar -> declaration_type ID DOUBLEDOT type .)
    $end            reduce using rule 20 (declarevar -> declaration_type ID DOUBLEDOT type .)
    LLAVEC          reduce using rule 20 (declarevar -> declaration_type ID DOUBLEDOT type .)
    BRACKETO        shift and go to state 127


state 105

    (77) type -> RNUMBER .

    EQUAL           reduce using rule 77 (type -> RNUMBER .)
    BRACKETO        reduce using rule 77 (type -> RNUMBER .)
    CONSOLE         reduce using rule 77 (type -> RNUMBER .)
    ID              reduce using rule 77 (type -> RNUMBER .)
    RIF             reduce using rule 77 (type -> RNUMBER .)
    RWHILE          reduce using rule 77 (type -> RNUMBER .)
    RFOR            reduce using rule 77 (type -> RNUMBER .)
    RBREAK          reduce using rule 77 (type -> RNUMBER .)
    RCONTINUE       reduce using rule 77 (type -> RNUMBER .)
    RRETURN         reduce using rule 77 (type -> RNUMBER .)
    RCONST          reduce using rule 77 (type -> RNUMBER .)
    RVAR            reduce using rule 77 (type -> RNUMBER .)
    NUMBER          reduce using rule 77 (type -> RNUMBER .)
    FLOAT           reduce using rule 77 (type -> RNUMBER .)
    STRING          reduce using rule 77 (type -> RNUMBER .)
    LESS            reduce using rule 77 (type -> RNUMBER .)
    NOT             reduce using rule 77 (type -> RNUMBER .)
    TRUE            reduce using rule 77 (type -> RNUMBER .)
    FALSE           reduce using rule 77 (type -> RNUMBER .)
    $end            reduce using rule 77 (type -> RNUMBER .)
    LLAVEC          reduce using rule 77 (type -> RNUMBER .)
    SEMICOLON       reduce using rule 77 (type -> RNUMBER .)


state 106

    (78) type -> RFLOAT .

    EQUAL           reduce using rule 78 (type -> RFLOAT .)
    BRACKETO        reduce using rule 78 (type -> RFLOAT .)
    CONSOLE         reduce using rule 78 (type -> RFLOAT .)
    ID              reduce using rule 78 (type -> RFLOAT .)
    RIF             reduce using rule 78 (type -> RFLOAT .)
    RWHILE          reduce using rule 78 (type -> RFLOAT .)
    RFOR            reduce using rule 78 (type -> RFLOAT .)
    RBREAK          reduce using rule 78 (type -> RFLOAT .)
    RCONTINUE       reduce using rule 78 (type -> RFLOAT .)
    RRETURN         reduce using rule 78 (type -> RFLOAT .)
    RCONST          reduce using rule 78 (type -> RFLOAT .)
    RVAR            reduce using rule 78 (type -> RFLOAT .)
    NUMBER          reduce using rule 78 (type -> RFLOAT .)
    FLOAT           reduce using rule 78 (type -> RFLOAT .)
    STRING          reduce using rule 78 (type -> RFLOAT .)
    LESS            reduce using rule 78 (type -> RFLOAT .)
    NOT             reduce using rule 78 (type -> RFLOAT .)
    TRUE            reduce using rule 78 (type -> RFLOAT .)
    FALSE           reduce using rule 78 (type -> RFLOAT .)
    $end            reduce using rule 78 (type -> RFLOAT .)
    LLAVEC          reduce using rule 78 (type -> RFLOAT .)
    SEMICOLON       reduce using rule 78 (type -> RFLOAT .)


state 107

    (79) type -> RSTRING .

    EQUAL           reduce using rule 79 (type -> RSTRING .)
    BRACKETO        reduce using rule 79 (type -> RSTRING .)
    CONSOLE         reduce using rule 79 (type -> RSTRING .)
    ID              reduce using rule 79 (type -> RSTRING .)
    RIF             reduce using rule 79 (type -> RSTRING .)
    RWHILE          reduce using rule 79 (type -> RSTRING .)
    RFOR            reduce using rule 79 (type -> RSTRING .)
    RBREAK          reduce using rule 79 (type -> RSTRING .)
    RCONTINUE       reduce using rule 79 (type -> RSTRING .)
    RRETURN         reduce using rule 79 (type -> RSTRING .)
    RCONST          reduce using rule 79 (type -> RSTRING .)
    RVAR            reduce using rule 79 (type -> RSTRING .)
    NUMBER          reduce using rule 79 (type -> RSTRING .)
    FLOAT           reduce using rule 79 (type -> RSTRING .)
    STRING          reduce using rule 79 (type -> RSTRING .)
    LESS            reduce using rule 79 (type -> RSTRING .)
    NOT             reduce using rule 79 (type -> RSTRING .)
    TRUE            reduce using rule 79 (type -> RSTRING .)
    FALSE           reduce using rule 79 (type -> RSTRING .)
    $end            reduce using rule 79 (type -> RSTRING .)
    LLAVEC          reduce using rule 79 (type -> RSTRING .)
    SEMICOLON       reduce using rule 79 (type -> RSTRING .)


state 108

    (80) type -> RBOOLEAN .

    EQUAL           reduce using rule 80 (type -> RBOOLEAN .)
    BRACKETO        reduce using rule 80 (type -> RBOOLEAN .)
    CONSOLE         reduce using rule 80 (type -> RBOOLEAN .)
    ID              reduce using rule 80 (type -> RBOOLEAN .)
    RIF             reduce using rule 80 (type -> RBOOLEAN .)
    RWHILE          reduce using rule 80 (type -> RBOOLEAN .)
    RFOR            reduce using rule 80 (type -> RBOOLEAN .)
    RBREAK          reduce using rule 80 (type -> RBOOLEAN .)
    RCONTINUE       reduce using rule 80 (type -> RBOOLEAN .)
    RRETURN         reduce using rule 80 (type -> RBOOLEAN .)
    RCONST          reduce using rule 80 (type -> RBOOLEAN .)
    RVAR            reduce using rule 80 (type -> RBOOLEAN .)
    NUMBER          reduce using rule 80 (type -> RBOOLEAN .)
    FLOAT           reduce using rule 80 (type -> RBOOLEAN .)
    STRING          reduce using rule 80 (type -> RBOOLEAN .)
    LESS            reduce using rule 80 (type -> RBOOLEAN .)
    NOT             reduce using rule 80 (type -> RBOOLEAN .)
    TRUE            reduce using rule 80 (type -> RBOOLEAN .)
    FALSE           reduce using rule 80 (type -> RBOOLEAN .)
    $end            reduce using rule 80 (type -> RBOOLEAN .)
    LLAVEC          reduce using rule 80 (type -> RBOOLEAN .)
    SEMICOLON       reduce using rule 80 (type -> RBOOLEAN .)


state 109

    (19) declarevar -> declaration_type ID EQUAL expression .
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

  ! shift/reduce conflict for LESS resolved as shift
    CONSOLE         reduce using rule 19 (declarevar -> declaration_type ID EQUAL expression .)
    ID              reduce using rule 19 (declarevar -> declaration_type ID EQUAL expression .)
    RIF             reduce using rule 19 (declarevar -> declaration_type ID EQUAL expression .)
    RWHILE          reduce using rule 19 (declarevar -> declaration_type ID EQUAL expression .)
    RFOR            reduce using rule 19 (declarevar -> declaration_type ID EQUAL expression .)
    RBREAK          reduce using rule 19 (declarevar -> declaration_type ID EQUAL expression .)
    RCONTINUE       reduce using rule 19 (declarevar -> declaration_type ID EQUAL expression .)
    RRETURN         reduce using rule 19 (declarevar -> declaration_type ID EQUAL expression .)
    RCONST          reduce using rule 19 (declarevar -> declaration_type ID EQUAL expression .)
    RVAR            reduce using rule 19 (declarevar -> declaration_type ID EQUAL expression .)
    NUMBER          reduce using rule 19 (declarevar -> declaration_type ID EQUAL expression .)
    FLOAT           reduce using rule 19 (declarevar -> declaration_type ID EQUAL expression .)
    STRING          reduce using rule 19 (declarevar -> declaration_type ID EQUAL expression .)
    NOT             reduce using rule 19 (declarevar -> declaration_type ID EQUAL expression .)
    TRUE            reduce using rule 19 (declarevar -> declaration_type ID EQUAL expression .)
    FALSE           reduce using rule 19 (declarevar -> declaration_type ID EQUAL expression .)
    $end            reduce using rule 19 (declarevar -> declaration_type ID EQUAL expression .)
    SEMICOLON       reduce using rule 19 (declarevar -> declaration_type ID EQUAL expression .)
    LLAVEC          reduce using rule 19 (declarevar -> declaration_type ID EQUAL expression .)
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48
    DEQUAL          shift and go to state 49
    DIFERENT        shift and go to state 50
    MINOR           shift and go to state 51
    MINOREQUAL      shift and go to state 52
    GREATER         shift and go to state 53
    GREATEREQUAL    shift and go to state 54

  ! LESS            [ reduce using rule 19 (declarevar -> declaration_type ID EQUAL expression .) ]


state 110

    (22) assignVar -> ID PLUS EQUAL expression .
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

  ! shift/reduce conflict for LESS resolved as shift
    CONSOLE         reduce using rule 22 (assignVar -> ID PLUS EQUAL expression .)
    ID              reduce using rule 22 (assignVar -> ID PLUS EQUAL expression .)
    RIF             reduce using rule 22 (assignVar -> ID PLUS EQUAL expression .)
    RWHILE          reduce using rule 22 (assignVar -> ID PLUS EQUAL expression .)
    RFOR            reduce using rule 22 (assignVar -> ID PLUS EQUAL expression .)
    RBREAK          reduce using rule 22 (assignVar -> ID PLUS EQUAL expression .)
    RCONTINUE       reduce using rule 22 (assignVar -> ID PLUS EQUAL expression .)
    RRETURN         reduce using rule 22 (assignVar -> ID PLUS EQUAL expression .)
    RCONST          reduce using rule 22 (assignVar -> ID PLUS EQUAL expression .)
    RVAR            reduce using rule 22 (assignVar -> ID PLUS EQUAL expression .)
    NUMBER          reduce using rule 22 (assignVar -> ID PLUS EQUAL expression .)
    FLOAT           reduce using rule 22 (assignVar -> ID PLUS EQUAL expression .)
    STRING          reduce using rule 22 (assignVar -> ID PLUS EQUAL expression .)
    NOT             reduce using rule 22 (assignVar -> ID PLUS EQUAL expression .)
    TRUE            reduce using rule 22 (assignVar -> ID PLUS EQUAL expression .)
    FALSE           reduce using rule 22 (assignVar -> ID PLUS EQUAL expression .)
    $end            reduce using rule 22 (assignVar -> ID PLUS EQUAL expression .)
    LLAVEC          reduce using rule 22 (assignVar -> ID PLUS EQUAL expression .)
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48
    DEQUAL          shift and go to state 49
    DIFERENT        shift and go to state 50
    MINOR           shift and go to state 51
    MINOREQUAL      shift and go to state 52
    GREATER         shift and go to state 53
    GREATEREQUAL    shift and go to state 54

  ! LESS            [ reduce using rule 22 (assignVar -> ID PLUS EQUAL expression .) ]


state 111

    (23) assignVar -> ID LESS EQUAL expression .
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

  ! shift/reduce conflict for LESS resolved as shift
    CONSOLE         reduce using rule 23 (assignVar -> ID LESS EQUAL expression .)
    ID              reduce using rule 23 (assignVar -> ID LESS EQUAL expression .)
    RIF             reduce using rule 23 (assignVar -> ID LESS EQUAL expression .)
    RWHILE          reduce using rule 23 (assignVar -> ID LESS EQUAL expression .)
    RFOR            reduce using rule 23 (assignVar -> ID LESS EQUAL expression .)
    RBREAK          reduce using rule 23 (assignVar -> ID LESS EQUAL expression .)
    RCONTINUE       reduce using rule 23 (assignVar -> ID LESS EQUAL expression .)
    RRETURN         reduce using rule 23 (assignVar -> ID LESS EQUAL expression .)
    RCONST          reduce using rule 23 (assignVar -> ID LESS EQUAL expression .)
    RVAR            reduce using rule 23 (assignVar -> ID LESS EQUAL expression .)
    NUMBER          reduce using rule 23 (assignVar -> ID LESS EQUAL expression .)
    FLOAT           reduce using rule 23 (assignVar -> ID LESS EQUAL expression .)
    STRING          reduce using rule 23 (assignVar -> ID LESS EQUAL expression .)
    NOT             reduce using rule 23 (assignVar -> ID LESS EQUAL expression .)
    TRUE            reduce using rule 23 (assignVar -> ID LESS EQUAL expression .)
    FALSE           reduce using rule 23 (assignVar -> ID LESS EQUAL expression .)
    $end            reduce using rule 23 (assignVar -> ID LESS EQUAL expression .)
    LLAVEC          reduce using rule 23 (assignVar -> ID LESS EQUAL expression .)
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48
    DEQUAL          shift and go to state 49
    DIFERENT        shift and go to state 50
    MINOR           shift and go to state 51
    MINOREQUAL      shift and go to state 52
    GREATER         shift and go to state 53
    GREATEREQUAL    shift and go to state 54

  ! LESS            [ reduce using rule 23 (assignVar -> ID LESS EQUAL expression .) ]


state 112

    (27) assingArray -> ID BRACKETO expression BRACKETC . EQUAL expression
    (51) id_ -> ID BRACKETO expression BRACKETC .

    EQUAL           shift and go to state 128
    QUESTIONM       reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    PLUS            reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    BY              reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    DIVIDED         reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    LESS            reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    MODUL           reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    DEQUAL          reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    DIFERENT        reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    MINOR           reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    MINOREQUAL      reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    GREATER         reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    GREATEREQUAL    reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)


state 113

    (28) arrayFuncs -> ID DOT RPUSH PARA . expression PARC
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 129
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 114

    (29) arrayFuncs -> ID DOT RPOP PARA . PARC
    (71) arraysExpression -> ID DOT RPOP PARA . PARC

    PARC            shift and go to state 130


state 115

    (72) arraysExpression -> ID DOT RINDEXOF PARA . expression PARC
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 131
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 116

    (73) arraysExpression -> ID DOT RJOIN PARA . PARC

    PARC            shift and go to state 132


state 117

    (74) arraysExpression -> ID DOT RLENGTH PARA . PARC

    PARC            shift and go to state 133


state 118

    (51) id_ -> ID BRACKETO expression . BRACKETC
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

    BRACKETC        shift and go to state 134
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48
    DEQUAL          shift and go to state 49
    DIFERENT        shift and go to state 50
    MINOR           shift and go to state 51
    MINOREQUAL      shift and go to state 52
    GREATER         shift and go to state 53
    GREATEREQUAL    shift and go to state 54


state 119

    (71) arraysExpression -> ID DOT RPOP . PARA PARC

    PARA            shift and go to state 135


state 120

    (30) if_else -> RIF PARA expression PARC . LLAVEA instrucciones LLAVEC else

    LLAVEA          shift and go to state 136


state 121

    (35) while_ -> RWHILE PARA expression PARC . LLAVEA instrucciones LLAVEC

    LLAVEA          shift and go to state 137


state 122

    (36) for_ -> RFOR PARA declarevar SEMICOLON . relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (37) for_ -> RFOR PARA declarevar SEMICOLON . relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    relacional                     shift and go to state 138
    id_                            shift and go to state 24
    expression                     shift and go to state 139
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    logica                         shift and go to state 32
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 123

    (18) declarevar -> declaration_type ID . DOUBLEDOT type EQUAL expression
    (19) declarevar -> declaration_type ID . EQUAL expression
    (20) declarevar -> declaration_type ID . DOUBLEDOT type

    DOUBLEDOT       shift and go to state 140
    EQUAL           shift and go to state 84


state 124

    (15) print -> CONSOLE DOT LOG PARA expression . PARC
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

    PARC            shift and go to state 141
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48
    DEQUAL          shift and go to state 49
    DIFERENT        shift and go to state 50
    MINOR           shift and go to state 51
    MINOREQUAL      shift and go to state 52
    GREATER         shift and go to state 53
    GREATEREQUAL    shift and go to state 54


state 125

    (34) ternario -> expression QUESTIONM expression DOUBLEDOT expression .
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

  ! shift/reduce conflict for LESS resolved as shift
    CONSOLE         reduce using rule 34 (ternario -> expression QUESTIONM expression DOUBLEDOT expression .)
    ID              reduce using rule 34 (ternario -> expression QUESTIONM expression DOUBLEDOT expression .)
    RIF             reduce using rule 34 (ternario -> expression QUESTIONM expression DOUBLEDOT expression .)
    RWHILE          reduce using rule 34 (ternario -> expression QUESTIONM expression DOUBLEDOT expression .)
    RFOR            reduce using rule 34 (ternario -> expression QUESTIONM expression DOUBLEDOT expression .)
    RBREAK          reduce using rule 34 (ternario -> expression QUESTIONM expression DOUBLEDOT expression .)
    RCONTINUE       reduce using rule 34 (ternario -> expression QUESTIONM expression DOUBLEDOT expression .)
    RRETURN         reduce using rule 34 (ternario -> expression QUESTIONM expression DOUBLEDOT expression .)
    RCONST          reduce using rule 34 (ternario -> expression QUESTIONM expression DOUBLEDOT expression .)
    RVAR            reduce using rule 34 (ternario -> expression QUESTIONM expression DOUBLEDOT expression .)
    NUMBER          reduce using rule 34 (ternario -> expression QUESTIONM expression DOUBLEDOT expression .)
    FLOAT           reduce using rule 34 (ternario -> expression QUESTIONM expression DOUBLEDOT expression .)
    STRING          reduce using rule 34 (ternario -> expression QUESTIONM expression DOUBLEDOT expression .)
    NOT             reduce using rule 34 (ternario -> expression QUESTIONM expression DOUBLEDOT expression .)
    TRUE            reduce using rule 34 (ternario -> expression QUESTIONM expression DOUBLEDOT expression .)
    FALSE           reduce using rule 34 (ternario -> expression QUESTIONM expression DOUBLEDOT expression .)
    $end            reduce using rule 34 (ternario -> expression QUESTIONM expression DOUBLEDOT expression .)
    LLAVEC          reduce using rule 34 (ternario -> expression QUESTIONM expression DOUBLEDOT expression .)
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48
    DEQUAL          shift and go to state 49
    DIFERENT        shift and go to state 50
    MINOR           shift and go to state 51
    MINOREQUAL      shift and go to state 52
    GREATER         shift and go to state 53
    GREATEREQUAL    shift and go to state 54

  ! LESS            [ reduce using rule 34 (ternario -> expression QUESTIONM expression DOUBLEDOT expression .) ]


state 126

    (18) declarevar -> declaration_type ID DOUBLEDOT type EQUAL . expression
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 142
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 127

    (24) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO . BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (25) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO . BRACKETC EQUAL expression
    (26) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO . BRACKETC EQUAL BRACKETO BRACKETC

    BRACKETC        shift and go to state 143


state 128

    (27) assingArray -> ID BRACKETO expression BRACKETC EQUAL . expression
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 144
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 129

    (28) arrayFuncs -> ID DOT RPUSH PARA expression . PARC
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

    PARC            shift and go to state 145
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48
    DEQUAL          shift and go to state 49
    DIFERENT        shift and go to state 50
    MINOR           shift and go to state 51
    MINOREQUAL      shift and go to state 52
    GREATER         shift and go to state 53
    GREATEREQUAL    shift and go to state 54


state 130

    (29) arrayFuncs -> ID DOT RPOP PARA PARC .
    (71) arraysExpression -> ID DOT RPOP PARA PARC .

  ! reduce/reduce conflict for LESS resolved using rule 29 (arrayFuncs -> ID DOT RPOP PARA PARC .)
    CONSOLE         reduce using rule 29 (arrayFuncs -> ID DOT RPOP PARA PARC .)
    ID              reduce using rule 29 (arrayFuncs -> ID DOT RPOP PARA PARC .)
    RIF             reduce using rule 29 (arrayFuncs -> ID DOT RPOP PARA PARC .)
    RWHILE          reduce using rule 29 (arrayFuncs -> ID DOT RPOP PARA PARC .)
    RFOR            reduce using rule 29 (arrayFuncs -> ID DOT RPOP PARA PARC .)
    RBREAK          reduce using rule 29 (arrayFuncs -> ID DOT RPOP PARA PARC .)
    RCONTINUE       reduce using rule 29 (arrayFuncs -> ID DOT RPOP PARA PARC .)
    RRETURN         reduce using rule 29 (arrayFuncs -> ID DOT RPOP PARA PARC .)
    RCONST          reduce using rule 29 (arrayFuncs -> ID DOT RPOP PARA PARC .)
    RVAR            reduce using rule 29 (arrayFuncs -> ID DOT RPOP PARA PARC .)
    NUMBER          reduce using rule 29 (arrayFuncs -> ID DOT RPOP PARA PARC .)
    FLOAT           reduce using rule 29 (arrayFuncs -> ID DOT RPOP PARA PARC .)
    STRING          reduce using rule 29 (arrayFuncs -> ID DOT RPOP PARA PARC .)
    LESS            reduce using rule 29 (arrayFuncs -> ID DOT RPOP PARA PARC .)
    NOT             reduce using rule 29 (arrayFuncs -> ID DOT RPOP PARA PARC .)
    TRUE            reduce using rule 29 (arrayFuncs -> ID DOT RPOP PARA PARC .)
    FALSE           reduce using rule 29 (arrayFuncs -> ID DOT RPOP PARA PARC .)
    $end            reduce using rule 29 (arrayFuncs -> ID DOT RPOP PARA PARC .)
    LLAVEC          reduce using rule 29 (arrayFuncs -> ID DOT RPOP PARA PARC .)
    QUESTIONM       reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    PLUS            reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    BY              reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    DIVIDED         reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    MODUL           reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    DEQUAL          reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    DIFERENT        reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    MINOR           reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    MINOREQUAL      reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    GREATER         reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    GREATEREQUAL    reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)

  ! LESS            [ reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .) ]


state 131

    (72) arraysExpression -> ID DOT RINDEXOF PARA expression . PARC
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

    PARC            shift and go to state 146
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48
    DEQUAL          shift and go to state 49
    DIFERENT        shift and go to state 50
    MINOR           shift and go to state 51
    MINOREQUAL      shift and go to state 52
    GREATER         shift and go to state 53
    GREATEREQUAL    shift and go to state 54


state 132

    (73) arraysExpression -> ID DOT RJOIN PARA PARC .

    QUESTIONM       reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    PLUS            reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    BY              reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    DIVIDED         reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    LESS            reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    MODUL           reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    DEQUAL          reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    DIFERENT        reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    MINOR           reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    MINOREQUAL      reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    GREATER         reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    GREATEREQUAL    reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    CONSOLE         reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    ID              reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    RIF             reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    RWHILE          reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    RFOR            reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    RBREAK          reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    RCONTINUE       reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    RRETURN         reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    RCONST          reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    RVAR            reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    NUMBER          reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    FLOAT           reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    STRING          reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    NOT             reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    TRUE            reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    FALSE           reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    $end            reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    LLAVEC          reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    DOUBLEDOT       reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    BRACKETC        reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    PARC            reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    SEMICOLON       reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    COMMA           reduce using rule 73 (arraysExpression -> ID DOT RJOIN PARA PARC .)


state 133

    (74) arraysExpression -> ID DOT RLENGTH PARA PARC .

    QUESTIONM       reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    PLUS            reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    BY              reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    DIVIDED         reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    LESS            reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    MODUL           reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    DEQUAL          reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    DIFERENT        reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    MINOR           reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    MINOREQUAL      reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    GREATER         reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    GREATEREQUAL    reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    CONSOLE         reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    ID              reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    RIF             reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    RWHILE          reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    RFOR            reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    RBREAK          reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    RCONTINUE       reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    RRETURN         reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    RCONST          reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    RVAR            reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    NUMBER          reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    FLOAT           reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    STRING          reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    NOT             reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    TRUE            reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    FALSE           reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    $end            reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    LLAVEC          reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    DOUBLEDOT       reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    BRACKETC        reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    PARC            reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    SEMICOLON       reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    COMMA           reduce using rule 74 (arraysExpression -> ID DOT RLENGTH PARA PARC .)


state 134

    (51) id_ -> ID BRACKETO expression BRACKETC .

    PLUS            reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    BY              reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    DIVIDED         reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    LESS            reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    MODUL           reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    DEQUAL          reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    DIFERENT        reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    MINOR           reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    MINOREQUAL      reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    GREATER         reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    GREATEREQUAL    reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    QUESTIONM       reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    CONSOLE         reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    ID              reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    RIF             reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    RWHILE          reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    RFOR            reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    RBREAK          reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    RCONTINUE       reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    RRETURN         reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    RCONST          reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    RVAR            reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    NUMBER          reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    FLOAT           reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    STRING          reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    NOT             reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    TRUE            reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    FALSE           reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    $end            reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    LLAVEC          reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    DOUBLEDOT       reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    BRACKETC        reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    PARC            reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    SEMICOLON       reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)
    COMMA           reduce using rule 51 (id_ -> ID BRACKETO expression BRACKETC .)


state 135

    (71) arraysExpression -> ID DOT RPOP PARA . PARC

    PARC            shift and go to state 147


state 136

    (30) if_else -> RIF PARA expression PARC LLAVEA . instrucciones LLAVEC else
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declarevar
    (6) instruccion -> . assignVar
    (7) instruccion -> . declareArray
    (8) instruccion -> . assingArray
    (9) instruccion -> . arrayFuncs
    (10) instruccion -> . if_else
    (11) instruccion -> . ternario
    (12) instruccion -> . while_
    (13) instruccion -> . for_
    (14) instruccion -> . transfer
    (15) print -> . CONSOLE DOT LOG PARA expression PARC
    (18) declarevar -> . declaration_type ID DOUBLEDOT type EQUAL expression
    (19) declarevar -> . declaration_type ID EQUAL expression
    (20) declarevar -> . declaration_type ID DOUBLEDOT type
    (21) assignVar -> . ID EQUAL expression
    (22) assignVar -> . ID PLUS EQUAL expression
    (23) assignVar -> . ID LESS EQUAL expression
    (24) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (25) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (26) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (27) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (28) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (29) arrayFuncs -> . ID DOT RPOP PARA PARC
    (30) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (34) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (35) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (36) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (37) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (38) transfer -> . RBREAK
    (39) transfer -> . RCONTINUE
    (40) transfer -> . RRETURN
    (41) transfer -> . RRETURN expression
    (16) declaration_type -> . RCONST
    (17) declaration_type -> . RVAR
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    CONSOLE         shift and go to state 15
    ID              shift and go to state 18
    RIF             shift and go to state 20
    RWHILE          shift and go to state 21
    RFOR            shift and go to state 22
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26
    RRETURN         shift and go to state 27
    RCONST          shift and go to state 28
    RVAR            shift and go to state 29
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 16
    instrucciones                  shift and go to state 148
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    assignVar                      shift and go to state 6
    declareArray                   shift and go to state 7
    assingArray                    shift and go to state 8
    arrayFuncs                     shift and go to state 9
    if_else                        shift and go to state 10
    ternario                       shift and go to state 11
    while_                         shift and go to state 12
    for_                           shift and go to state 13
    transfer                       shift and go to state 14
    declaration_type               shift and go to state 17
    relacional                     shift and go to state 23
    id_                            shift and go to state 24
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    logica                         shift and go to state 32
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 137

    (35) while_ -> RWHILE PARA expression PARC LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declarevar
    (6) instruccion -> . assignVar
    (7) instruccion -> . declareArray
    (8) instruccion -> . assingArray
    (9) instruccion -> . arrayFuncs
    (10) instruccion -> . if_else
    (11) instruccion -> . ternario
    (12) instruccion -> . while_
    (13) instruccion -> . for_
    (14) instruccion -> . transfer
    (15) print -> . CONSOLE DOT LOG PARA expression PARC
    (18) declarevar -> . declaration_type ID DOUBLEDOT type EQUAL expression
    (19) declarevar -> . declaration_type ID EQUAL expression
    (20) declarevar -> . declaration_type ID DOUBLEDOT type
    (21) assignVar -> . ID EQUAL expression
    (22) assignVar -> . ID PLUS EQUAL expression
    (23) assignVar -> . ID LESS EQUAL expression
    (24) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (25) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (26) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (27) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (28) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (29) arrayFuncs -> . ID DOT RPOP PARA PARC
    (30) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (34) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (35) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (36) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (37) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (38) transfer -> . RBREAK
    (39) transfer -> . RCONTINUE
    (40) transfer -> . RRETURN
    (41) transfer -> . RRETURN expression
    (16) declaration_type -> . RCONST
    (17) declaration_type -> . RVAR
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    CONSOLE         shift and go to state 15
    ID              shift and go to state 18
    RIF             shift and go to state 20
    RWHILE          shift and go to state 21
    RFOR            shift and go to state 22
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26
    RRETURN         shift and go to state 27
    RCONST          shift and go to state 28
    RVAR            shift and go to state 29
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 16
    instrucciones                  shift and go to state 149
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    assignVar                      shift and go to state 6
    declareArray                   shift and go to state 7
    assingArray                    shift and go to state 8
    arrayFuncs                     shift and go to state 9
    if_else                        shift and go to state 10
    ternario                       shift and go to state 11
    while_                         shift and go to state 12
    for_                           shift and go to state 13
    transfer                       shift and go to state 14
    declaration_type               shift and go to state 17
    relacional                     shift and go to state 23
    id_                            shift and go to state 24
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    logica                         shift and go to state 32
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 138

    (36) for_ -> RFOR PARA declarevar SEMICOLON relacional . SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (37) for_ -> RFOR PARA declarevar SEMICOLON relacional . SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (44) expression -> relacional .

    SEMICOLON       shift and go to state 150
    DEQUAL          reduce using rule 44 (expression -> relacional .)
    DIFERENT        reduce using rule 44 (expression -> relacional .)
    MINOR           reduce using rule 44 (expression -> relacional .)
    MINOREQUAL      reduce using rule 44 (expression -> relacional .)
    GREATER         reduce using rule 44 (expression -> relacional .)
    GREATEREQUAL    reduce using rule 44 (expression -> relacional .)
    PLUS            reduce using rule 44 (expression -> relacional .)
    BY              reduce using rule 44 (expression -> relacional .)
    DIVIDED         reduce using rule 44 (expression -> relacional .)
    LESS            reduce using rule 44 (expression -> relacional .)
    MODUL           reduce using rule 44 (expression -> relacional .)


state 139

    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression

    DEQUAL          shift and go to state 49
    DIFERENT        shift and go to state 50
    MINOR           shift and go to state 51
    MINOREQUAL      shift and go to state 52
    GREATER         shift and go to state 53
    GREATEREQUAL    shift and go to state 54
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48


state 140

    (18) declarevar -> declaration_type ID DOUBLEDOT . type EQUAL expression
    (20) declarevar -> declaration_type ID DOUBLEDOT . type
    (77) type -> . RNUMBER
    (78) type -> . RFLOAT
    (79) type -> . RSTRING
    (80) type -> . RBOOLEAN

    RNUMBER         shift and go to state 105
    RFLOAT          shift and go to state 106
    RSTRING         shift and go to state 107
    RBOOLEAN        shift and go to state 108

    type                           shift and go to state 151

state 141

    (15) print -> CONSOLE DOT LOG PARA expression PARC .

    CONSOLE         reduce using rule 15 (print -> CONSOLE DOT LOG PARA expression PARC .)
    ID              reduce using rule 15 (print -> CONSOLE DOT LOG PARA expression PARC .)
    RIF             reduce using rule 15 (print -> CONSOLE DOT LOG PARA expression PARC .)
    RWHILE          reduce using rule 15 (print -> CONSOLE DOT LOG PARA expression PARC .)
    RFOR            reduce using rule 15 (print -> CONSOLE DOT LOG PARA expression PARC .)
    RBREAK          reduce using rule 15 (print -> CONSOLE DOT LOG PARA expression PARC .)
    RCONTINUE       reduce using rule 15 (print -> CONSOLE DOT LOG PARA expression PARC .)
    RRETURN         reduce using rule 15 (print -> CONSOLE DOT LOG PARA expression PARC .)
    RCONST          reduce using rule 15 (print -> CONSOLE DOT LOG PARA expression PARC .)
    RVAR            reduce using rule 15 (print -> CONSOLE DOT LOG PARA expression PARC .)
    NUMBER          reduce using rule 15 (print -> CONSOLE DOT LOG PARA expression PARC .)
    FLOAT           reduce using rule 15 (print -> CONSOLE DOT LOG PARA expression PARC .)
    STRING          reduce using rule 15 (print -> CONSOLE DOT LOG PARA expression PARC .)
    LESS            reduce using rule 15 (print -> CONSOLE DOT LOG PARA expression PARC .)
    NOT             reduce using rule 15 (print -> CONSOLE DOT LOG PARA expression PARC .)
    TRUE            reduce using rule 15 (print -> CONSOLE DOT LOG PARA expression PARC .)
    FALSE           reduce using rule 15 (print -> CONSOLE DOT LOG PARA expression PARC .)
    $end            reduce using rule 15 (print -> CONSOLE DOT LOG PARA expression PARC .)
    LLAVEC          reduce using rule 15 (print -> CONSOLE DOT LOG PARA expression PARC .)


state 142

    (18) declarevar -> declaration_type ID DOUBLEDOT type EQUAL expression .
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

  ! shift/reduce conflict for LESS resolved as shift
    CONSOLE         reduce using rule 18 (declarevar -> declaration_type ID DOUBLEDOT type EQUAL expression .)
    ID              reduce using rule 18 (declarevar -> declaration_type ID DOUBLEDOT type EQUAL expression .)
    RIF             reduce using rule 18 (declarevar -> declaration_type ID DOUBLEDOT type EQUAL expression .)
    RWHILE          reduce using rule 18 (declarevar -> declaration_type ID DOUBLEDOT type EQUAL expression .)
    RFOR            reduce using rule 18 (declarevar -> declaration_type ID DOUBLEDOT type EQUAL expression .)
    RBREAK          reduce using rule 18 (declarevar -> declaration_type ID DOUBLEDOT type EQUAL expression .)
    RCONTINUE       reduce using rule 18 (declarevar -> declaration_type ID DOUBLEDOT type EQUAL expression .)
    RRETURN         reduce using rule 18 (declarevar -> declaration_type ID DOUBLEDOT type EQUAL expression .)
    RCONST          reduce using rule 18 (declarevar -> declaration_type ID DOUBLEDOT type EQUAL expression .)
    RVAR            reduce using rule 18 (declarevar -> declaration_type ID DOUBLEDOT type EQUAL expression .)
    NUMBER          reduce using rule 18 (declarevar -> declaration_type ID DOUBLEDOT type EQUAL expression .)
    FLOAT           reduce using rule 18 (declarevar -> declaration_type ID DOUBLEDOT type EQUAL expression .)
    STRING          reduce using rule 18 (declarevar -> declaration_type ID DOUBLEDOT type EQUAL expression .)
    NOT             reduce using rule 18 (declarevar -> declaration_type ID DOUBLEDOT type EQUAL expression .)
    TRUE            reduce using rule 18 (declarevar -> declaration_type ID DOUBLEDOT type EQUAL expression .)
    FALSE           reduce using rule 18 (declarevar -> declaration_type ID DOUBLEDOT type EQUAL expression .)
    $end            reduce using rule 18 (declarevar -> declaration_type ID DOUBLEDOT type EQUAL expression .)
    SEMICOLON       reduce using rule 18 (declarevar -> declaration_type ID DOUBLEDOT type EQUAL expression .)
    LLAVEC          reduce using rule 18 (declarevar -> declaration_type ID DOUBLEDOT type EQUAL expression .)
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48
    DEQUAL          shift and go to state 49
    DIFERENT        shift and go to state 50
    MINOR           shift and go to state 51
    MINOREQUAL      shift and go to state 52
    GREATER         shift and go to state 53
    GREATEREQUAL    shift and go to state 54

  ! LESS            [ reduce using rule 18 (declarevar -> declaration_type ID DOUBLEDOT type EQUAL expression .) ]


state 143

    (24) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC . EQUAL BRACKETO expression_list BRACKETC
    (25) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC . EQUAL expression
    (26) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC . EQUAL BRACKETO BRACKETC

    EQUAL           shift and go to state 152


state 144

    (27) assingArray -> ID BRACKETO expression BRACKETC EQUAL expression .
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

  ! shift/reduce conflict for LESS resolved as shift
    CONSOLE         reduce using rule 27 (assingArray -> ID BRACKETO expression BRACKETC EQUAL expression .)
    ID              reduce using rule 27 (assingArray -> ID BRACKETO expression BRACKETC EQUAL expression .)
    RIF             reduce using rule 27 (assingArray -> ID BRACKETO expression BRACKETC EQUAL expression .)
    RWHILE          reduce using rule 27 (assingArray -> ID BRACKETO expression BRACKETC EQUAL expression .)
    RFOR            reduce using rule 27 (assingArray -> ID BRACKETO expression BRACKETC EQUAL expression .)
    RBREAK          reduce using rule 27 (assingArray -> ID BRACKETO expression BRACKETC EQUAL expression .)
    RCONTINUE       reduce using rule 27 (assingArray -> ID BRACKETO expression BRACKETC EQUAL expression .)
    RRETURN         reduce using rule 27 (assingArray -> ID BRACKETO expression BRACKETC EQUAL expression .)
    RCONST          reduce using rule 27 (assingArray -> ID BRACKETO expression BRACKETC EQUAL expression .)
    RVAR            reduce using rule 27 (assingArray -> ID BRACKETO expression BRACKETC EQUAL expression .)
    NUMBER          reduce using rule 27 (assingArray -> ID BRACKETO expression BRACKETC EQUAL expression .)
    FLOAT           reduce using rule 27 (assingArray -> ID BRACKETO expression BRACKETC EQUAL expression .)
    STRING          reduce using rule 27 (assingArray -> ID BRACKETO expression BRACKETC EQUAL expression .)
    NOT             reduce using rule 27 (assingArray -> ID BRACKETO expression BRACKETC EQUAL expression .)
    TRUE            reduce using rule 27 (assingArray -> ID BRACKETO expression BRACKETC EQUAL expression .)
    FALSE           reduce using rule 27 (assingArray -> ID BRACKETO expression BRACKETC EQUAL expression .)
    $end            reduce using rule 27 (assingArray -> ID BRACKETO expression BRACKETC EQUAL expression .)
    LLAVEC          reduce using rule 27 (assingArray -> ID BRACKETO expression BRACKETC EQUAL expression .)
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48
    DEQUAL          shift and go to state 49
    DIFERENT        shift and go to state 50
    MINOR           shift and go to state 51
    MINOREQUAL      shift and go to state 52
    GREATER         shift and go to state 53
    GREATEREQUAL    shift and go to state 54

  ! LESS            [ reduce using rule 27 (assingArray -> ID BRACKETO expression BRACKETC EQUAL expression .) ]


state 145

    (28) arrayFuncs -> ID DOT RPUSH PARA expression PARC .

    CONSOLE         reduce using rule 28 (arrayFuncs -> ID DOT RPUSH PARA expression PARC .)
    ID              reduce using rule 28 (arrayFuncs -> ID DOT RPUSH PARA expression PARC .)
    RIF             reduce using rule 28 (arrayFuncs -> ID DOT RPUSH PARA expression PARC .)
    RWHILE          reduce using rule 28 (arrayFuncs -> ID DOT RPUSH PARA expression PARC .)
    RFOR            reduce using rule 28 (arrayFuncs -> ID DOT RPUSH PARA expression PARC .)
    RBREAK          reduce using rule 28 (arrayFuncs -> ID DOT RPUSH PARA expression PARC .)
    RCONTINUE       reduce using rule 28 (arrayFuncs -> ID DOT RPUSH PARA expression PARC .)
    RRETURN         reduce using rule 28 (arrayFuncs -> ID DOT RPUSH PARA expression PARC .)
    RCONST          reduce using rule 28 (arrayFuncs -> ID DOT RPUSH PARA expression PARC .)
    RVAR            reduce using rule 28 (arrayFuncs -> ID DOT RPUSH PARA expression PARC .)
    NUMBER          reduce using rule 28 (arrayFuncs -> ID DOT RPUSH PARA expression PARC .)
    FLOAT           reduce using rule 28 (arrayFuncs -> ID DOT RPUSH PARA expression PARC .)
    STRING          reduce using rule 28 (arrayFuncs -> ID DOT RPUSH PARA expression PARC .)
    LESS            reduce using rule 28 (arrayFuncs -> ID DOT RPUSH PARA expression PARC .)
    NOT             reduce using rule 28 (arrayFuncs -> ID DOT RPUSH PARA expression PARC .)
    TRUE            reduce using rule 28 (arrayFuncs -> ID DOT RPUSH PARA expression PARC .)
    FALSE           reduce using rule 28 (arrayFuncs -> ID DOT RPUSH PARA expression PARC .)
    $end            reduce using rule 28 (arrayFuncs -> ID DOT RPUSH PARA expression PARC .)
    LLAVEC          reduce using rule 28 (arrayFuncs -> ID DOT RPUSH PARA expression PARC .)


state 146

    (72) arraysExpression -> ID DOT RINDEXOF PARA expression PARC .

    QUESTIONM       reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    PLUS            reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    BY              reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    DIVIDED         reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    LESS            reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    MODUL           reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    DEQUAL          reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    DIFERENT        reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    MINOR           reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    MINOREQUAL      reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    GREATER         reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    GREATEREQUAL    reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    CONSOLE         reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    ID              reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    RIF             reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    RWHILE          reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    RFOR            reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    RBREAK          reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    RCONTINUE       reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    RRETURN         reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    RCONST          reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    RVAR            reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    NUMBER          reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    FLOAT           reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    STRING          reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    NOT             reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    TRUE            reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    FALSE           reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    $end            reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    LLAVEC          reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    DOUBLEDOT       reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    BRACKETC        reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    PARC            reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    SEMICOLON       reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    COMMA           reduce using rule 72 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)


state 147

    (71) arraysExpression -> ID DOT RPOP PARA PARC .

    PLUS            reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    BY              reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    DIVIDED         reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    LESS            reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    MODUL           reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    DEQUAL          reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    DIFERENT        reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    MINOR           reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    MINOREQUAL      reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    GREATER         reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    GREATEREQUAL    reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    QUESTIONM       reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    CONSOLE         reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    ID              reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    RIF             reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    RWHILE          reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    RFOR            reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    RBREAK          reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    RCONTINUE       reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    RRETURN         reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    RCONST          reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    RVAR            reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    NUMBER          reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    FLOAT           reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    STRING          reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    NOT             reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    TRUE            reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    FALSE           reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    $end            reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    LLAVEC          reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    DOUBLEDOT       reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    BRACKETC        reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    PARC            reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    SEMICOLON       reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)
    COMMA           reduce using rule 71 (arraysExpression -> ID DOT RPOP PARA PARC .)


state 148

    (30) if_else -> RIF PARA expression PARC LLAVEA instrucciones . LLAVEC else
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declarevar
    (6) instruccion -> . assignVar
    (7) instruccion -> . declareArray
    (8) instruccion -> . assingArray
    (9) instruccion -> . arrayFuncs
    (10) instruccion -> . if_else
    (11) instruccion -> . ternario
    (12) instruccion -> . while_
    (13) instruccion -> . for_
    (14) instruccion -> . transfer
    (15) print -> . CONSOLE DOT LOG PARA expression PARC
    (18) declarevar -> . declaration_type ID DOUBLEDOT type EQUAL expression
    (19) declarevar -> . declaration_type ID EQUAL expression
    (20) declarevar -> . declaration_type ID DOUBLEDOT type
    (21) assignVar -> . ID EQUAL expression
    (22) assignVar -> . ID PLUS EQUAL expression
    (23) assignVar -> . ID LESS EQUAL expression
    (24) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (25) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (26) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (27) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (28) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (29) arrayFuncs -> . ID DOT RPOP PARA PARC
    (30) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (34) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (35) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (36) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (37) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (38) transfer -> . RBREAK
    (39) transfer -> . RCONTINUE
    (40) transfer -> . RRETURN
    (41) transfer -> . RRETURN expression
    (16) declaration_type -> . RCONST
    (17) declaration_type -> . RVAR
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    LLAVEC          shift and go to state 153
    CONSOLE         shift and go to state 15
    ID              shift and go to state 18
    RIF             shift and go to state 20
    RWHILE          shift and go to state 21
    RFOR            shift and go to state 22
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26
    RRETURN         shift and go to state 27
    RCONST          shift and go to state 28
    RVAR            shift and go to state 29
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 16
    instruccion                    shift and go to state 41
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    assignVar                      shift and go to state 6
    declareArray                   shift and go to state 7
    assingArray                    shift and go to state 8
    arrayFuncs                     shift and go to state 9
    if_else                        shift and go to state 10
    ternario                       shift and go to state 11
    while_                         shift and go to state 12
    for_                           shift and go to state 13
    transfer                       shift and go to state 14
    declaration_type               shift and go to state 17
    relacional                     shift and go to state 23
    id_                            shift and go to state 24
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    logica                         shift and go to state 32
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 149

    (35) while_ -> RWHILE PARA expression PARC LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declarevar
    (6) instruccion -> . assignVar
    (7) instruccion -> . declareArray
    (8) instruccion -> . assingArray
    (9) instruccion -> . arrayFuncs
    (10) instruccion -> . if_else
    (11) instruccion -> . ternario
    (12) instruccion -> . while_
    (13) instruccion -> . for_
    (14) instruccion -> . transfer
    (15) print -> . CONSOLE DOT LOG PARA expression PARC
    (18) declarevar -> . declaration_type ID DOUBLEDOT type EQUAL expression
    (19) declarevar -> . declaration_type ID EQUAL expression
    (20) declarevar -> . declaration_type ID DOUBLEDOT type
    (21) assignVar -> . ID EQUAL expression
    (22) assignVar -> . ID PLUS EQUAL expression
    (23) assignVar -> . ID LESS EQUAL expression
    (24) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (25) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (26) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (27) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (28) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (29) arrayFuncs -> . ID DOT RPOP PARA PARC
    (30) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (34) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (35) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (36) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (37) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (38) transfer -> . RBREAK
    (39) transfer -> . RCONTINUE
    (40) transfer -> . RRETURN
    (41) transfer -> . RRETURN expression
    (16) declaration_type -> . RCONST
    (17) declaration_type -> . RVAR
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    LLAVEC          shift and go to state 154
    CONSOLE         shift and go to state 15
    ID              shift and go to state 18
    RIF             shift and go to state 20
    RWHILE          shift and go to state 21
    RFOR            shift and go to state 22
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26
    RRETURN         shift and go to state 27
    RCONST          shift and go to state 28
    RVAR            shift and go to state 29
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 16
    instruccion                    shift and go to state 41
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    assignVar                      shift and go to state 6
    declareArray                   shift and go to state 7
    assingArray                    shift and go to state 8
    arrayFuncs                     shift and go to state 9
    if_else                        shift and go to state 10
    ternario                       shift and go to state 11
    while_                         shift and go to state 12
    for_                           shift and go to state 13
    transfer                       shift and go to state 14
    declaration_type               shift and go to state 17
    relacional                     shift and go to state 23
    id_                            shift and go to state 24
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    logica                         shift and go to state 32
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 150

    (36) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON . id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (37) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON . id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC

    ID              shift and go to state 156

    id_                            shift and go to state 155

state 151

    (18) declarevar -> declaration_type ID DOUBLEDOT type . EQUAL expression
    (20) declarevar -> declaration_type ID DOUBLEDOT type .

    EQUAL           shift and go to state 126
    SEMICOLON       reduce using rule 20 (declarevar -> declaration_type ID DOUBLEDOT type .)


state 152

    (24) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL . BRACKETO expression_list BRACKETC
    (25) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL . expression
    (26) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL . BRACKETO BRACKETC
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    BRACKETO        shift and go to state 157
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 158
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 153

    (30) if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC . else
    (31) else -> . RELSE LLAVEA instrucciones LLAVEC
    (32) else -> . RELSE if_else
    (33) else -> .

    RELSE           shift and go to state 160
    CONSOLE         reduce using rule 33 (else -> .)
    ID              reduce using rule 33 (else -> .)
    RIF             reduce using rule 33 (else -> .)
    RWHILE          reduce using rule 33 (else -> .)
    RFOR            reduce using rule 33 (else -> .)
    RBREAK          reduce using rule 33 (else -> .)
    RCONTINUE       reduce using rule 33 (else -> .)
    RRETURN         reduce using rule 33 (else -> .)
    RCONST          reduce using rule 33 (else -> .)
    RVAR            reduce using rule 33 (else -> .)
    NUMBER          reduce using rule 33 (else -> .)
    FLOAT           reduce using rule 33 (else -> .)
    STRING          reduce using rule 33 (else -> .)
    LESS            reduce using rule 33 (else -> .)
    NOT             reduce using rule 33 (else -> .)
    TRUE            reduce using rule 33 (else -> .)
    FALSE           reduce using rule 33 (else -> .)
    $end            reduce using rule 33 (else -> .)
    LLAVEC          reduce using rule 33 (else -> .)

    else                           shift and go to state 159

state 154

    (35) while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .

    CONSOLE         reduce using rule 35 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    ID              reduce using rule 35 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RIF             reduce using rule 35 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RWHILE          reduce using rule 35 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RFOR            reduce using rule 35 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RBREAK          reduce using rule 35 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RCONTINUE       reduce using rule 35 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RRETURN         reduce using rule 35 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RCONST          reduce using rule 35 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RVAR            reduce using rule 35 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    NUMBER          reduce using rule 35 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    FLOAT           reduce using rule 35 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    STRING          reduce using rule 35 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    LESS            reduce using rule 35 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    NOT             reduce using rule 35 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    TRUE            reduce using rule 35 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    FALSE           reduce using rule 35 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    $end            reduce using rule 35 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    LLAVEC          reduce using rule 35 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)


state 155

    (36) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ . PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (37) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ . LESS LESS PARC LLAVEA instrucciones LLAVEC

    PLUS            shift and go to state 161
    LESS            shift and go to state 162


state 156

    (50) id_ -> ID .
    (51) id_ -> ID . BRACKETO expression BRACKETC

    PLUS            reduce using rule 50 (id_ -> ID .)
    LESS            reduce using rule 50 (id_ -> ID .)
    BRACKETO        shift and go to state 94


state 157

    (24) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO . expression_list BRACKETC
    (26) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO . BRACKETC
    (48) expression_list -> . expression_list COMMA expression
    (49) expression_list -> . expression
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    BRACKETC        shift and go to state 163
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression_list                shift and go to state 164
    expression                     shift and go to state 165
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 158

    (25) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

  ! shift/reduce conflict for LESS resolved as shift
    CONSOLE         reduce using rule 25 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .)
    ID              reduce using rule 25 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .)
    RIF             reduce using rule 25 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .)
    RWHILE          reduce using rule 25 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .)
    RFOR            reduce using rule 25 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .)
    RBREAK          reduce using rule 25 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .)
    RCONTINUE       reduce using rule 25 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .)
    RRETURN         reduce using rule 25 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .)
    RCONST          reduce using rule 25 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .)
    RVAR            reduce using rule 25 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .)
    NUMBER          reduce using rule 25 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .)
    FLOAT           reduce using rule 25 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .)
    STRING          reduce using rule 25 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .)
    NOT             reduce using rule 25 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .)
    TRUE            reduce using rule 25 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .)
    FALSE           reduce using rule 25 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .)
    $end            reduce using rule 25 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .)
    LLAVEC          reduce using rule 25 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .)
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48
    DEQUAL          shift and go to state 49
    DIFERENT        shift and go to state 50
    MINOR           shift and go to state 51
    MINOREQUAL      shift and go to state 52
    GREATER         shift and go to state 53
    GREATEREQUAL    shift and go to state 54

  ! LESS            [ reduce using rule 25 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .) ]


state 159

    (30) if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .

    CONSOLE         reduce using rule 30 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    ID              reduce using rule 30 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RIF             reduce using rule 30 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RWHILE          reduce using rule 30 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RFOR            reduce using rule 30 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RBREAK          reduce using rule 30 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RCONTINUE       reduce using rule 30 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RRETURN         reduce using rule 30 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RCONST          reduce using rule 30 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RVAR            reduce using rule 30 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    NUMBER          reduce using rule 30 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    FLOAT           reduce using rule 30 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    STRING          reduce using rule 30 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    LESS            reduce using rule 30 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    NOT             reduce using rule 30 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    TRUE            reduce using rule 30 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    FALSE           reduce using rule 30 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    $end            reduce using rule 30 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    LLAVEC          reduce using rule 30 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)


state 160

    (31) else -> RELSE . LLAVEA instrucciones LLAVEC
    (32) else -> RELSE . if_else
    (30) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else

    LLAVEA          shift and go to state 166
    RIF             shift and go to state 20

    if_else                        shift and go to state 167

state 161

    (36) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS . PLUS PARC LLAVEA instrucciones LLAVEC

    PLUS            shift and go to state 168


state 162

    (37) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS . LESS PARC LLAVEA instrucciones LLAVEC

    LESS            shift and go to state 169


state 163

    (26) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .

    CONSOLE         reduce using rule 26 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .)
    ID              reduce using rule 26 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .)
    RIF             reduce using rule 26 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .)
    RWHILE          reduce using rule 26 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .)
    RFOR            reduce using rule 26 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .)
    RBREAK          reduce using rule 26 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .)
    RCONTINUE       reduce using rule 26 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .)
    RRETURN         reduce using rule 26 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .)
    RCONST          reduce using rule 26 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .)
    RVAR            reduce using rule 26 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .)
    NUMBER          reduce using rule 26 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .)
    FLOAT           reduce using rule 26 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .)
    STRING          reduce using rule 26 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .)
    LESS            reduce using rule 26 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .)
    NOT             reduce using rule 26 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .)
    TRUE            reduce using rule 26 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .)
    FALSE           reduce using rule 26 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .)
    $end            reduce using rule 26 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .)
    LLAVEC          reduce using rule 26 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .)


state 164

    (24) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list . BRACKETC
    (48) expression_list -> expression_list . COMMA expression

    BRACKETC        shift and go to state 170
    COMMA           shift and go to state 171


state 165

    (49) expression_list -> expression .
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

    BRACKETC        reduce using rule 49 (expression_list -> expression .)
    COMMA           reduce using rule 49 (expression_list -> expression .)
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48
    DEQUAL          shift and go to state 49
    DIFERENT        shift and go to state 50
    MINOR           shift and go to state 51
    MINOREQUAL      shift and go to state 52
    GREATER         shift and go to state 53
    GREATEREQUAL    shift and go to state 54


state 166

    (31) else -> RELSE LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declarevar
    (6) instruccion -> . assignVar
    (7) instruccion -> . declareArray
    (8) instruccion -> . assingArray
    (9) instruccion -> . arrayFuncs
    (10) instruccion -> . if_else
    (11) instruccion -> . ternario
    (12) instruccion -> . while_
    (13) instruccion -> . for_
    (14) instruccion -> . transfer
    (15) print -> . CONSOLE DOT LOG PARA expression PARC
    (18) declarevar -> . declaration_type ID DOUBLEDOT type EQUAL expression
    (19) declarevar -> . declaration_type ID EQUAL expression
    (20) declarevar -> . declaration_type ID DOUBLEDOT type
    (21) assignVar -> . ID EQUAL expression
    (22) assignVar -> . ID PLUS EQUAL expression
    (23) assignVar -> . ID LESS EQUAL expression
    (24) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (25) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (26) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (27) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (28) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (29) arrayFuncs -> . ID DOT RPOP PARA PARC
    (30) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (34) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (35) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (36) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (37) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (38) transfer -> . RBREAK
    (39) transfer -> . RCONTINUE
    (40) transfer -> . RRETURN
    (41) transfer -> . RRETURN expression
    (16) declaration_type -> . RCONST
    (17) declaration_type -> . RVAR
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    CONSOLE         shift and go to state 15
    ID              shift and go to state 18
    RIF             shift and go to state 20
    RWHILE          shift and go to state 21
    RFOR            shift and go to state 22
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26
    RRETURN         shift and go to state 27
    RCONST          shift and go to state 28
    RVAR            shift and go to state 29
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    instrucciones                  shift and go to state 172
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    assignVar                      shift and go to state 6
    declareArray                   shift and go to state 7
    assingArray                    shift and go to state 8
    arrayFuncs                     shift and go to state 9
    if_else                        shift and go to state 10
    ternario                       shift and go to state 11
    while_                         shift and go to state 12
    for_                           shift and go to state 13
    transfer                       shift and go to state 14
    expression                     shift and go to state 16
    declaration_type               shift and go to state 17
    relacional                     shift and go to state 23
    id_                            shift and go to state 24
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    logica                         shift and go to state 32
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 167

    (32) else -> RELSE if_else .

    CONSOLE         reduce using rule 32 (else -> RELSE if_else .)
    ID              reduce using rule 32 (else -> RELSE if_else .)
    RIF             reduce using rule 32 (else -> RELSE if_else .)
    RWHILE          reduce using rule 32 (else -> RELSE if_else .)
    RFOR            reduce using rule 32 (else -> RELSE if_else .)
    RBREAK          reduce using rule 32 (else -> RELSE if_else .)
    RCONTINUE       reduce using rule 32 (else -> RELSE if_else .)
    RRETURN         reduce using rule 32 (else -> RELSE if_else .)
    RCONST          reduce using rule 32 (else -> RELSE if_else .)
    RVAR            reduce using rule 32 (else -> RELSE if_else .)
    NUMBER          reduce using rule 32 (else -> RELSE if_else .)
    FLOAT           reduce using rule 32 (else -> RELSE if_else .)
    STRING          reduce using rule 32 (else -> RELSE if_else .)
    LESS            reduce using rule 32 (else -> RELSE if_else .)
    NOT             reduce using rule 32 (else -> RELSE if_else .)
    TRUE            reduce using rule 32 (else -> RELSE if_else .)
    FALSE           reduce using rule 32 (else -> RELSE if_else .)
    $end            reduce using rule 32 (else -> RELSE if_else .)
    LLAVEC          reduce using rule 32 (else -> RELSE if_else .)


state 168

    (36) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS . PARC LLAVEA instrucciones LLAVEC

    PARC            shift and go to state 173


state 169

    (37) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS . PARC LLAVEA instrucciones LLAVEC

    PARC            shift and go to state 174


state 170

    (24) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .

    CONSOLE         reduce using rule 24 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .)
    ID              reduce using rule 24 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .)
    RIF             reduce using rule 24 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .)
    RWHILE          reduce using rule 24 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .)
    RFOR            reduce using rule 24 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .)
    RBREAK          reduce using rule 24 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .)
    RCONTINUE       reduce using rule 24 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .)
    RRETURN         reduce using rule 24 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .)
    RCONST          reduce using rule 24 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .)
    RVAR            reduce using rule 24 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .)
    NUMBER          reduce using rule 24 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .)
    FLOAT           reduce using rule 24 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .)
    STRING          reduce using rule 24 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .)
    LESS            reduce using rule 24 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .)
    NOT             reduce using rule 24 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .)
    TRUE            reduce using rule 24 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .)
    FALSE           reduce using rule 24 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .)
    $end            reduce using rule 24 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .)
    LLAVEC          reduce using rule 24 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .)


state 171

    (48) expression_list -> expression_list COMMA . expression
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    ID              shift and go to state 62
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    expression                     shift and go to state 175
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    relacional                     shift and go to state 23
    logica                         shift and go to state 32
    id_                            shift and go to state 24
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 172

    (31) else -> RELSE LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declarevar
    (6) instruccion -> . assignVar
    (7) instruccion -> . declareArray
    (8) instruccion -> . assingArray
    (9) instruccion -> . arrayFuncs
    (10) instruccion -> . if_else
    (11) instruccion -> . ternario
    (12) instruccion -> . while_
    (13) instruccion -> . for_
    (14) instruccion -> . transfer
    (15) print -> . CONSOLE DOT LOG PARA expression PARC
    (18) declarevar -> . declaration_type ID DOUBLEDOT type EQUAL expression
    (19) declarevar -> . declaration_type ID EQUAL expression
    (20) declarevar -> . declaration_type ID DOUBLEDOT type
    (21) assignVar -> . ID EQUAL expression
    (22) assignVar -> . ID PLUS EQUAL expression
    (23) assignVar -> . ID LESS EQUAL expression
    (24) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (25) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (26) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (27) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (28) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (29) arrayFuncs -> . ID DOT RPOP PARA PARC
    (30) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (34) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (35) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (36) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (37) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (38) transfer -> . RBREAK
    (39) transfer -> . RCONTINUE
    (40) transfer -> . RRETURN
    (41) transfer -> . RRETURN expression
    (16) declaration_type -> . RCONST
    (17) declaration_type -> . RVAR
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    LLAVEC          shift and go to state 176
    CONSOLE         shift and go to state 15
    ID              shift and go to state 18
    RIF             shift and go to state 20
    RWHILE          shift and go to state 21
    RFOR            shift and go to state 22
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26
    RRETURN         shift and go to state 27
    RCONST          shift and go to state 28
    RVAR            shift and go to state 29
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    instruccion                    shift and go to state 41
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    assignVar                      shift and go to state 6
    declareArray                   shift and go to state 7
    assingArray                    shift and go to state 8
    arrayFuncs                     shift and go to state 9
    if_else                        shift and go to state 10
    ternario                       shift and go to state 11
    while_                         shift and go to state 12
    for_                           shift and go to state 13
    transfer                       shift and go to state 14
    expression                     shift and go to state 16
    declaration_type               shift and go to state 17
    relacional                     shift and go to state 23
    id_                            shift and go to state 24
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    logica                         shift and go to state 32
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 173

    (36) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC . LLAVEA instrucciones LLAVEC

    LLAVEA          shift and go to state 177


state 174

    (37) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC . LLAVEA instrucciones LLAVEC

    LLAVEA          shift and go to state 178


state 175

    (48) expression_list -> expression_list COMMA expression .
    (52) aritmetica -> expression . PLUS expression
    (53) aritmetica -> expression . BY expression
    (54) aritmetica -> expression . DIVIDED expression
    (55) aritmetica -> expression . LESS expression
    (56) aritmetica -> expression . MODUL expression
    (58) relacional -> expression . DEQUAL expression
    (59) relacional -> expression . DIFERENT expression
    (60) relacional -> expression . MINOR expression
    (61) relacional -> expression . MINOREQUAL expression
    (62) relacional -> expression . GREATER expression
    (63) relacional -> expression . GREATEREQUAL expression

    BRACKETC        reduce using rule 48 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 48 (expression_list -> expression_list COMMA expression .)
    PLUS            shift and go to state 44
    BY              shift and go to state 45
    DIVIDED         shift and go to state 46
    LESS            shift and go to state 47
    MODUL           shift and go to state 48
    DEQUAL          shift and go to state 49
    DIFERENT        shift and go to state 50
    MINOR           shift and go to state 51
    MINOREQUAL      shift and go to state 52
    GREATER         shift and go to state 53
    GREATEREQUAL    shift and go to state 54


state 176

    (31) else -> RELSE LLAVEA instrucciones LLAVEC .

    CONSOLE         reduce using rule 31 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    ID              reduce using rule 31 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RIF             reduce using rule 31 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RWHILE          reduce using rule 31 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RFOR            reduce using rule 31 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RBREAK          reduce using rule 31 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RCONTINUE       reduce using rule 31 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RRETURN         reduce using rule 31 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RCONST          reduce using rule 31 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RVAR            reduce using rule 31 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    NUMBER          reduce using rule 31 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    FLOAT           reduce using rule 31 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    STRING          reduce using rule 31 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    LESS            reduce using rule 31 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    NOT             reduce using rule 31 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    TRUE            reduce using rule 31 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    FALSE           reduce using rule 31 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    $end            reduce using rule 31 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    LLAVEC          reduce using rule 31 (else -> RELSE LLAVEA instrucciones LLAVEC .)


state 177

    (36) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declarevar
    (6) instruccion -> . assignVar
    (7) instruccion -> . declareArray
    (8) instruccion -> . assingArray
    (9) instruccion -> . arrayFuncs
    (10) instruccion -> . if_else
    (11) instruccion -> . ternario
    (12) instruccion -> . while_
    (13) instruccion -> . for_
    (14) instruccion -> . transfer
    (15) print -> . CONSOLE DOT LOG PARA expression PARC
    (18) declarevar -> . declaration_type ID DOUBLEDOT type EQUAL expression
    (19) declarevar -> . declaration_type ID EQUAL expression
    (20) declarevar -> . declaration_type ID DOUBLEDOT type
    (21) assignVar -> . ID EQUAL expression
    (22) assignVar -> . ID PLUS EQUAL expression
    (23) assignVar -> . ID LESS EQUAL expression
    (24) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (25) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (26) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (27) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (28) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (29) arrayFuncs -> . ID DOT RPOP PARA PARC
    (30) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (34) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (35) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (36) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (37) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (38) transfer -> . RBREAK
    (39) transfer -> . RCONTINUE
    (40) transfer -> . RRETURN
    (41) transfer -> . RRETURN expression
    (16) declaration_type -> . RCONST
    (17) declaration_type -> . RVAR
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    CONSOLE         shift and go to state 15
    ID              shift and go to state 18
    RIF             shift and go to state 20
    RWHILE          shift and go to state 21
    RFOR            shift and go to state 22
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26
    RRETURN         shift and go to state 27
    RCONST          shift and go to state 28
    RVAR            shift and go to state 29
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    declarevar                     shift and go to state 5
    relacional                     shift and go to state 23
    id_                            shift and go to state 24
    instrucciones                  shift and go to state 179
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    assignVar                      shift and go to state 6
    declareArray                   shift and go to state 7
    assingArray                    shift and go to state 8
    arrayFuncs                     shift and go to state 9
    if_else                        shift and go to state 10
    ternario                       shift and go to state 11
    while_                         shift and go to state 12
    for_                           shift and go to state 13
    transfer                       shift and go to state 14
    expression                     shift and go to state 16
    declaration_type               shift and go to state 17
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    logica                         shift and go to state 32
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 178

    (37) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declarevar
    (6) instruccion -> . assignVar
    (7) instruccion -> . declareArray
    (8) instruccion -> . assingArray
    (9) instruccion -> . arrayFuncs
    (10) instruccion -> . if_else
    (11) instruccion -> . ternario
    (12) instruccion -> . while_
    (13) instruccion -> . for_
    (14) instruccion -> . transfer
    (15) print -> . CONSOLE DOT LOG PARA expression PARC
    (18) declarevar -> . declaration_type ID DOUBLEDOT type EQUAL expression
    (19) declarevar -> . declaration_type ID EQUAL expression
    (20) declarevar -> . declaration_type ID DOUBLEDOT type
    (21) assignVar -> . ID EQUAL expression
    (22) assignVar -> . ID PLUS EQUAL expression
    (23) assignVar -> . ID LESS EQUAL expression
    (24) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (25) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (26) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (27) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (28) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (29) arrayFuncs -> . ID DOT RPOP PARA PARC
    (30) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (34) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (35) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (36) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (37) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (38) transfer -> . RBREAK
    (39) transfer -> . RCONTINUE
    (40) transfer -> . RRETURN
    (41) transfer -> . RRETURN expression
    (16) declaration_type -> . RCONST
    (17) declaration_type -> . RVAR
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    CONSOLE         shift and go to state 15
    ID              shift and go to state 18
    RIF             shift and go to state 20
    RWHILE          shift and go to state 21
    RFOR            shift and go to state 22
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26
    RRETURN         shift and go to state 27
    RCONST          shift and go to state 28
    RVAR            shift and go to state 29
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    declarevar                     shift and go to state 5
    relacional                     shift and go to state 23
    id_                            shift and go to state 24
    instrucciones                  shift and go to state 180
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    assignVar                      shift and go to state 6
    declareArray                   shift and go to state 7
    assingArray                    shift and go to state 8
    arrayFuncs                     shift and go to state 9
    if_else                        shift and go to state 10
    ternario                       shift and go to state 11
    while_                         shift and go to state 12
    for_                           shift and go to state 13
    transfer                       shift and go to state 14
    expression                     shift and go to state 16
    declaration_type               shift and go to state 17
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    logica                         shift and go to state 32
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 179

    (36) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declarevar
    (6) instruccion -> . assignVar
    (7) instruccion -> . declareArray
    (8) instruccion -> . assingArray
    (9) instruccion -> . arrayFuncs
    (10) instruccion -> . if_else
    (11) instruccion -> . ternario
    (12) instruccion -> . while_
    (13) instruccion -> . for_
    (14) instruccion -> . transfer
    (15) print -> . CONSOLE DOT LOG PARA expression PARC
    (18) declarevar -> . declaration_type ID DOUBLEDOT type EQUAL expression
    (19) declarevar -> . declaration_type ID EQUAL expression
    (20) declarevar -> . declaration_type ID DOUBLEDOT type
    (21) assignVar -> . ID EQUAL expression
    (22) assignVar -> . ID PLUS EQUAL expression
    (23) assignVar -> . ID LESS EQUAL expression
    (24) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (25) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (26) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (27) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (28) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (29) arrayFuncs -> . ID DOT RPOP PARA PARC
    (30) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (34) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (35) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (36) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (37) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (38) transfer -> . RBREAK
    (39) transfer -> . RCONTINUE
    (40) transfer -> . RRETURN
    (41) transfer -> . RRETURN expression
    (16) declaration_type -> . RCONST
    (17) declaration_type -> . RVAR
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    LLAVEC          shift and go to state 181
    CONSOLE         shift and go to state 15
    ID              shift and go to state 18
    RIF             shift and go to state 20
    RWHILE          shift and go to state 21
    RFOR            shift and go to state 22
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26
    RRETURN         shift and go to state 27
    RCONST          shift and go to state 28
    RVAR            shift and go to state 29
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    declarevar                     shift and go to state 5
    relacional                     shift and go to state 23
    id_                            shift and go to state 24
    instruccion                    shift and go to state 41
    print                          shift and go to state 4
    assignVar                      shift and go to state 6
    declareArray                   shift and go to state 7
    assingArray                    shift and go to state 8
    arrayFuncs                     shift and go to state 9
    if_else                        shift and go to state 10
    ternario                       shift and go to state 11
    while_                         shift and go to state 12
    for_                           shift and go to state 13
    transfer                       shift and go to state 14
    expression                     shift and go to state 16
    declaration_type               shift and go to state 17
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    logica                         shift and go to state 32
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 180

    (37) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declarevar
    (6) instruccion -> . assignVar
    (7) instruccion -> . declareArray
    (8) instruccion -> . assingArray
    (9) instruccion -> . arrayFuncs
    (10) instruccion -> . if_else
    (11) instruccion -> . ternario
    (12) instruccion -> . while_
    (13) instruccion -> . for_
    (14) instruccion -> . transfer
    (15) print -> . CONSOLE DOT LOG PARA expression PARC
    (18) declarevar -> . declaration_type ID DOUBLEDOT type EQUAL expression
    (19) declarevar -> . declaration_type ID EQUAL expression
    (20) declarevar -> . declaration_type ID DOUBLEDOT type
    (21) assignVar -> . ID EQUAL expression
    (22) assignVar -> . ID PLUS EQUAL expression
    (23) assignVar -> . ID LESS EQUAL expression
    (24) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (25) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (26) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (27) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (28) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (29) arrayFuncs -> . ID DOT RPOP PARA PARC
    (30) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (34) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (35) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (36) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (37) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (38) transfer -> . RBREAK
    (39) transfer -> . RCONTINUE
    (40) transfer -> . RRETURN
    (41) transfer -> . RRETURN expression
    (16) declaration_type -> . RCONST
    (17) declaration_type -> . RVAR
    (42) expression -> . primitivo
    (43) expression -> . aritmetica
    (44) expression -> . relacional
    (45) expression -> . logica
    (46) expression -> . id_
    (47) expression -> . arraysExpression
    (67) primitivo -> . NUMBER
    (68) primitivo -> . FLOAT
    (69) primitivo -> . STRING
    (70) primitivo -> . boolean
    (52) aritmetica -> . expression PLUS expression
    (53) aritmetica -> . expression BY expression
    (54) aritmetica -> . expression DIVIDED expression
    (55) aritmetica -> . expression LESS expression
    (56) aritmetica -> . expression MODUL expression
    (57) aritmetica -> . LESS expression
    (58) relacional -> . expression DEQUAL expression
    (59) relacional -> . expression DIFERENT expression
    (60) relacional -> . expression MINOR expression
    (61) relacional -> . expression MINOREQUAL expression
    (62) relacional -> . expression GREATER expression
    (63) relacional -> . expression GREATEREQUAL expression
    (64) logica -> . boolean AND boolean
    (65) logica -> . boolean OR boolean
    (66) logica -> . NOT boolean
    (50) id_ -> . ID
    (51) id_ -> . ID BRACKETO expression BRACKETC
    (71) arraysExpression -> . ID DOT RPOP PARA PARC
    (72) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (73) arraysExpression -> . ID DOT RJOIN PARA PARC
    (74) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (75) boolean -> . TRUE
    (76) boolean -> . FALSE

    LLAVEC          shift and go to state 182
    CONSOLE         shift and go to state 15
    ID              shift and go to state 18
    RIF             shift and go to state 20
    RWHILE          shift and go to state 21
    RFOR            shift and go to state 22
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26
    RRETURN         shift and go to state 27
    RCONST          shift and go to state 28
    RVAR            shift and go to state 29
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36
    LESS            shift and go to state 19
    NOT             shift and go to state 38
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    declarevar                     shift and go to state 5
    relacional                     shift and go to state 23
    id_                            shift and go to state 24
    instruccion                    shift and go to state 41
    print                          shift and go to state 4
    assignVar                      shift and go to state 6
    declareArray                   shift and go to state 7
    assingArray                    shift and go to state 8
    arrayFuncs                     shift and go to state 9
    if_else                        shift and go to state 10
    ternario                       shift and go to state 11
    while_                         shift and go to state 12
    for_                           shift and go to state 13
    transfer                       shift and go to state 14
    expression                     shift and go to state 16
    declaration_type               shift and go to state 17
    primitivo                      shift and go to state 30
    aritmetica                     shift and go to state 31
    logica                         shift and go to state 32
    arraysExpression               shift and go to state 33
    boolean                        shift and go to state 37

state 181

    (36) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .

    CONSOLE         reduce using rule 36 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    ID              reduce using rule 36 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RIF             reduce using rule 36 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RWHILE          reduce using rule 36 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RFOR            reduce using rule 36 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RBREAK          reduce using rule 36 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RCONTINUE       reduce using rule 36 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RRETURN         reduce using rule 36 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RCONST          reduce using rule 36 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RVAR            reduce using rule 36 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    NUMBER          reduce using rule 36 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    FLOAT           reduce using rule 36 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    STRING          reduce using rule 36 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    LESS            reduce using rule 36 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    NOT             reduce using rule 36 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    TRUE            reduce using rule 36 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    FALSE           reduce using rule 36 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    $end            reduce using rule 36 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    LLAVEC          reduce using rule 36 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)


state 182

    (37) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .

    CONSOLE         reduce using rule 37 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    ID              reduce using rule 37 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RIF             reduce using rule 37 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RWHILE          reduce using rule 37 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RFOR            reduce using rule 37 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RBREAK          reduce using rule 37 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RCONTINUE       reduce using rule 37 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RRETURN         reduce using rule 37 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RCONST          reduce using rule 37 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RVAR            reduce using rule 37 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    NUMBER          reduce using rule 37 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    FLOAT           reduce using rule 37 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    STRING          reduce using rule 37 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    LESS            reduce using rule 37 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    NOT             reduce using rule 37 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    TRUE            reduce using rule 37 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    FALSE           reduce using rule 37 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    $end            reduce using rule 37 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    LLAVEC          reduce using rule 37 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 18 resolved as shift
WARNING: shift/reduce conflict for LESS in state 18 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 27 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 27 resolved as shift
WARNING: shift/reduce conflict for STRING in state 27 resolved as shift
WARNING: shift/reduce conflict for LESS in state 27 resolved as shift
WARNING: shift/reduce conflict for NOT in state 27 resolved as shift
WARNING: shift/reduce conflict for ID in state 27 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 27 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 27 resolved as shift
WARNING: shift/reduce conflict for LESS in state 66 resolved as shift
WARNING: shift/reduce conflict for LESS in state 85 resolved as shift
WARNING: shift/reduce conflict for LESS in state 109 resolved as shift
WARNING: shift/reduce conflict for LESS in state 110 resolved as shift
WARNING: shift/reduce conflict for LESS in state 111 resolved as shift
WARNING: shift/reduce conflict for LESS in state 125 resolved as shift
WARNING: shift/reduce conflict for LESS in state 142 resolved as shift
WARNING: shift/reduce conflict for LESS in state 144 resolved as shift
WARNING: shift/reduce conflict for LESS in state 158 resolved as shift
WARNING: reduce/reduce conflict in state 130 resolved using rule (arrayFuncs -> ID DOT RPOP PARA PARC)
WARNING: rejected rule (arraysExpression -> ID DOT RPOP PARA PARC) in state 130
