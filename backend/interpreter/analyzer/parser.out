Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> print
Rule 5     instruccion -> declare
Rule 6     instruccion -> declareConst
Rule 7     instruccion -> assignVar
Rule 8     instruccion -> if_else
Rule 9     print -> CONSOLE DOT LOG PARA expression PARC
Rule 10    declare -> RVAR ID DOUBLEDOT type EQUAL expression
Rule 11    declare -> RVAR ID EQUAL expression
Rule 12    declare -> RVAR ID DOUBLEDOT type
Rule 13    declareConst -> RCONST ID DOUBLEDOT type EQUAL expression
Rule 14    declareConst -> RCONST ID EQUAL expression
Rule 15    declareConst -> RCONST ID DOUBLEDOT type
Rule 16    assignVar -> ID EQUAL expression
Rule 17    assignVar -> ID PLUS EQUAL expression
Rule 18    assignVar -> ID LESS EQUAL expression
Rule 19    if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
Rule 20    else -> RELSE LLAVEA instrucciones LLAVEC
Rule 21    else -> RELSE if_else
Rule 22    else -> <empty>
Rule 23    expression -> primitivo
Rule 24    expression -> aritmetica
Rule 25    expression -> relacional
Rule 26    expression -> logica
Rule 27    expression -> ID
Rule 28    aritmetica -> expression PLUS expression
Rule 29    aritmetica -> expression BY expression
Rule 30    aritmetica -> expression DIVIDED expression
Rule 31    aritmetica -> expression LESS expression
Rule 32    aritmetica -> expression MODUL expression
Rule 33    aritmetica -> LESS expression
Rule 34    relacional -> expression DEQUAL expression
Rule 35    relacional -> expression DIFERENT expression
Rule 36    relacional -> expression MINOR expression
Rule 37    relacional -> expression MINOREQUAL expression
Rule 38    relacional -> expression GREATER expression
Rule 39    relacional -> expression GREATEREQUAL expression
Rule 40    logica -> boolean AND boolean
Rule 41    logica -> boolean OR boolean
Rule 42    logica -> NOT boolean
Rule 43    primitivo -> NUMBER
Rule 44    primitivo -> FLOAT
Rule 45    primitivo -> STRING
Rule 46    primitivo -> boolean
Rule 47    boolean -> TRUE
Rule 48    boolean -> FALSE
Rule 49    type -> RNUMBER
Rule 50    type -> RFLOAT
Rule 51    type -> RSTRING
Rule 52    type -> RBOOLEAN

Terminals, with rules where they appear

AND                  : 40
BY                   : 29
CONSOLE              : 9
DEQUAL               : 34
DIFERENT             : 35
DIVIDED              : 30
DOT                  : 9
DOUBLEDOT            : 10 12 13 15
EQUAL                : 10 11 13 14 16 17 18
FALSE                : 48
FLOAT                : 44
GREATER              : 38
GREATEREQUAL         : 39
ID                   : 10 11 12 13 14 15 16 17 18 27
LESS                 : 18 31 33
LLAVEA               : 19 20
LLAVEC               : 19 20
LOG                  : 9
MINOR                : 36
MINOREQUAL           : 37
MODUL                : 32
NOT                  : 42
NUMBER               : 43
OR                   : 41
PARA                 : 9 19
PARC                 : 9 19
PLUS                 : 17 28
RBOOLEAN             : 52
RCONST               : 13 14 15
RELSE                : 20 21
RFLOAT               : 50
RIF                  : 19
RNUMBER              : 49
RSTRING              : 51
RVAR                 : 10 11 12
STRING               : 45
TRUE                 : 47
error                : 

Nonterminals, with rules where they appear

aritmetica           : 24
assignVar            : 7
boolean              : 40 40 41 41 42 46
declare              : 5
declareConst         : 6
else                 : 19
expression           : 9 10 11 13 14 16 17 18 19 28 28 29 29 30 30 31 31 32 32 33 34 34 35 35 36 36 37 37 38 38 39 39
if_else              : 8 21
instruccion          : 2 3
instrucciones        : 1 2 19 20
logica               : 26
primitivo            : 23
print                : 4
relacional           : 25
start                : 0
type                 : 10 12 13 15

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declare
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . if_else
    (9) print -> . CONSOLE DOT LOG PARA expression PARC
    (10) declare -> . RVAR ID DOUBLEDOT type EQUAL expression
    (11) declare -> . RVAR ID EQUAL expression
    (12) declare -> . RVAR ID DOUBLEDOT type
    (13) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (14) declareConst -> . RCONST ID EQUAL expression
    (15) declareConst -> . RCONST ID DOUBLEDOT type
    (16) assignVar -> . ID EQUAL expression
    (17) assignVar -> . ID PLUS EQUAL expression
    (18) assignVar -> . ID LESS EQUAL expression
    (19) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else

    CONSOLE         shift and go to state 9
    RVAR            shift and go to state 10
    RCONST          shift and go to state 12
    ID              shift and go to state 11
    RIF             shift and go to state 13

    start                          shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declare                        shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    if_else                        shift and go to state 8

state 1

    (0) S' -> start .



state 2

    (1) start -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declare
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . if_else
    (9) print -> . CONSOLE DOT LOG PARA expression PARC
    (10) declare -> . RVAR ID DOUBLEDOT type EQUAL expression
    (11) declare -> . RVAR ID EQUAL expression
    (12) declare -> . RVAR ID DOUBLEDOT type
    (13) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (14) declareConst -> . RCONST ID EQUAL expression
    (15) declareConst -> . RCONST ID DOUBLEDOT type
    (16) assignVar -> . ID EQUAL expression
    (17) assignVar -> . ID PLUS EQUAL expression
    (18) assignVar -> . ID LESS EQUAL expression
    (19) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else

    $end            reduce using rule 1 (start -> instrucciones .)
    CONSOLE         shift and go to state 9
    RVAR            shift and go to state 10
    RCONST          shift and go to state 12
    ID              shift and go to state 11
    RIF             shift and go to state 13

    instruccion                    shift and go to state 14
    print                          shift and go to state 4
    declare                        shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    if_else                        shift and go to state 8

state 3

    (3) instrucciones -> instruccion .

    CONSOLE         reduce using rule 3 (instrucciones -> instruccion .)
    RVAR            reduce using rule 3 (instrucciones -> instruccion .)
    RCONST          reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    RIF             reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVEC          reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> print .

    CONSOLE         reduce using rule 4 (instruccion -> print .)
    RVAR            reduce using rule 4 (instruccion -> print .)
    RCONST          reduce using rule 4 (instruccion -> print .)
    ID              reduce using rule 4 (instruccion -> print .)
    RIF             reduce using rule 4 (instruccion -> print .)
    $end            reduce using rule 4 (instruccion -> print .)
    LLAVEC          reduce using rule 4 (instruccion -> print .)


state 5

    (5) instruccion -> declare .

    CONSOLE         reduce using rule 5 (instruccion -> declare .)
    RVAR            reduce using rule 5 (instruccion -> declare .)
    RCONST          reduce using rule 5 (instruccion -> declare .)
    ID              reduce using rule 5 (instruccion -> declare .)
    RIF             reduce using rule 5 (instruccion -> declare .)
    $end            reduce using rule 5 (instruccion -> declare .)
    LLAVEC          reduce using rule 5 (instruccion -> declare .)


state 6

    (6) instruccion -> declareConst .

    CONSOLE         reduce using rule 6 (instruccion -> declareConst .)
    RVAR            reduce using rule 6 (instruccion -> declareConst .)
    RCONST          reduce using rule 6 (instruccion -> declareConst .)
    ID              reduce using rule 6 (instruccion -> declareConst .)
    RIF             reduce using rule 6 (instruccion -> declareConst .)
    $end            reduce using rule 6 (instruccion -> declareConst .)
    LLAVEC          reduce using rule 6 (instruccion -> declareConst .)


state 7

    (7) instruccion -> assignVar .

    CONSOLE         reduce using rule 7 (instruccion -> assignVar .)
    RVAR            reduce using rule 7 (instruccion -> assignVar .)
    RCONST          reduce using rule 7 (instruccion -> assignVar .)
    ID              reduce using rule 7 (instruccion -> assignVar .)
    RIF             reduce using rule 7 (instruccion -> assignVar .)
    $end            reduce using rule 7 (instruccion -> assignVar .)
    LLAVEC          reduce using rule 7 (instruccion -> assignVar .)


state 8

    (8) instruccion -> if_else .

    CONSOLE         reduce using rule 8 (instruccion -> if_else .)
    RVAR            reduce using rule 8 (instruccion -> if_else .)
    RCONST          reduce using rule 8 (instruccion -> if_else .)
    ID              reduce using rule 8 (instruccion -> if_else .)
    RIF             reduce using rule 8 (instruccion -> if_else .)
    $end            reduce using rule 8 (instruccion -> if_else .)
    LLAVEC          reduce using rule 8 (instruccion -> if_else .)


state 9

    (9) print -> CONSOLE . DOT LOG PARA expression PARC

    DOT             shift and go to state 15


state 10

    (10) declare -> RVAR . ID DOUBLEDOT type EQUAL expression
    (11) declare -> RVAR . ID EQUAL expression
    (12) declare -> RVAR . ID DOUBLEDOT type

    ID              shift and go to state 16


state 11

    (16) assignVar -> ID . EQUAL expression
    (17) assignVar -> ID . PLUS EQUAL expression
    (18) assignVar -> ID . LESS EQUAL expression

    EQUAL           shift and go to state 17
    PLUS            shift and go to state 18
    LESS            shift and go to state 19


state 12

    (13) declareConst -> RCONST . ID DOUBLEDOT type EQUAL expression
    (14) declareConst -> RCONST . ID EQUAL expression
    (15) declareConst -> RCONST . ID DOUBLEDOT type

    ID              shift and go to state 20


state 13

    (19) if_else -> RIF . PARA expression PARC LLAVEA instrucciones LLAVEC else

    PARA            shift and go to state 21


state 14

    (2) instrucciones -> instrucciones instruccion .

    CONSOLE         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RVAR            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RCONST          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RIF             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVEC          reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 15

    (9) print -> CONSOLE DOT . LOG PARA expression PARC

    LOG             shift and go to state 22


state 16

    (10) declare -> RVAR ID . DOUBLEDOT type EQUAL expression
    (11) declare -> RVAR ID . EQUAL expression
    (12) declare -> RVAR ID . DOUBLEDOT type

    DOUBLEDOT       shift and go to state 23
    EQUAL           shift and go to state 24


state 17

    (16) assignVar -> ID EQUAL . expression
    (23) expression -> . primitivo
    (24) expression -> . aritmetica
    (25) expression -> . relacional
    (26) expression -> . logica
    (27) expression -> . ID
    (43) primitivo -> . NUMBER
    (44) primitivo -> . FLOAT
    (45) primitivo -> . STRING
    (46) primitivo -> . boolean
    (28) aritmetica -> . expression PLUS expression
    (29) aritmetica -> . expression BY expression
    (30) aritmetica -> . expression DIVIDED expression
    (31) aritmetica -> . expression LESS expression
    (32) aritmetica -> . expression MODUL expression
    (33) aritmetica -> . LESS expression
    (34) relacional -> . expression DEQUAL expression
    (35) relacional -> . expression DIFERENT expression
    (36) relacional -> . expression MINOR expression
    (37) relacional -> . expression MINOREQUAL expression
    (38) relacional -> . expression GREATER expression
    (39) relacional -> . expression GREATEREQUAL expression
    (40) logica -> . boolean AND boolean
    (41) logica -> . boolean OR boolean
    (42) logica -> . NOT boolean
    (47) boolean -> . TRUE
    (48) boolean -> . FALSE

    ID              shift and go to state 25
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LESS            shift and go to state 35
    NOT             shift and go to state 36
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 26
    primitivo                      shift and go to state 27
    aritmetica                     shift and go to state 28
    relacional                     shift and go to state 29
    logica                         shift and go to state 30
    boolean                        shift and go to state 34

state 18

    (17) assignVar -> ID PLUS . EQUAL expression

    EQUAL           shift and go to state 39


state 19

    (18) assignVar -> ID LESS . EQUAL expression

    EQUAL           shift and go to state 40


state 20

    (13) declareConst -> RCONST ID . DOUBLEDOT type EQUAL expression
    (14) declareConst -> RCONST ID . EQUAL expression
    (15) declareConst -> RCONST ID . DOUBLEDOT type

    DOUBLEDOT       shift and go to state 41
    EQUAL           shift and go to state 42


state 21

    (19) if_else -> RIF PARA . expression PARC LLAVEA instrucciones LLAVEC else
    (23) expression -> . primitivo
    (24) expression -> . aritmetica
    (25) expression -> . relacional
    (26) expression -> . logica
    (27) expression -> . ID
    (43) primitivo -> . NUMBER
    (44) primitivo -> . FLOAT
    (45) primitivo -> . STRING
    (46) primitivo -> . boolean
    (28) aritmetica -> . expression PLUS expression
    (29) aritmetica -> . expression BY expression
    (30) aritmetica -> . expression DIVIDED expression
    (31) aritmetica -> . expression LESS expression
    (32) aritmetica -> . expression MODUL expression
    (33) aritmetica -> . LESS expression
    (34) relacional -> . expression DEQUAL expression
    (35) relacional -> . expression DIFERENT expression
    (36) relacional -> . expression MINOR expression
    (37) relacional -> . expression MINOREQUAL expression
    (38) relacional -> . expression GREATER expression
    (39) relacional -> . expression GREATEREQUAL expression
    (40) logica -> . boolean AND boolean
    (41) logica -> . boolean OR boolean
    (42) logica -> . NOT boolean
    (47) boolean -> . TRUE
    (48) boolean -> . FALSE

    ID              shift and go to state 25
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LESS            shift and go to state 35
    NOT             shift and go to state 36
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 43
    primitivo                      shift and go to state 27
    aritmetica                     shift and go to state 28
    relacional                     shift and go to state 29
    logica                         shift and go to state 30
    boolean                        shift and go to state 34

state 22

    (9) print -> CONSOLE DOT LOG . PARA expression PARC

    PARA            shift and go to state 44


state 23

    (10) declare -> RVAR ID DOUBLEDOT . type EQUAL expression
    (12) declare -> RVAR ID DOUBLEDOT . type
    (49) type -> . RNUMBER
    (50) type -> . RFLOAT
    (51) type -> . RSTRING
    (52) type -> . RBOOLEAN

    RNUMBER         shift and go to state 46
    RFLOAT          shift and go to state 47
    RSTRING         shift and go to state 48
    RBOOLEAN        shift and go to state 49

    type                           shift and go to state 45

state 24

    (11) declare -> RVAR ID EQUAL . expression
    (23) expression -> . primitivo
    (24) expression -> . aritmetica
    (25) expression -> . relacional
    (26) expression -> . logica
    (27) expression -> . ID
    (43) primitivo -> . NUMBER
    (44) primitivo -> . FLOAT
    (45) primitivo -> . STRING
    (46) primitivo -> . boolean
    (28) aritmetica -> . expression PLUS expression
    (29) aritmetica -> . expression BY expression
    (30) aritmetica -> . expression DIVIDED expression
    (31) aritmetica -> . expression LESS expression
    (32) aritmetica -> . expression MODUL expression
    (33) aritmetica -> . LESS expression
    (34) relacional -> . expression DEQUAL expression
    (35) relacional -> . expression DIFERENT expression
    (36) relacional -> . expression MINOR expression
    (37) relacional -> . expression MINOREQUAL expression
    (38) relacional -> . expression GREATER expression
    (39) relacional -> . expression GREATEREQUAL expression
    (40) logica -> . boolean AND boolean
    (41) logica -> . boolean OR boolean
    (42) logica -> . NOT boolean
    (47) boolean -> . TRUE
    (48) boolean -> . FALSE

    ID              shift and go to state 25
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LESS            shift and go to state 35
    NOT             shift and go to state 36
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 50
    primitivo                      shift and go to state 27
    aritmetica                     shift and go to state 28
    relacional                     shift and go to state 29
    logica                         shift and go to state 30
    boolean                        shift and go to state 34

state 25

    (27) expression -> ID .

    PLUS            reduce using rule 27 (expression -> ID .)
    BY              reduce using rule 27 (expression -> ID .)
    DIVIDED         reduce using rule 27 (expression -> ID .)
    LESS            reduce using rule 27 (expression -> ID .)
    MODUL           reduce using rule 27 (expression -> ID .)
    DEQUAL          reduce using rule 27 (expression -> ID .)
    DIFERENT        reduce using rule 27 (expression -> ID .)
    MINOR           reduce using rule 27 (expression -> ID .)
    MINOREQUAL      reduce using rule 27 (expression -> ID .)
    GREATER         reduce using rule 27 (expression -> ID .)
    GREATEREQUAL    reduce using rule 27 (expression -> ID .)
    CONSOLE         reduce using rule 27 (expression -> ID .)
    RVAR            reduce using rule 27 (expression -> ID .)
    RCONST          reduce using rule 27 (expression -> ID .)
    ID              reduce using rule 27 (expression -> ID .)
    RIF             reduce using rule 27 (expression -> ID .)
    $end            reduce using rule 27 (expression -> ID .)
    LLAVEC          reduce using rule 27 (expression -> ID .)
    PARC            reduce using rule 27 (expression -> ID .)


state 26

    (16) assignVar -> ID EQUAL expression .
    (28) aritmetica -> expression . PLUS expression
    (29) aritmetica -> expression . BY expression
    (30) aritmetica -> expression . DIVIDED expression
    (31) aritmetica -> expression . LESS expression
    (32) aritmetica -> expression . MODUL expression
    (34) relacional -> expression . DEQUAL expression
    (35) relacional -> expression . DIFERENT expression
    (36) relacional -> expression . MINOR expression
    (37) relacional -> expression . MINOREQUAL expression
    (38) relacional -> expression . GREATER expression
    (39) relacional -> expression . GREATEREQUAL expression

    CONSOLE         reduce using rule 16 (assignVar -> ID EQUAL expression .)
    RVAR            reduce using rule 16 (assignVar -> ID EQUAL expression .)
    RCONST          reduce using rule 16 (assignVar -> ID EQUAL expression .)
    ID              reduce using rule 16 (assignVar -> ID EQUAL expression .)
    RIF             reduce using rule 16 (assignVar -> ID EQUAL expression .)
    $end            reduce using rule 16 (assignVar -> ID EQUAL expression .)
    LLAVEC          reduce using rule 16 (assignVar -> ID EQUAL expression .)
    PLUS            shift and go to state 51
    BY              shift and go to state 52
    DIVIDED         shift and go to state 53
    LESS            shift and go to state 54
    MODUL           shift and go to state 55
    DEQUAL          shift and go to state 56
    DIFERENT        shift and go to state 57
    MINOR           shift and go to state 58
    MINOREQUAL      shift and go to state 59
    GREATER         shift and go to state 60
    GREATEREQUAL    shift and go to state 61


state 27

    (23) expression -> primitivo .

    PLUS            reduce using rule 23 (expression -> primitivo .)
    BY              reduce using rule 23 (expression -> primitivo .)
    DIVIDED         reduce using rule 23 (expression -> primitivo .)
    LESS            reduce using rule 23 (expression -> primitivo .)
    MODUL           reduce using rule 23 (expression -> primitivo .)
    DEQUAL          reduce using rule 23 (expression -> primitivo .)
    DIFERENT        reduce using rule 23 (expression -> primitivo .)
    MINOR           reduce using rule 23 (expression -> primitivo .)
    MINOREQUAL      reduce using rule 23 (expression -> primitivo .)
    GREATER         reduce using rule 23 (expression -> primitivo .)
    GREATEREQUAL    reduce using rule 23 (expression -> primitivo .)
    CONSOLE         reduce using rule 23 (expression -> primitivo .)
    RVAR            reduce using rule 23 (expression -> primitivo .)
    RCONST          reduce using rule 23 (expression -> primitivo .)
    ID              reduce using rule 23 (expression -> primitivo .)
    RIF             reduce using rule 23 (expression -> primitivo .)
    $end            reduce using rule 23 (expression -> primitivo .)
    LLAVEC          reduce using rule 23 (expression -> primitivo .)
    PARC            reduce using rule 23 (expression -> primitivo .)


state 28

    (24) expression -> aritmetica .

    PLUS            reduce using rule 24 (expression -> aritmetica .)
    BY              reduce using rule 24 (expression -> aritmetica .)
    DIVIDED         reduce using rule 24 (expression -> aritmetica .)
    LESS            reduce using rule 24 (expression -> aritmetica .)
    MODUL           reduce using rule 24 (expression -> aritmetica .)
    DEQUAL          reduce using rule 24 (expression -> aritmetica .)
    DIFERENT        reduce using rule 24 (expression -> aritmetica .)
    MINOR           reduce using rule 24 (expression -> aritmetica .)
    MINOREQUAL      reduce using rule 24 (expression -> aritmetica .)
    GREATER         reduce using rule 24 (expression -> aritmetica .)
    GREATEREQUAL    reduce using rule 24 (expression -> aritmetica .)
    CONSOLE         reduce using rule 24 (expression -> aritmetica .)
    RVAR            reduce using rule 24 (expression -> aritmetica .)
    RCONST          reduce using rule 24 (expression -> aritmetica .)
    ID              reduce using rule 24 (expression -> aritmetica .)
    RIF             reduce using rule 24 (expression -> aritmetica .)
    $end            reduce using rule 24 (expression -> aritmetica .)
    LLAVEC          reduce using rule 24 (expression -> aritmetica .)
    PARC            reduce using rule 24 (expression -> aritmetica .)


state 29

    (25) expression -> relacional .

    PLUS            reduce using rule 25 (expression -> relacional .)
    BY              reduce using rule 25 (expression -> relacional .)
    DIVIDED         reduce using rule 25 (expression -> relacional .)
    LESS            reduce using rule 25 (expression -> relacional .)
    MODUL           reduce using rule 25 (expression -> relacional .)
    DEQUAL          reduce using rule 25 (expression -> relacional .)
    DIFERENT        reduce using rule 25 (expression -> relacional .)
    MINOR           reduce using rule 25 (expression -> relacional .)
    MINOREQUAL      reduce using rule 25 (expression -> relacional .)
    GREATER         reduce using rule 25 (expression -> relacional .)
    GREATEREQUAL    reduce using rule 25 (expression -> relacional .)
    CONSOLE         reduce using rule 25 (expression -> relacional .)
    RVAR            reduce using rule 25 (expression -> relacional .)
    RCONST          reduce using rule 25 (expression -> relacional .)
    ID              reduce using rule 25 (expression -> relacional .)
    RIF             reduce using rule 25 (expression -> relacional .)
    $end            reduce using rule 25 (expression -> relacional .)
    LLAVEC          reduce using rule 25 (expression -> relacional .)
    PARC            reduce using rule 25 (expression -> relacional .)


state 30

    (26) expression -> logica .

    PLUS            reduce using rule 26 (expression -> logica .)
    BY              reduce using rule 26 (expression -> logica .)
    DIVIDED         reduce using rule 26 (expression -> logica .)
    LESS            reduce using rule 26 (expression -> logica .)
    MODUL           reduce using rule 26 (expression -> logica .)
    DEQUAL          reduce using rule 26 (expression -> logica .)
    DIFERENT        reduce using rule 26 (expression -> logica .)
    MINOR           reduce using rule 26 (expression -> logica .)
    MINOREQUAL      reduce using rule 26 (expression -> logica .)
    GREATER         reduce using rule 26 (expression -> logica .)
    GREATEREQUAL    reduce using rule 26 (expression -> logica .)
    CONSOLE         reduce using rule 26 (expression -> logica .)
    RVAR            reduce using rule 26 (expression -> logica .)
    RCONST          reduce using rule 26 (expression -> logica .)
    ID              reduce using rule 26 (expression -> logica .)
    RIF             reduce using rule 26 (expression -> logica .)
    $end            reduce using rule 26 (expression -> logica .)
    LLAVEC          reduce using rule 26 (expression -> logica .)
    PARC            reduce using rule 26 (expression -> logica .)


state 31

    (43) primitivo -> NUMBER .

    PLUS            reduce using rule 43 (primitivo -> NUMBER .)
    BY              reduce using rule 43 (primitivo -> NUMBER .)
    DIVIDED         reduce using rule 43 (primitivo -> NUMBER .)
    LESS            reduce using rule 43 (primitivo -> NUMBER .)
    MODUL           reduce using rule 43 (primitivo -> NUMBER .)
    DEQUAL          reduce using rule 43 (primitivo -> NUMBER .)
    DIFERENT        reduce using rule 43 (primitivo -> NUMBER .)
    MINOR           reduce using rule 43 (primitivo -> NUMBER .)
    MINOREQUAL      reduce using rule 43 (primitivo -> NUMBER .)
    GREATER         reduce using rule 43 (primitivo -> NUMBER .)
    GREATEREQUAL    reduce using rule 43 (primitivo -> NUMBER .)
    CONSOLE         reduce using rule 43 (primitivo -> NUMBER .)
    RVAR            reduce using rule 43 (primitivo -> NUMBER .)
    RCONST          reduce using rule 43 (primitivo -> NUMBER .)
    ID              reduce using rule 43 (primitivo -> NUMBER .)
    RIF             reduce using rule 43 (primitivo -> NUMBER .)
    $end            reduce using rule 43 (primitivo -> NUMBER .)
    LLAVEC          reduce using rule 43 (primitivo -> NUMBER .)
    PARC            reduce using rule 43 (primitivo -> NUMBER .)


state 32

    (44) primitivo -> FLOAT .

    PLUS            reduce using rule 44 (primitivo -> FLOAT .)
    BY              reduce using rule 44 (primitivo -> FLOAT .)
    DIVIDED         reduce using rule 44 (primitivo -> FLOAT .)
    LESS            reduce using rule 44 (primitivo -> FLOAT .)
    MODUL           reduce using rule 44 (primitivo -> FLOAT .)
    DEQUAL          reduce using rule 44 (primitivo -> FLOAT .)
    DIFERENT        reduce using rule 44 (primitivo -> FLOAT .)
    MINOR           reduce using rule 44 (primitivo -> FLOAT .)
    MINOREQUAL      reduce using rule 44 (primitivo -> FLOAT .)
    GREATER         reduce using rule 44 (primitivo -> FLOAT .)
    GREATEREQUAL    reduce using rule 44 (primitivo -> FLOAT .)
    CONSOLE         reduce using rule 44 (primitivo -> FLOAT .)
    RVAR            reduce using rule 44 (primitivo -> FLOAT .)
    RCONST          reduce using rule 44 (primitivo -> FLOAT .)
    ID              reduce using rule 44 (primitivo -> FLOAT .)
    RIF             reduce using rule 44 (primitivo -> FLOAT .)
    $end            reduce using rule 44 (primitivo -> FLOAT .)
    LLAVEC          reduce using rule 44 (primitivo -> FLOAT .)
    PARC            reduce using rule 44 (primitivo -> FLOAT .)


state 33

    (45) primitivo -> STRING .

    PLUS            reduce using rule 45 (primitivo -> STRING .)
    BY              reduce using rule 45 (primitivo -> STRING .)
    DIVIDED         reduce using rule 45 (primitivo -> STRING .)
    LESS            reduce using rule 45 (primitivo -> STRING .)
    MODUL           reduce using rule 45 (primitivo -> STRING .)
    DEQUAL          reduce using rule 45 (primitivo -> STRING .)
    DIFERENT        reduce using rule 45 (primitivo -> STRING .)
    MINOR           reduce using rule 45 (primitivo -> STRING .)
    MINOREQUAL      reduce using rule 45 (primitivo -> STRING .)
    GREATER         reduce using rule 45 (primitivo -> STRING .)
    GREATEREQUAL    reduce using rule 45 (primitivo -> STRING .)
    CONSOLE         reduce using rule 45 (primitivo -> STRING .)
    RVAR            reduce using rule 45 (primitivo -> STRING .)
    RCONST          reduce using rule 45 (primitivo -> STRING .)
    ID              reduce using rule 45 (primitivo -> STRING .)
    RIF             reduce using rule 45 (primitivo -> STRING .)
    $end            reduce using rule 45 (primitivo -> STRING .)
    LLAVEC          reduce using rule 45 (primitivo -> STRING .)
    PARC            reduce using rule 45 (primitivo -> STRING .)


state 34

    (46) primitivo -> boolean .
    (40) logica -> boolean . AND boolean
    (41) logica -> boolean . OR boolean

    PLUS            reduce using rule 46 (primitivo -> boolean .)
    BY              reduce using rule 46 (primitivo -> boolean .)
    DIVIDED         reduce using rule 46 (primitivo -> boolean .)
    LESS            reduce using rule 46 (primitivo -> boolean .)
    MODUL           reduce using rule 46 (primitivo -> boolean .)
    DEQUAL          reduce using rule 46 (primitivo -> boolean .)
    DIFERENT        reduce using rule 46 (primitivo -> boolean .)
    MINOR           reduce using rule 46 (primitivo -> boolean .)
    MINOREQUAL      reduce using rule 46 (primitivo -> boolean .)
    GREATER         reduce using rule 46 (primitivo -> boolean .)
    GREATEREQUAL    reduce using rule 46 (primitivo -> boolean .)
    CONSOLE         reduce using rule 46 (primitivo -> boolean .)
    RVAR            reduce using rule 46 (primitivo -> boolean .)
    RCONST          reduce using rule 46 (primitivo -> boolean .)
    ID              reduce using rule 46 (primitivo -> boolean .)
    RIF             reduce using rule 46 (primitivo -> boolean .)
    $end            reduce using rule 46 (primitivo -> boolean .)
    LLAVEC          reduce using rule 46 (primitivo -> boolean .)
    PARC            reduce using rule 46 (primitivo -> boolean .)
    AND             shift and go to state 62
    OR              shift and go to state 63


state 35

    (33) aritmetica -> LESS . expression
    (23) expression -> . primitivo
    (24) expression -> . aritmetica
    (25) expression -> . relacional
    (26) expression -> . logica
    (27) expression -> . ID
    (43) primitivo -> . NUMBER
    (44) primitivo -> . FLOAT
    (45) primitivo -> . STRING
    (46) primitivo -> . boolean
    (28) aritmetica -> . expression PLUS expression
    (29) aritmetica -> . expression BY expression
    (30) aritmetica -> . expression DIVIDED expression
    (31) aritmetica -> . expression LESS expression
    (32) aritmetica -> . expression MODUL expression
    (33) aritmetica -> . LESS expression
    (34) relacional -> . expression DEQUAL expression
    (35) relacional -> . expression DIFERENT expression
    (36) relacional -> . expression MINOR expression
    (37) relacional -> . expression MINOREQUAL expression
    (38) relacional -> . expression GREATER expression
    (39) relacional -> . expression GREATEREQUAL expression
    (40) logica -> . boolean AND boolean
    (41) logica -> . boolean OR boolean
    (42) logica -> . NOT boolean
    (47) boolean -> . TRUE
    (48) boolean -> . FALSE

    ID              shift and go to state 25
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LESS            shift and go to state 35
    NOT             shift and go to state 36
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 64
    primitivo                      shift and go to state 27
    aritmetica                     shift and go to state 28
    relacional                     shift and go to state 29
    logica                         shift and go to state 30
    boolean                        shift and go to state 34

state 36

    (42) logica -> NOT . boolean
    (47) boolean -> . TRUE
    (48) boolean -> . FALSE

    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    boolean                        shift and go to state 65

state 37

    (47) boolean -> TRUE .

    AND             reduce using rule 47 (boolean -> TRUE .)
    OR              reduce using rule 47 (boolean -> TRUE .)
    PLUS            reduce using rule 47 (boolean -> TRUE .)
    BY              reduce using rule 47 (boolean -> TRUE .)
    DIVIDED         reduce using rule 47 (boolean -> TRUE .)
    LESS            reduce using rule 47 (boolean -> TRUE .)
    MODUL           reduce using rule 47 (boolean -> TRUE .)
    DEQUAL          reduce using rule 47 (boolean -> TRUE .)
    DIFERENT        reduce using rule 47 (boolean -> TRUE .)
    MINOR           reduce using rule 47 (boolean -> TRUE .)
    MINOREQUAL      reduce using rule 47 (boolean -> TRUE .)
    GREATER         reduce using rule 47 (boolean -> TRUE .)
    GREATEREQUAL    reduce using rule 47 (boolean -> TRUE .)
    CONSOLE         reduce using rule 47 (boolean -> TRUE .)
    RVAR            reduce using rule 47 (boolean -> TRUE .)
    RCONST          reduce using rule 47 (boolean -> TRUE .)
    ID              reduce using rule 47 (boolean -> TRUE .)
    RIF             reduce using rule 47 (boolean -> TRUE .)
    $end            reduce using rule 47 (boolean -> TRUE .)
    LLAVEC          reduce using rule 47 (boolean -> TRUE .)
    PARC            reduce using rule 47 (boolean -> TRUE .)


state 38

    (48) boolean -> FALSE .

    AND             reduce using rule 48 (boolean -> FALSE .)
    OR              reduce using rule 48 (boolean -> FALSE .)
    PLUS            reduce using rule 48 (boolean -> FALSE .)
    BY              reduce using rule 48 (boolean -> FALSE .)
    DIVIDED         reduce using rule 48 (boolean -> FALSE .)
    LESS            reduce using rule 48 (boolean -> FALSE .)
    MODUL           reduce using rule 48 (boolean -> FALSE .)
    DEQUAL          reduce using rule 48 (boolean -> FALSE .)
    DIFERENT        reduce using rule 48 (boolean -> FALSE .)
    MINOR           reduce using rule 48 (boolean -> FALSE .)
    MINOREQUAL      reduce using rule 48 (boolean -> FALSE .)
    GREATER         reduce using rule 48 (boolean -> FALSE .)
    GREATEREQUAL    reduce using rule 48 (boolean -> FALSE .)
    CONSOLE         reduce using rule 48 (boolean -> FALSE .)
    RVAR            reduce using rule 48 (boolean -> FALSE .)
    RCONST          reduce using rule 48 (boolean -> FALSE .)
    ID              reduce using rule 48 (boolean -> FALSE .)
    RIF             reduce using rule 48 (boolean -> FALSE .)
    $end            reduce using rule 48 (boolean -> FALSE .)
    LLAVEC          reduce using rule 48 (boolean -> FALSE .)
    PARC            reduce using rule 48 (boolean -> FALSE .)


state 39

    (17) assignVar -> ID PLUS EQUAL . expression
    (23) expression -> . primitivo
    (24) expression -> . aritmetica
    (25) expression -> . relacional
    (26) expression -> . logica
    (27) expression -> . ID
    (43) primitivo -> . NUMBER
    (44) primitivo -> . FLOAT
    (45) primitivo -> . STRING
    (46) primitivo -> . boolean
    (28) aritmetica -> . expression PLUS expression
    (29) aritmetica -> . expression BY expression
    (30) aritmetica -> . expression DIVIDED expression
    (31) aritmetica -> . expression LESS expression
    (32) aritmetica -> . expression MODUL expression
    (33) aritmetica -> . LESS expression
    (34) relacional -> . expression DEQUAL expression
    (35) relacional -> . expression DIFERENT expression
    (36) relacional -> . expression MINOR expression
    (37) relacional -> . expression MINOREQUAL expression
    (38) relacional -> . expression GREATER expression
    (39) relacional -> . expression GREATEREQUAL expression
    (40) logica -> . boolean AND boolean
    (41) logica -> . boolean OR boolean
    (42) logica -> . NOT boolean
    (47) boolean -> . TRUE
    (48) boolean -> . FALSE

    ID              shift and go to state 25
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LESS            shift and go to state 35
    NOT             shift and go to state 36
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 66
    primitivo                      shift and go to state 27
    aritmetica                     shift and go to state 28
    relacional                     shift and go to state 29
    logica                         shift and go to state 30
    boolean                        shift and go to state 34

state 40

    (18) assignVar -> ID LESS EQUAL . expression
    (23) expression -> . primitivo
    (24) expression -> . aritmetica
    (25) expression -> . relacional
    (26) expression -> . logica
    (27) expression -> . ID
    (43) primitivo -> . NUMBER
    (44) primitivo -> . FLOAT
    (45) primitivo -> . STRING
    (46) primitivo -> . boolean
    (28) aritmetica -> . expression PLUS expression
    (29) aritmetica -> . expression BY expression
    (30) aritmetica -> . expression DIVIDED expression
    (31) aritmetica -> . expression LESS expression
    (32) aritmetica -> . expression MODUL expression
    (33) aritmetica -> . LESS expression
    (34) relacional -> . expression DEQUAL expression
    (35) relacional -> . expression DIFERENT expression
    (36) relacional -> . expression MINOR expression
    (37) relacional -> . expression MINOREQUAL expression
    (38) relacional -> . expression GREATER expression
    (39) relacional -> . expression GREATEREQUAL expression
    (40) logica -> . boolean AND boolean
    (41) logica -> . boolean OR boolean
    (42) logica -> . NOT boolean
    (47) boolean -> . TRUE
    (48) boolean -> . FALSE

    ID              shift and go to state 25
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LESS            shift and go to state 35
    NOT             shift and go to state 36
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 67
    primitivo                      shift and go to state 27
    aritmetica                     shift and go to state 28
    relacional                     shift and go to state 29
    logica                         shift and go to state 30
    boolean                        shift and go to state 34

state 41

    (13) declareConst -> RCONST ID DOUBLEDOT . type EQUAL expression
    (15) declareConst -> RCONST ID DOUBLEDOT . type
    (49) type -> . RNUMBER
    (50) type -> . RFLOAT
    (51) type -> . RSTRING
    (52) type -> . RBOOLEAN

    RNUMBER         shift and go to state 46
    RFLOAT          shift and go to state 47
    RSTRING         shift and go to state 48
    RBOOLEAN        shift and go to state 49

    type                           shift and go to state 68

state 42

    (14) declareConst -> RCONST ID EQUAL . expression
    (23) expression -> . primitivo
    (24) expression -> . aritmetica
    (25) expression -> . relacional
    (26) expression -> . logica
    (27) expression -> . ID
    (43) primitivo -> . NUMBER
    (44) primitivo -> . FLOAT
    (45) primitivo -> . STRING
    (46) primitivo -> . boolean
    (28) aritmetica -> . expression PLUS expression
    (29) aritmetica -> . expression BY expression
    (30) aritmetica -> . expression DIVIDED expression
    (31) aritmetica -> . expression LESS expression
    (32) aritmetica -> . expression MODUL expression
    (33) aritmetica -> . LESS expression
    (34) relacional -> . expression DEQUAL expression
    (35) relacional -> . expression DIFERENT expression
    (36) relacional -> . expression MINOR expression
    (37) relacional -> . expression MINOREQUAL expression
    (38) relacional -> . expression GREATER expression
    (39) relacional -> . expression GREATEREQUAL expression
    (40) logica -> . boolean AND boolean
    (41) logica -> . boolean OR boolean
    (42) logica -> . NOT boolean
    (47) boolean -> . TRUE
    (48) boolean -> . FALSE

    ID              shift and go to state 25
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LESS            shift and go to state 35
    NOT             shift and go to state 36
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 69
    primitivo                      shift and go to state 27
    aritmetica                     shift and go to state 28
    relacional                     shift and go to state 29
    logica                         shift and go to state 30
    boolean                        shift and go to state 34

state 43

    (19) if_else -> RIF PARA expression . PARC LLAVEA instrucciones LLAVEC else
    (28) aritmetica -> expression . PLUS expression
    (29) aritmetica -> expression . BY expression
    (30) aritmetica -> expression . DIVIDED expression
    (31) aritmetica -> expression . LESS expression
    (32) aritmetica -> expression . MODUL expression
    (34) relacional -> expression . DEQUAL expression
    (35) relacional -> expression . DIFERENT expression
    (36) relacional -> expression . MINOR expression
    (37) relacional -> expression . MINOREQUAL expression
    (38) relacional -> expression . GREATER expression
    (39) relacional -> expression . GREATEREQUAL expression

    PARC            shift and go to state 70
    PLUS            shift and go to state 51
    BY              shift and go to state 52
    DIVIDED         shift and go to state 53
    LESS            shift and go to state 54
    MODUL           shift and go to state 55
    DEQUAL          shift and go to state 56
    DIFERENT        shift and go to state 57
    MINOR           shift and go to state 58
    MINOREQUAL      shift and go to state 59
    GREATER         shift and go to state 60
    GREATEREQUAL    shift and go to state 61


state 44

    (9) print -> CONSOLE DOT LOG PARA . expression PARC
    (23) expression -> . primitivo
    (24) expression -> . aritmetica
    (25) expression -> . relacional
    (26) expression -> . logica
    (27) expression -> . ID
    (43) primitivo -> . NUMBER
    (44) primitivo -> . FLOAT
    (45) primitivo -> . STRING
    (46) primitivo -> . boolean
    (28) aritmetica -> . expression PLUS expression
    (29) aritmetica -> . expression BY expression
    (30) aritmetica -> . expression DIVIDED expression
    (31) aritmetica -> . expression LESS expression
    (32) aritmetica -> . expression MODUL expression
    (33) aritmetica -> . LESS expression
    (34) relacional -> . expression DEQUAL expression
    (35) relacional -> . expression DIFERENT expression
    (36) relacional -> . expression MINOR expression
    (37) relacional -> . expression MINOREQUAL expression
    (38) relacional -> . expression GREATER expression
    (39) relacional -> . expression GREATEREQUAL expression
    (40) logica -> . boolean AND boolean
    (41) logica -> . boolean OR boolean
    (42) logica -> . NOT boolean
    (47) boolean -> . TRUE
    (48) boolean -> . FALSE

    ID              shift and go to state 25
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LESS            shift and go to state 35
    NOT             shift and go to state 36
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 71
    primitivo                      shift and go to state 27
    aritmetica                     shift and go to state 28
    relacional                     shift and go to state 29
    logica                         shift and go to state 30
    boolean                        shift and go to state 34

state 45

    (10) declare -> RVAR ID DOUBLEDOT type . EQUAL expression
    (12) declare -> RVAR ID DOUBLEDOT type .

    EQUAL           shift and go to state 72
    CONSOLE         reduce using rule 12 (declare -> RVAR ID DOUBLEDOT type .)
    RVAR            reduce using rule 12 (declare -> RVAR ID DOUBLEDOT type .)
    RCONST          reduce using rule 12 (declare -> RVAR ID DOUBLEDOT type .)
    ID              reduce using rule 12 (declare -> RVAR ID DOUBLEDOT type .)
    RIF             reduce using rule 12 (declare -> RVAR ID DOUBLEDOT type .)
    $end            reduce using rule 12 (declare -> RVAR ID DOUBLEDOT type .)
    LLAVEC          reduce using rule 12 (declare -> RVAR ID DOUBLEDOT type .)


state 46

    (49) type -> RNUMBER .

    EQUAL           reduce using rule 49 (type -> RNUMBER .)
    CONSOLE         reduce using rule 49 (type -> RNUMBER .)
    RVAR            reduce using rule 49 (type -> RNUMBER .)
    RCONST          reduce using rule 49 (type -> RNUMBER .)
    ID              reduce using rule 49 (type -> RNUMBER .)
    RIF             reduce using rule 49 (type -> RNUMBER .)
    $end            reduce using rule 49 (type -> RNUMBER .)
    LLAVEC          reduce using rule 49 (type -> RNUMBER .)


state 47

    (50) type -> RFLOAT .

    EQUAL           reduce using rule 50 (type -> RFLOAT .)
    CONSOLE         reduce using rule 50 (type -> RFLOAT .)
    RVAR            reduce using rule 50 (type -> RFLOAT .)
    RCONST          reduce using rule 50 (type -> RFLOAT .)
    ID              reduce using rule 50 (type -> RFLOAT .)
    RIF             reduce using rule 50 (type -> RFLOAT .)
    $end            reduce using rule 50 (type -> RFLOAT .)
    LLAVEC          reduce using rule 50 (type -> RFLOAT .)


state 48

    (51) type -> RSTRING .

    EQUAL           reduce using rule 51 (type -> RSTRING .)
    CONSOLE         reduce using rule 51 (type -> RSTRING .)
    RVAR            reduce using rule 51 (type -> RSTRING .)
    RCONST          reduce using rule 51 (type -> RSTRING .)
    ID              reduce using rule 51 (type -> RSTRING .)
    RIF             reduce using rule 51 (type -> RSTRING .)
    $end            reduce using rule 51 (type -> RSTRING .)
    LLAVEC          reduce using rule 51 (type -> RSTRING .)


state 49

    (52) type -> RBOOLEAN .

    EQUAL           reduce using rule 52 (type -> RBOOLEAN .)
    CONSOLE         reduce using rule 52 (type -> RBOOLEAN .)
    RVAR            reduce using rule 52 (type -> RBOOLEAN .)
    RCONST          reduce using rule 52 (type -> RBOOLEAN .)
    ID              reduce using rule 52 (type -> RBOOLEAN .)
    RIF             reduce using rule 52 (type -> RBOOLEAN .)
    $end            reduce using rule 52 (type -> RBOOLEAN .)
    LLAVEC          reduce using rule 52 (type -> RBOOLEAN .)


state 50

    (11) declare -> RVAR ID EQUAL expression .
    (28) aritmetica -> expression . PLUS expression
    (29) aritmetica -> expression . BY expression
    (30) aritmetica -> expression . DIVIDED expression
    (31) aritmetica -> expression . LESS expression
    (32) aritmetica -> expression . MODUL expression
    (34) relacional -> expression . DEQUAL expression
    (35) relacional -> expression . DIFERENT expression
    (36) relacional -> expression . MINOR expression
    (37) relacional -> expression . MINOREQUAL expression
    (38) relacional -> expression . GREATER expression
    (39) relacional -> expression . GREATEREQUAL expression

    CONSOLE         reduce using rule 11 (declare -> RVAR ID EQUAL expression .)
    RVAR            reduce using rule 11 (declare -> RVAR ID EQUAL expression .)
    RCONST          reduce using rule 11 (declare -> RVAR ID EQUAL expression .)
    ID              reduce using rule 11 (declare -> RVAR ID EQUAL expression .)
    RIF             reduce using rule 11 (declare -> RVAR ID EQUAL expression .)
    $end            reduce using rule 11 (declare -> RVAR ID EQUAL expression .)
    LLAVEC          reduce using rule 11 (declare -> RVAR ID EQUAL expression .)
    PLUS            shift and go to state 51
    BY              shift and go to state 52
    DIVIDED         shift and go to state 53
    LESS            shift and go to state 54
    MODUL           shift and go to state 55
    DEQUAL          shift and go to state 56
    DIFERENT        shift and go to state 57
    MINOR           shift and go to state 58
    MINOREQUAL      shift and go to state 59
    GREATER         shift and go to state 60
    GREATEREQUAL    shift and go to state 61


state 51

    (28) aritmetica -> expression PLUS . expression
    (23) expression -> . primitivo
    (24) expression -> . aritmetica
    (25) expression -> . relacional
    (26) expression -> . logica
    (27) expression -> . ID
    (43) primitivo -> . NUMBER
    (44) primitivo -> . FLOAT
    (45) primitivo -> . STRING
    (46) primitivo -> . boolean
    (28) aritmetica -> . expression PLUS expression
    (29) aritmetica -> . expression BY expression
    (30) aritmetica -> . expression DIVIDED expression
    (31) aritmetica -> . expression LESS expression
    (32) aritmetica -> . expression MODUL expression
    (33) aritmetica -> . LESS expression
    (34) relacional -> . expression DEQUAL expression
    (35) relacional -> . expression DIFERENT expression
    (36) relacional -> . expression MINOR expression
    (37) relacional -> . expression MINOREQUAL expression
    (38) relacional -> . expression GREATER expression
    (39) relacional -> . expression GREATEREQUAL expression
    (40) logica -> . boolean AND boolean
    (41) logica -> . boolean OR boolean
    (42) logica -> . NOT boolean
    (47) boolean -> . TRUE
    (48) boolean -> . FALSE

    ID              shift and go to state 25
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LESS            shift and go to state 35
    NOT             shift and go to state 36
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 73
    primitivo                      shift and go to state 27
    aritmetica                     shift and go to state 28
    relacional                     shift and go to state 29
    logica                         shift and go to state 30
    boolean                        shift and go to state 34

state 52

    (29) aritmetica -> expression BY . expression
    (23) expression -> . primitivo
    (24) expression -> . aritmetica
    (25) expression -> . relacional
    (26) expression -> . logica
    (27) expression -> . ID
    (43) primitivo -> . NUMBER
    (44) primitivo -> . FLOAT
    (45) primitivo -> . STRING
    (46) primitivo -> . boolean
    (28) aritmetica -> . expression PLUS expression
    (29) aritmetica -> . expression BY expression
    (30) aritmetica -> . expression DIVIDED expression
    (31) aritmetica -> . expression LESS expression
    (32) aritmetica -> . expression MODUL expression
    (33) aritmetica -> . LESS expression
    (34) relacional -> . expression DEQUAL expression
    (35) relacional -> . expression DIFERENT expression
    (36) relacional -> . expression MINOR expression
    (37) relacional -> . expression MINOREQUAL expression
    (38) relacional -> . expression GREATER expression
    (39) relacional -> . expression GREATEREQUAL expression
    (40) logica -> . boolean AND boolean
    (41) logica -> . boolean OR boolean
    (42) logica -> . NOT boolean
    (47) boolean -> . TRUE
    (48) boolean -> . FALSE

    ID              shift and go to state 25
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LESS            shift and go to state 35
    NOT             shift and go to state 36
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 74
    primitivo                      shift and go to state 27
    aritmetica                     shift and go to state 28
    relacional                     shift and go to state 29
    logica                         shift and go to state 30
    boolean                        shift and go to state 34

state 53

    (30) aritmetica -> expression DIVIDED . expression
    (23) expression -> . primitivo
    (24) expression -> . aritmetica
    (25) expression -> . relacional
    (26) expression -> . logica
    (27) expression -> . ID
    (43) primitivo -> . NUMBER
    (44) primitivo -> . FLOAT
    (45) primitivo -> . STRING
    (46) primitivo -> . boolean
    (28) aritmetica -> . expression PLUS expression
    (29) aritmetica -> . expression BY expression
    (30) aritmetica -> . expression DIVIDED expression
    (31) aritmetica -> . expression LESS expression
    (32) aritmetica -> . expression MODUL expression
    (33) aritmetica -> . LESS expression
    (34) relacional -> . expression DEQUAL expression
    (35) relacional -> . expression DIFERENT expression
    (36) relacional -> . expression MINOR expression
    (37) relacional -> . expression MINOREQUAL expression
    (38) relacional -> . expression GREATER expression
    (39) relacional -> . expression GREATEREQUAL expression
    (40) logica -> . boolean AND boolean
    (41) logica -> . boolean OR boolean
    (42) logica -> . NOT boolean
    (47) boolean -> . TRUE
    (48) boolean -> . FALSE

    ID              shift and go to state 25
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LESS            shift and go to state 35
    NOT             shift and go to state 36
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 75
    primitivo                      shift and go to state 27
    aritmetica                     shift and go to state 28
    relacional                     shift and go to state 29
    logica                         shift and go to state 30
    boolean                        shift and go to state 34

state 54

    (31) aritmetica -> expression LESS . expression
    (23) expression -> . primitivo
    (24) expression -> . aritmetica
    (25) expression -> . relacional
    (26) expression -> . logica
    (27) expression -> . ID
    (43) primitivo -> . NUMBER
    (44) primitivo -> . FLOAT
    (45) primitivo -> . STRING
    (46) primitivo -> . boolean
    (28) aritmetica -> . expression PLUS expression
    (29) aritmetica -> . expression BY expression
    (30) aritmetica -> . expression DIVIDED expression
    (31) aritmetica -> . expression LESS expression
    (32) aritmetica -> . expression MODUL expression
    (33) aritmetica -> . LESS expression
    (34) relacional -> . expression DEQUAL expression
    (35) relacional -> . expression DIFERENT expression
    (36) relacional -> . expression MINOR expression
    (37) relacional -> . expression MINOREQUAL expression
    (38) relacional -> . expression GREATER expression
    (39) relacional -> . expression GREATEREQUAL expression
    (40) logica -> . boolean AND boolean
    (41) logica -> . boolean OR boolean
    (42) logica -> . NOT boolean
    (47) boolean -> . TRUE
    (48) boolean -> . FALSE

    ID              shift and go to state 25
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LESS            shift and go to state 35
    NOT             shift and go to state 36
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 76
    primitivo                      shift and go to state 27
    aritmetica                     shift and go to state 28
    relacional                     shift and go to state 29
    logica                         shift and go to state 30
    boolean                        shift and go to state 34

state 55

    (32) aritmetica -> expression MODUL . expression
    (23) expression -> . primitivo
    (24) expression -> . aritmetica
    (25) expression -> . relacional
    (26) expression -> . logica
    (27) expression -> . ID
    (43) primitivo -> . NUMBER
    (44) primitivo -> . FLOAT
    (45) primitivo -> . STRING
    (46) primitivo -> . boolean
    (28) aritmetica -> . expression PLUS expression
    (29) aritmetica -> . expression BY expression
    (30) aritmetica -> . expression DIVIDED expression
    (31) aritmetica -> . expression LESS expression
    (32) aritmetica -> . expression MODUL expression
    (33) aritmetica -> . LESS expression
    (34) relacional -> . expression DEQUAL expression
    (35) relacional -> . expression DIFERENT expression
    (36) relacional -> . expression MINOR expression
    (37) relacional -> . expression MINOREQUAL expression
    (38) relacional -> . expression GREATER expression
    (39) relacional -> . expression GREATEREQUAL expression
    (40) logica -> . boolean AND boolean
    (41) logica -> . boolean OR boolean
    (42) logica -> . NOT boolean
    (47) boolean -> . TRUE
    (48) boolean -> . FALSE

    ID              shift and go to state 25
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LESS            shift and go to state 35
    NOT             shift and go to state 36
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 77
    primitivo                      shift and go to state 27
    aritmetica                     shift and go to state 28
    relacional                     shift and go to state 29
    logica                         shift and go to state 30
    boolean                        shift and go to state 34

state 56

    (34) relacional -> expression DEQUAL . expression
    (23) expression -> . primitivo
    (24) expression -> . aritmetica
    (25) expression -> . relacional
    (26) expression -> . logica
    (27) expression -> . ID
    (43) primitivo -> . NUMBER
    (44) primitivo -> . FLOAT
    (45) primitivo -> . STRING
    (46) primitivo -> . boolean
    (28) aritmetica -> . expression PLUS expression
    (29) aritmetica -> . expression BY expression
    (30) aritmetica -> . expression DIVIDED expression
    (31) aritmetica -> . expression LESS expression
    (32) aritmetica -> . expression MODUL expression
    (33) aritmetica -> . LESS expression
    (34) relacional -> . expression DEQUAL expression
    (35) relacional -> . expression DIFERENT expression
    (36) relacional -> . expression MINOR expression
    (37) relacional -> . expression MINOREQUAL expression
    (38) relacional -> . expression GREATER expression
    (39) relacional -> . expression GREATEREQUAL expression
    (40) logica -> . boolean AND boolean
    (41) logica -> . boolean OR boolean
    (42) logica -> . NOT boolean
    (47) boolean -> . TRUE
    (48) boolean -> . FALSE

    ID              shift and go to state 25
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LESS            shift and go to state 35
    NOT             shift and go to state 36
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 78
    primitivo                      shift and go to state 27
    aritmetica                     shift and go to state 28
    relacional                     shift and go to state 29
    logica                         shift and go to state 30
    boolean                        shift and go to state 34

state 57

    (35) relacional -> expression DIFERENT . expression
    (23) expression -> . primitivo
    (24) expression -> . aritmetica
    (25) expression -> . relacional
    (26) expression -> . logica
    (27) expression -> . ID
    (43) primitivo -> . NUMBER
    (44) primitivo -> . FLOAT
    (45) primitivo -> . STRING
    (46) primitivo -> . boolean
    (28) aritmetica -> . expression PLUS expression
    (29) aritmetica -> . expression BY expression
    (30) aritmetica -> . expression DIVIDED expression
    (31) aritmetica -> . expression LESS expression
    (32) aritmetica -> . expression MODUL expression
    (33) aritmetica -> . LESS expression
    (34) relacional -> . expression DEQUAL expression
    (35) relacional -> . expression DIFERENT expression
    (36) relacional -> . expression MINOR expression
    (37) relacional -> . expression MINOREQUAL expression
    (38) relacional -> . expression GREATER expression
    (39) relacional -> . expression GREATEREQUAL expression
    (40) logica -> . boolean AND boolean
    (41) logica -> . boolean OR boolean
    (42) logica -> . NOT boolean
    (47) boolean -> . TRUE
    (48) boolean -> . FALSE

    ID              shift and go to state 25
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LESS            shift and go to state 35
    NOT             shift and go to state 36
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 79
    primitivo                      shift and go to state 27
    aritmetica                     shift and go to state 28
    relacional                     shift and go to state 29
    logica                         shift and go to state 30
    boolean                        shift and go to state 34

state 58

    (36) relacional -> expression MINOR . expression
    (23) expression -> . primitivo
    (24) expression -> . aritmetica
    (25) expression -> . relacional
    (26) expression -> . logica
    (27) expression -> . ID
    (43) primitivo -> . NUMBER
    (44) primitivo -> . FLOAT
    (45) primitivo -> . STRING
    (46) primitivo -> . boolean
    (28) aritmetica -> . expression PLUS expression
    (29) aritmetica -> . expression BY expression
    (30) aritmetica -> . expression DIVIDED expression
    (31) aritmetica -> . expression LESS expression
    (32) aritmetica -> . expression MODUL expression
    (33) aritmetica -> . LESS expression
    (34) relacional -> . expression DEQUAL expression
    (35) relacional -> . expression DIFERENT expression
    (36) relacional -> . expression MINOR expression
    (37) relacional -> . expression MINOREQUAL expression
    (38) relacional -> . expression GREATER expression
    (39) relacional -> . expression GREATEREQUAL expression
    (40) logica -> . boolean AND boolean
    (41) logica -> . boolean OR boolean
    (42) logica -> . NOT boolean
    (47) boolean -> . TRUE
    (48) boolean -> . FALSE

    ID              shift and go to state 25
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LESS            shift and go to state 35
    NOT             shift and go to state 36
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 80
    primitivo                      shift and go to state 27
    aritmetica                     shift and go to state 28
    relacional                     shift and go to state 29
    logica                         shift and go to state 30
    boolean                        shift and go to state 34

state 59

    (37) relacional -> expression MINOREQUAL . expression
    (23) expression -> . primitivo
    (24) expression -> . aritmetica
    (25) expression -> . relacional
    (26) expression -> . logica
    (27) expression -> . ID
    (43) primitivo -> . NUMBER
    (44) primitivo -> . FLOAT
    (45) primitivo -> . STRING
    (46) primitivo -> . boolean
    (28) aritmetica -> . expression PLUS expression
    (29) aritmetica -> . expression BY expression
    (30) aritmetica -> . expression DIVIDED expression
    (31) aritmetica -> . expression LESS expression
    (32) aritmetica -> . expression MODUL expression
    (33) aritmetica -> . LESS expression
    (34) relacional -> . expression DEQUAL expression
    (35) relacional -> . expression DIFERENT expression
    (36) relacional -> . expression MINOR expression
    (37) relacional -> . expression MINOREQUAL expression
    (38) relacional -> . expression GREATER expression
    (39) relacional -> . expression GREATEREQUAL expression
    (40) logica -> . boolean AND boolean
    (41) logica -> . boolean OR boolean
    (42) logica -> . NOT boolean
    (47) boolean -> . TRUE
    (48) boolean -> . FALSE

    ID              shift and go to state 25
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LESS            shift and go to state 35
    NOT             shift and go to state 36
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 81
    primitivo                      shift and go to state 27
    aritmetica                     shift and go to state 28
    relacional                     shift and go to state 29
    logica                         shift and go to state 30
    boolean                        shift and go to state 34

state 60

    (38) relacional -> expression GREATER . expression
    (23) expression -> . primitivo
    (24) expression -> . aritmetica
    (25) expression -> . relacional
    (26) expression -> . logica
    (27) expression -> . ID
    (43) primitivo -> . NUMBER
    (44) primitivo -> . FLOAT
    (45) primitivo -> . STRING
    (46) primitivo -> . boolean
    (28) aritmetica -> . expression PLUS expression
    (29) aritmetica -> . expression BY expression
    (30) aritmetica -> . expression DIVIDED expression
    (31) aritmetica -> . expression LESS expression
    (32) aritmetica -> . expression MODUL expression
    (33) aritmetica -> . LESS expression
    (34) relacional -> . expression DEQUAL expression
    (35) relacional -> . expression DIFERENT expression
    (36) relacional -> . expression MINOR expression
    (37) relacional -> . expression MINOREQUAL expression
    (38) relacional -> . expression GREATER expression
    (39) relacional -> . expression GREATEREQUAL expression
    (40) logica -> . boolean AND boolean
    (41) logica -> . boolean OR boolean
    (42) logica -> . NOT boolean
    (47) boolean -> . TRUE
    (48) boolean -> . FALSE

    ID              shift and go to state 25
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LESS            shift and go to state 35
    NOT             shift and go to state 36
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 82
    primitivo                      shift and go to state 27
    aritmetica                     shift and go to state 28
    relacional                     shift and go to state 29
    logica                         shift and go to state 30
    boolean                        shift and go to state 34

state 61

    (39) relacional -> expression GREATEREQUAL . expression
    (23) expression -> . primitivo
    (24) expression -> . aritmetica
    (25) expression -> . relacional
    (26) expression -> . logica
    (27) expression -> . ID
    (43) primitivo -> . NUMBER
    (44) primitivo -> . FLOAT
    (45) primitivo -> . STRING
    (46) primitivo -> . boolean
    (28) aritmetica -> . expression PLUS expression
    (29) aritmetica -> . expression BY expression
    (30) aritmetica -> . expression DIVIDED expression
    (31) aritmetica -> . expression LESS expression
    (32) aritmetica -> . expression MODUL expression
    (33) aritmetica -> . LESS expression
    (34) relacional -> . expression DEQUAL expression
    (35) relacional -> . expression DIFERENT expression
    (36) relacional -> . expression MINOR expression
    (37) relacional -> . expression MINOREQUAL expression
    (38) relacional -> . expression GREATER expression
    (39) relacional -> . expression GREATEREQUAL expression
    (40) logica -> . boolean AND boolean
    (41) logica -> . boolean OR boolean
    (42) logica -> . NOT boolean
    (47) boolean -> . TRUE
    (48) boolean -> . FALSE

    ID              shift and go to state 25
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LESS            shift and go to state 35
    NOT             shift and go to state 36
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 83
    primitivo                      shift and go to state 27
    aritmetica                     shift and go to state 28
    relacional                     shift and go to state 29
    logica                         shift and go to state 30
    boolean                        shift and go to state 34

state 62

    (40) logica -> boolean AND . boolean
    (47) boolean -> . TRUE
    (48) boolean -> . FALSE

    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    boolean                        shift and go to state 84

state 63

    (41) logica -> boolean OR . boolean
    (47) boolean -> . TRUE
    (48) boolean -> . FALSE

    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    boolean                        shift and go to state 85

state 64

    (33) aritmetica -> LESS expression .
    (28) aritmetica -> expression . PLUS expression
    (29) aritmetica -> expression . BY expression
    (30) aritmetica -> expression . DIVIDED expression
    (31) aritmetica -> expression . LESS expression
    (32) aritmetica -> expression . MODUL expression
    (34) relacional -> expression . DEQUAL expression
    (35) relacional -> expression . DIFERENT expression
    (36) relacional -> expression . MINOR expression
    (37) relacional -> expression . MINOREQUAL expression
    (38) relacional -> expression . GREATER expression
    (39) relacional -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 33 (aritmetica -> LESS expression .)
    BY              reduce using rule 33 (aritmetica -> LESS expression .)
    DIVIDED         reduce using rule 33 (aritmetica -> LESS expression .)
    LESS            reduce using rule 33 (aritmetica -> LESS expression .)
    MODUL           reduce using rule 33 (aritmetica -> LESS expression .)
    DEQUAL          reduce using rule 33 (aritmetica -> LESS expression .)
    DIFERENT        reduce using rule 33 (aritmetica -> LESS expression .)
    MINOR           reduce using rule 33 (aritmetica -> LESS expression .)
    MINOREQUAL      reduce using rule 33 (aritmetica -> LESS expression .)
    GREATER         reduce using rule 33 (aritmetica -> LESS expression .)
    GREATEREQUAL    reduce using rule 33 (aritmetica -> LESS expression .)
    CONSOLE         reduce using rule 33 (aritmetica -> LESS expression .)
    RVAR            reduce using rule 33 (aritmetica -> LESS expression .)
    RCONST          reduce using rule 33 (aritmetica -> LESS expression .)
    ID              reduce using rule 33 (aritmetica -> LESS expression .)
    RIF             reduce using rule 33 (aritmetica -> LESS expression .)
    $end            reduce using rule 33 (aritmetica -> LESS expression .)
    LLAVEC          reduce using rule 33 (aritmetica -> LESS expression .)
    PARC            reduce using rule 33 (aritmetica -> LESS expression .)

  ! PLUS            [ shift and go to state 51 ]
  ! BY              [ shift and go to state 52 ]
  ! DIVIDED         [ shift and go to state 53 ]
  ! LESS            [ shift and go to state 54 ]
  ! MODUL           [ shift and go to state 55 ]
  ! DEQUAL          [ shift and go to state 56 ]
  ! DIFERENT        [ shift and go to state 57 ]
  ! MINOR           [ shift and go to state 58 ]
  ! MINOREQUAL      [ shift and go to state 59 ]
  ! GREATER         [ shift and go to state 60 ]
  ! GREATEREQUAL    [ shift and go to state 61 ]


state 65

    (42) logica -> NOT boolean .

    PLUS            reduce using rule 42 (logica -> NOT boolean .)
    BY              reduce using rule 42 (logica -> NOT boolean .)
    DIVIDED         reduce using rule 42 (logica -> NOT boolean .)
    LESS            reduce using rule 42 (logica -> NOT boolean .)
    MODUL           reduce using rule 42 (logica -> NOT boolean .)
    DEQUAL          reduce using rule 42 (logica -> NOT boolean .)
    DIFERENT        reduce using rule 42 (logica -> NOT boolean .)
    MINOR           reduce using rule 42 (logica -> NOT boolean .)
    MINOREQUAL      reduce using rule 42 (logica -> NOT boolean .)
    GREATER         reduce using rule 42 (logica -> NOT boolean .)
    GREATEREQUAL    reduce using rule 42 (logica -> NOT boolean .)
    CONSOLE         reduce using rule 42 (logica -> NOT boolean .)
    RVAR            reduce using rule 42 (logica -> NOT boolean .)
    RCONST          reduce using rule 42 (logica -> NOT boolean .)
    ID              reduce using rule 42 (logica -> NOT boolean .)
    RIF             reduce using rule 42 (logica -> NOT boolean .)
    $end            reduce using rule 42 (logica -> NOT boolean .)
    LLAVEC          reduce using rule 42 (logica -> NOT boolean .)
    PARC            reduce using rule 42 (logica -> NOT boolean .)


state 66

    (17) assignVar -> ID PLUS EQUAL expression .
    (28) aritmetica -> expression . PLUS expression
    (29) aritmetica -> expression . BY expression
    (30) aritmetica -> expression . DIVIDED expression
    (31) aritmetica -> expression . LESS expression
    (32) aritmetica -> expression . MODUL expression
    (34) relacional -> expression . DEQUAL expression
    (35) relacional -> expression . DIFERENT expression
    (36) relacional -> expression . MINOR expression
    (37) relacional -> expression . MINOREQUAL expression
    (38) relacional -> expression . GREATER expression
    (39) relacional -> expression . GREATEREQUAL expression

    CONSOLE         reduce using rule 17 (assignVar -> ID PLUS EQUAL expression .)
    RVAR            reduce using rule 17 (assignVar -> ID PLUS EQUAL expression .)
    RCONST          reduce using rule 17 (assignVar -> ID PLUS EQUAL expression .)
    ID              reduce using rule 17 (assignVar -> ID PLUS EQUAL expression .)
    RIF             reduce using rule 17 (assignVar -> ID PLUS EQUAL expression .)
    $end            reduce using rule 17 (assignVar -> ID PLUS EQUAL expression .)
    LLAVEC          reduce using rule 17 (assignVar -> ID PLUS EQUAL expression .)
    PLUS            shift and go to state 51
    BY              shift and go to state 52
    DIVIDED         shift and go to state 53
    LESS            shift and go to state 54
    MODUL           shift and go to state 55
    DEQUAL          shift and go to state 56
    DIFERENT        shift and go to state 57
    MINOR           shift and go to state 58
    MINOREQUAL      shift and go to state 59
    GREATER         shift and go to state 60
    GREATEREQUAL    shift and go to state 61


state 67

    (18) assignVar -> ID LESS EQUAL expression .
    (28) aritmetica -> expression . PLUS expression
    (29) aritmetica -> expression . BY expression
    (30) aritmetica -> expression . DIVIDED expression
    (31) aritmetica -> expression . LESS expression
    (32) aritmetica -> expression . MODUL expression
    (34) relacional -> expression . DEQUAL expression
    (35) relacional -> expression . DIFERENT expression
    (36) relacional -> expression . MINOR expression
    (37) relacional -> expression . MINOREQUAL expression
    (38) relacional -> expression . GREATER expression
    (39) relacional -> expression . GREATEREQUAL expression

    CONSOLE         reduce using rule 18 (assignVar -> ID LESS EQUAL expression .)
    RVAR            reduce using rule 18 (assignVar -> ID LESS EQUAL expression .)
    RCONST          reduce using rule 18 (assignVar -> ID LESS EQUAL expression .)
    ID              reduce using rule 18 (assignVar -> ID LESS EQUAL expression .)
    RIF             reduce using rule 18 (assignVar -> ID LESS EQUAL expression .)
    $end            reduce using rule 18 (assignVar -> ID LESS EQUAL expression .)
    LLAVEC          reduce using rule 18 (assignVar -> ID LESS EQUAL expression .)
    PLUS            shift and go to state 51
    BY              shift and go to state 52
    DIVIDED         shift and go to state 53
    LESS            shift and go to state 54
    MODUL           shift and go to state 55
    DEQUAL          shift and go to state 56
    DIFERENT        shift and go to state 57
    MINOR           shift and go to state 58
    MINOREQUAL      shift and go to state 59
    GREATER         shift and go to state 60
    GREATEREQUAL    shift and go to state 61


state 68

    (13) declareConst -> RCONST ID DOUBLEDOT type . EQUAL expression
    (15) declareConst -> RCONST ID DOUBLEDOT type .

    EQUAL           shift and go to state 86
    CONSOLE         reduce using rule 15 (declareConst -> RCONST ID DOUBLEDOT type .)
    RVAR            reduce using rule 15 (declareConst -> RCONST ID DOUBLEDOT type .)
    RCONST          reduce using rule 15 (declareConst -> RCONST ID DOUBLEDOT type .)
    ID              reduce using rule 15 (declareConst -> RCONST ID DOUBLEDOT type .)
    RIF             reduce using rule 15 (declareConst -> RCONST ID DOUBLEDOT type .)
    $end            reduce using rule 15 (declareConst -> RCONST ID DOUBLEDOT type .)
    LLAVEC          reduce using rule 15 (declareConst -> RCONST ID DOUBLEDOT type .)


state 69

    (14) declareConst -> RCONST ID EQUAL expression .
    (28) aritmetica -> expression . PLUS expression
    (29) aritmetica -> expression . BY expression
    (30) aritmetica -> expression . DIVIDED expression
    (31) aritmetica -> expression . LESS expression
    (32) aritmetica -> expression . MODUL expression
    (34) relacional -> expression . DEQUAL expression
    (35) relacional -> expression . DIFERENT expression
    (36) relacional -> expression . MINOR expression
    (37) relacional -> expression . MINOREQUAL expression
    (38) relacional -> expression . GREATER expression
    (39) relacional -> expression . GREATEREQUAL expression

    CONSOLE         reduce using rule 14 (declareConst -> RCONST ID EQUAL expression .)
    RVAR            reduce using rule 14 (declareConst -> RCONST ID EQUAL expression .)
    RCONST          reduce using rule 14 (declareConst -> RCONST ID EQUAL expression .)
    ID              reduce using rule 14 (declareConst -> RCONST ID EQUAL expression .)
    RIF             reduce using rule 14 (declareConst -> RCONST ID EQUAL expression .)
    $end            reduce using rule 14 (declareConst -> RCONST ID EQUAL expression .)
    LLAVEC          reduce using rule 14 (declareConst -> RCONST ID EQUAL expression .)
    PLUS            shift and go to state 51
    BY              shift and go to state 52
    DIVIDED         shift and go to state 53
    LESS            shift and go to state 54
    MODUL           shift and go to state 55
    DEQUAL          shift and go to state 56
    DIFERENT        shift and go to state 57
    MINOR           shift and go to state 58
    MINOREQUAL      shift and go to state 59
    GREATER         shift and go to state 60
    GREATEREQUAL    shift and go to state 61


state 70

    (19) if_else -> RIF PARA expression PARC . LLAVEA instrucciones LLAVEC else

    LLAVEA          shift and go to state 87


state 71

    (9) print -> CONSOLE DOT LOG PARA expression . PARC
    (28) aritmetica -> expression . PLUS expression
    (29) aritmetica -> expression . BY expression
    (30) aritmetica -> expression . DIVIDED expression
    (31) aritmetica -> expression . LESS expression
    (32) aritmetica -> expression . MODUL expression
    (34) relacional -> expression . DEQUAL expression
    (35) relacional -> expression . DIFERENT expression
    (36) relacional -> expression . MINOR expression
    (37) relacional -> expression . MINOREQUAL expression
    (38) relacional -> expression . GREATER expression
    (39) relacional -> expression . GREATEREQUAL expression

    PARC            shift and go to state 88
    PLUS            shift and go to state 51
    BY              shift and go to state 52
    DIVIDED         shift and go to state 53
    LESS            shift and go to state 54
    MODUL           shift and go to state 55
    DEQUAL          shift and go to state 56
    DIFERENT        shift and go to state 57
    MINOR           shift and go to state 58
    MINOREQUAL      shift and go to state 59
    GREATER         shift and go to state 60
    GREATEREQUAL    shift and go to state 61


state 72

    (10) declare -> RVAR ID DOUBLEDOT type EQUAL . expression
    (23) expression -> . primitivo
    (24) expression -> . aritmetica
    (25) expression -> . relacional
    (26) expression -> . logica
    (27) expression -> . ID
    (43) primitivo -> . NUMBER
    (44) primitivo -> . FLOAT
    (45) primitivo -> . STRING
    (46) primitivo -> . boolean
    (28) aritmetica -> . expression PLUS expression
    (29) aritmetica -> . expression BY expression
    (30) aritmetica -> . expression DIVIDED expression
    (31) aritmetica -> . expression LESS expression
    (32) aritmetica -> . expression MODUL expression
    (33) aritmetica -> . LESS expression
    (34) relacional -> . expression DEQUAL expression
    (35) relacional -> . expression DIFERENT expression
    (36) relacional -> . expression MINOR expression
    (37) relacional -> . expression MINOREQUAL expression
    (38) relacional -> . expression GREATER expression
    (39) relacional -> . expression GREATEREQUAL expression
    (40) logica -> . boolean AND boolean
    (41) logica -> . boolean OR boolean
    (42) logica -> . NOT boolean
    (47) boolean -> . TRUE
    (48) boolean -> . FALSE

    ID              shift and go to state 25
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LESS            shift and go to state 35
    NOT             shift and go to state 36
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 89
    primitivo                      shift and go to state 27
    aritmetica                     shift and go to state 28
    relacional                     shift and go to state 29
    logica                         shift and go to state 30
    boolean                        shift and go to state 34

state 73

    (28) aritmetica -> expression PLUS expression .
    (28) aritmetica -> expression . PLUS expression
    (29) aritmetica -> expression . BY expression
    (30) aritmetica -> expression . DIVIDED expression
    (31) aritmetica -> expression . LESS expression
    (32) aritmetica -> expression . MODUL expression
    (34) relacional -> expression . DEQUAL expression
    (35) relacional -> expression . DIFERENT expression
    (36) relacional -> expression . MINOR expression
    (37) relacional -> expression . MINOREQUAL expression
    (38) relacional -> expression . GREATER expression
    (39) relacional -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 28 (aritmetica -> expression PLUS expression .)
    LESS            reduce using rule 28 (aritmetica -> expression PLUS expression .)
    DEQUAL          reduce using rule 28 (aritmetica -> expression PLUS expression .)
    DIFERENT        reduce using rule 28 (aritmetica -> expression PLUS expression .)
    MINOR           reduce using rule 28 (aritmetica -> expression PLUS expression .)
    MINOREQUAL      reduce using rule 28 (aritmetica -> expression PLUS expression .)
    GREATER         reduce using rule 28 (aritmetica -> expression PLUS expression .)
    GREATEREQUAL    reduce using rule 28 (aritmetica -> expression PLUS expression .)
    CONSOLE         reduce using rule 28 (aritmetica -> expression PLUS expression .)
    RVAR            reduce using rule 28 (aritmetica -> expression PLUS expression .)
    RCONST          reduce using rule 28 (aritmetica -> expression PLUS expression .)
    ID              reduce using rule 28 (aritmetica -> expression PLUS expression .)
    RIF             reduce using rule 28 (aritmetica -> expression PLUS expression .)
    $end            reduce using rule 28 (aritmetica -> expression PLUS expression .)
    LLAVEC          reduce using rule 28 (aritmetica -> expression PLUS expression .)
    PARC            reduce using rule 28 (aritmetica -> expression PLUS expression .)
    BY              shift and go to state 52
    DIVIDED         shift and go to state 53
    MODUL           shift and go to state 55

  ! BY              [ reduce using rule 28 (aritmetica -> expression PLUS expression .) ]
  ! DIVIDED         [ reduce using rule 28 (aritmetica -> expression PLUS expression .) ]
  ! MODUL           [ reduce using rule 28 (aritmetica -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 51 ]
  ! LESS            [ shift and go to state 54 ]
  ! DEQUAL          [ shift and go to state 56 ]
  ! DIFERENT        [ shift and go to state 57 ]
  ! MINOR           [ shift and go to state 58 ]
  ! MINOREQUAL      [ shift and go to state 59 ]
  ! GREATER         [ shift and go to state 60 ]
  ! GREATEREQUAL    [ shift and go to state 61 ]


state 74

    (29) aritmetica -> expression BY expression .
    (28) aritmetica -> expression . PLUS expression
    (29) aritmetica -> expression . BY expression
    (30) aritmetica -> expression . DIVIDED expression
    (31) aritmetica -> expression . LESS expression
    (32) aritmetica -> expression . MODUL expression
    (34) relacional -> expression . DEQUAL expression
    (35) relacional -> expression . DIFERENT expression
    (36) relacional -> expression . MINOR expression
    (37) relacional -> expression . MINOREQUAL expression
    (38) relacional -> expression . GREATER expression
    (39) relacional -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 29 (aritmetica -> expression BY expression .)
    BY              reduce using rule 29 (aritmetica -> expression BY expression .)
    DIVIDED         reduce using rule 29 (aritmetica -> expression BY expression .)
    LESS            reduce using rule 29 (aritmetica -> expression BY expression .)
    MODUL           reduce using rule 29 (aritmetica -> expression BY expression .)
    DEQUAL          reduce using rule 29 (aritmetica -> expression BY expression .)
    DIFERENT        reduce using rule 29 (aritmetica -> expression BY expression .)
    MINOR           reduce using rule 29 (aritmetica -> expression BY expression .)
    MINOREQUAL      reduce using rule 29 (aritmetica -> expression BY expression .)
    GREATER         reduce using rule 29 (aritmetica -> expression BY expression .)
    GREATEREQUAL    reduce using rule 29 (aritmetica -> expression BY expression .)
    CONSOLE         reduce using rule 29 (aritmetica -> expression BY expression .)
    RVAR            reduce using rule 29 (aritmetica -> expression BY expression .)
    RCONST          reduce using rule 29 (aritmetica -> expression BY expression .)
    ID              reduce using rule 29 (aritmetica -> expression BY expression .)
    RIF             reduce using rule 29 (aritmetica -> expression BY expression .)
    $end            reduce using rule 29 (aritmetica -> expression BY expression .)
    LLAVEC          reduce using rule 29 (aritmetica -> expression BY expression .)
    PARC            reduce using rule 29 (aritmetica -> expression BY expression .)

  ! PLUS            [ shift and go to state 51 ]
  ! BY              [ shift and go to state 52 ]
  ! DIVIDED         [ shift and go to state 53 ]
  ! LESS            [ shift and go to state 54 ]
  ! MODUL           [ shift and go to state 55 ]
  ! DEQUAL          [ shift and go to state 56 ]
  ! DIFERENT        [ shift and go to state 57 ]
  ! MINOR           [ shift and go to state 58 ]
  ! MINOREQUAL      [ shift and go to state 59 ]
  ! GREATER         [ shift and go to state 60 ]
  ! GREATEREQUAL    [ shift and go to state 61 ]


state 75

    (30) aritmetica -> expression DIVIDED expression .
    (28) aritmetica -> expression . PLUS expression
    (29) aritmetica -> expression . BY expression
    (30) aritmetica -> expression . DIVIDED expression
    (31) aritmetica -> expression . LESS expression
    (32) aritmetica -> expression . MODUL expression
    (34) relacional -> expression . DEQUAL expression
    (35) relacional -> expression . DIFERENT expression
    (36) relacional -> expression . MINOR expression
    (37) relacional -> expression . MINOREQUAL expression
    (38) relacional -> expression . GREATER expression
    (39) relacional -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 30 (aritmetica -> expression DIVIDED expression .)
    BY              reduce using rule 30 (aritmetica -> expression DIVIDED expression .)
    DIVIDED         reduce using rule 30 (aritmetica -> expression DIVIDED expression .)
    LESS            reduce using rule 30 (aritmetica -> expression DIVIDED expression .)
    MODUL           reduce using rule 30 (aritmetica -> expression DIVIDED expression .)
    DEQUAL          reduce using rule 30 (aritmetica -> expression DIVIDED expression .)
    DIFERENT        reduce using rule 30 (aritmetica -> expression DIVIDED expression .)
    MINOR           reduce using rule 30 (aritmetica -> expression DIVIDED expression .)
    MINOREQUAL      reduce using rule 30 (aritmetica -> expression DIVIDED expression .)
    GREATER         reduce using rule 30 (aritmetica -> expression DIVIDED expression .)
    GREATEREQUAL    reduce using rule 30 (aritmetica -> expression DIVIDED expression .)
    CONSOLE         reduce using rule 30 (aritmetica -> expression DIVIDED expression .)
    RVAR            reduce using rule 30 (aritmetica -> expression DIVIDED expression .)
    RCONST          reduce using rule 30 (aritmetica -> expression DIVIDED expression .)
    ID              reduce using rule 30 (aritmetica -> expression DIVIDED expression .)
    RIF             reduce using rule 30 (aritmetica -> expression DIVIDED expression .)
    $end            reduce using rule 30 (aritmetica -> expression DIVIDED expression .)
    LLAVEC          reduce using rule 30 (aritmetica -> expression DIVIDED expression .)
    PARC            reduce using rule 30 (aritmetica -> expression DIVIDED expression .)

  ! PLUS            [ shift and go to state 51 ]
  ! BY              [ shift and go to state 52 ]
  ! DIVIDED         [ shift and go to state 53 ]
  ! LESS            [ shift and go to state 54 ]
  ! MODUL           [ shift and go to state 55 ]
  ! DEQUAL          [ shift and go to state 56 ]
  ! DIFERENT        [ shift and go to state 57 ]
  ! MINOR           [ shift and go to state 58 ]
  ! MINOREQUAL      [ shift and go to state 59 ]
  ! GREATER         [ shift and go to state 60 ]
  ! GREATEREQUAL    [ shift and go to state 61 ]


state 76

    (31) aritmetica -> expression LESS expression .
    (28) aritmetica -> expression . PLUS expression
    (29) aritmetica -> expression . BY expression
    (30) aritmetica -> expression . DIVIDED expression
    (31) aritmetica -> expression . LESS expression
    (32) aritmetica -> expression . MODUL expression
    (34) relacional -> expression . DEQUAL expression
    (35) relacional -> expression . DIFERENT expression
    (36) relacional -> expression . MINOR expression
    (37) relacional -> expression . MINOREQUAL expression
    (38) relacional -> expression . GREATER expression
    (39) relacional -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 31 (aritmetica -> expression LESS expression .)
    LESS            reduce using rule 31 (aritmetica -> expression LESS expression .)
    DEQUAL          reduce using rule 31 (aritmetica -> expression LESS expression .)
    DIFERENT        reduce using rule 31 (aritmetica -> expression LESS expression .)
    MINOR           reduce using rule 31 (aritmetica -> expression LESS expression .)
    MINOREQUAL      reduce using rule 31 (aritmetica -> expression LESS expression .)
    GREATER         reduce using rule 31 (aritmetica -> expression LESS expression .)
    GREATEREQUAL    reduce using rule 31 (aritmetica -> expression LESS expression .)
    CONSOLE         reduce using rule 31 (aritmetica -> expression LESS expression .)
    RVAR            reduce using rule 31 (aritmetica -> expression LESS expression .)
    RCONST          reduce using rule 31 (aritmetica -> expression LESS expression .)
    ID              reduce using rule 31 (aritmetica -> expression LESS expression .)
    RIF             reduce using rule 31 (aritmetica -> expression LESS expression .)
    $end            reduce using rule 31 (aritmetica -> expression LESS expression .)
    LLAVEC          reduce using rule 31 (aritmetica -> expression LESS expression .)
    PARC            reduce using rule 31 (aritmetica -> expression LESS expression .)
    BY              shift and go to state 52
    DIVIDED         shift and go to state 53
    MODUL           shift and go to state 55

  ! BY              [ reduce using rule 31 (aritmetica -> expression LESS expression .) ]
  ! DIVIDED         [ reduce using rule 31 (aritmetica -> expression LESS expression .) ]
  ! MODUL           [ reduce using rule 31 (aritmetica -> expression LESS expression .) ]
  ! PLUS            [ shift and go to state 51 ]
  ! LESS            [ shift and go to state 54 ]
  ! DEQUAL          [ shift and go to state 56 ]
  ! DIFERENT        [ shift and go to state 57 ]
  ! MINOR           [ shift and go to state 58 ]
  ! MINOREQUAL      [ shift and go to state 59 ]
  ! GREATER         [ shift and go to state 60 ]
  ! GREATEREQUAL    [ shift and go to state 61 ]


state 77

    (32) aritmetica -> expression MODUL expression .
    (28) aritmetica -> expression . PLUS expression
    (29) aritmetica -> expression . BY expression
    (30) aritmetica -> expression . DIVIDED expression
    (31) aritmetica -> expression . LESS expression
    (32) aritmetica -> expression . MODUL expression
    (34) relacional -> expression . DEQUAL expression
    (35) relacional -> expression . DIFERENT expression
    (36) relacional -> expression . MINOR expression
    (37) relacional -> expression . MINOREQUAL expression
    (38) relacional -> expression . GREATER expression
    (39) relacional -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 32 (aritmetica -> expression MODUL expression .)
    BY              reduce using rule 32 (aritmetica -> expression MODUL expression .)
    DIVIDED         reduce using rule 32 (aritmetica -> expression MODUL expression .)
    LESS            reduce using rule 32 (aritmetica -> expression MODUL expression .)
    MODUL           reduce using rule 32 (aritmetica -> expression MODUL expression .)
    DEQUAL          reduce using rule 32 (aritmetica -> expression MODUL expression .)
    DIFERENT        reduce using rule 32 (aritmetica -> expression MODUL expression .)
    MINOR           reduce using rule 32 (aritmetica -> expression MODUL expression .)
    MINOREQUAL      reduce using rule 32 (aritmetica -> expression MODUL expression .)
    GREATER         reduce using rule 32 (aritmetica -> expression MODUL expression .)
    GREATEREQUAL    reduce using rule 32 (aritmetica -> expression MODUL expression .)
    CONSOLE         reduce using rule 32 (aritmetica -> expression MODUL expression .)
    RVAR            reduce using rule 32 (aritmetica -> expression MODUL expression .)
    RCONST          reduce using rule 32 (aritmetica -> expression MODUL expression .)
    ID              reduce using rule 32 (aritmetica -> expression MODUL expression .)
    RIF             reduce using rule 32 (aritmetica -> expression MODUL expression .)
    $end            reduce using rule 32 (aritmetica -> expression MODUL expression .)
    LLAVEC          reduce using rule 32 (aritmetica -> expression MODUL expression .)
    PARC            reduce using rule 32 (aritmetica -> expression MODUL expression .)

  ! PLUS            [ shift and go to state 51 ]
  ! BY              [ shift and go to state 52 ]
  ! DIVIDED         [ shift and go to state 53 ]
  ! LESS            [ shift and go to state 54 ]
  ! MODUL           [ shift and go to state 55 ]
  ! DEQUAL          [ shift and go to state 56 ]
  ! DIFERENT        [ shift and go to state 57 ]
  ! MINOR           [ shift and go to state 58 ]
  ! MINOREQUAL      [ shift and go to state 59 ]
  ! GREATER         [ shift and go to state 60 ]
  ! GREATEREQUAL    [ shift and go to state 61 ]


state 78

    (34) relacional -> expression DEQUAL expression .
    (28) aritmetica -> expression . PLUS expression
    (29) aritmetica -> expression . BY expression
    (30) aritmetica -> expression . DIVIDED expression
    (31) aritmetica -> expression . LESS expression
    (32) aritmetica -> expression . MODUL expression
    (34) relacional -> expression . DEQUAL expression
    (35) relacional -> expression . DIFERENT expression
    (36) relacional -> expression . MINOR expression
    (37) relacional -> expression . MINOREQUAL expression
    (38) relacional -> expression . GREATER expression
    (39) relacional -> expression . GREATEREQUAL expression

    DEQUAL          reduce using rule 34 (relacional -> expression DEQUAL expression .)
    DIFERENT        reduce using rule 34 (relacional -> expression DEQUAL expression .)
    MINOR           reduce using rule 34 (relacional -> expression DEQUAL expression .)
    MINOREQUAL      reduce using rule 34 (relacional -> expression DEQUAL expression .)
    GREATER         reduce using rule 34 (relacional -> expression DEQUAL expression .)
    GREATEREQUAL    reduce using rule 34 (relacional -> expression DEQUAL expression .)
    CONSOLE         reduce using rule 34 (relacional -> expression DEQUAL expression .)
    RVAR            reduce using rule 34 (relacional -> expression DEQUAL expression .)
    RCONST          reduce using rule 34 (relacional -> expression DEQUAL expression .)
    ID              reduce using rule 34 (relacional -> expression DEQUAL expression .)
    RIF             reduce using rule 34 (relacional -> expression DEQUAL expression .)
    $end            reduce using rule 34 (relacional -> expression DEQUAL expression .)
    LLAVEC          reduce using rule 34 (relacional -> expression DEQUAL expression .)
    PARC            reduce using rule 34 (relacional -> expression DEQUAL expression .)
    PLUS            shift and go to state 51
    BY              shift and go to state 52
    DIVIDED         shift and go to state 53
    LESS            shift and go to state 54
    MODUL           shift and go to state 55

  ! PLUS            [ reduce using rule 34 (relacional -> expression DEQUAL expression .) ]
  ! BY              [ reduce using rule 34 (relacional -> expression DEQUAL expression .) ]
  ! DIVIDED         [ reduce using rule 34 (relacional -> expression DEQUAL expression .) ]
  ! LESS            [ reduce using rule 34 (relacional -> expression DEQUAL expression .) ]
  ! MODUL           [ reduce using rule 34 (relacional -> expression DEQUAL expression .) ]
  ! DEQUAL          [ shift and go to state 56 ]
  ! DIFERENT        [ shift and go to state 57 ]
  ! MINOR           [ shift and go to state 58 ]
  ! MINOREQUAL      [ shift and go to state 59 ]
  ! GREATER         [ shift and go to state 60 ]
  ! GREATEREQUAL    [ shift and go to state 61 ]


state 79

    (35) relacional -> expression DIFERENT expression .
    (28) aritmetica -> expression . PLUS expression
    (29) aritmetica -> expression . BY expression
    (30) aritmetica -> expression . DIVIDED expression
    (31) aritmetica -> expression . LESS expression
    (32) aritmetica -> expression . MODUL expression
    (34) relacional -> expression . DEQUAL expression
    (35) relacional -> expression . DIFERENT expression
    (36) relacional -> expression . MINOR expression
    (37) relacional -> expression . MINOREQUAL expression
    (38) relacional -> expression . GREATER expression
    (39) relacional -> expression . GREATEREQUAL expression

    DEQUAL          reduce using rule 35 (relacional -> expression DIFERENT expression .)
    DIFERENT        reduce using rule 35 (relacional -> expression DIFERENT expression .)
    MINOR           reduce using rule 35 (relacional -> expression DIFERENT expression .)
    MINOREQUAL      reduce using rule 35 (relacional -> expression DIFERENT expression .)
    GREATER         reduce using rule 35 (relacional -> expression DIFERENT expression .)
    GREATEREQUAL    reduce using rule 35 (relacional -> expression DIFERENT expression .)
    CONSOLE         reduce using rule 35 (relacional -> expression DIFERENT expression .)
    RVAR            reduce using rule 35 (relacional -> expression DIFERENT expression .)
    RCONST          reduce using rule 35 (relacional -> expression DIFERENT expression .)
    ID              reduce using rule 35 (relacional -> expression DIFERENT expression .)
    RIF             reduce using rule 35 (relacional -> expression DIFERENT expression .)
    $end            reduce using rule 35 (relacional -> expression DIFERENT expression .)
    LLAVEC          reduce using rule 35 (relacional -> expression DIFERENT expression .)
    PARC            reduce using rule 35 (relacional -> expression DIFERENT expression .)
    PLUS            shift and go to state 51
    BY              shift and go to state 52
    DIVIDED         shift and go to state 53
    LESS            shift and go to state 54
    MODUL           shift and go to state 55

  ! PLUS            [ reduce using rule 35 (relacional -> expression DIFERENT expression .) ]
  ! BY              [ reduce using rule 35 (relacional -> expression DIFERENT expression .) ]
  ! DIVIDED         [ reduce using rule 35 (relacional -> expression DIFERENT expression .) ]
  ! LESS            [ reduce using rule 35 (relacional -> expression DIFERENT expression .) ]
  ! MODUL           [ reduce using rule 35 (relacional -> expression DIFERENT expression .) ]
  ! DEQUAL          [ shift and go to state 56 ]
  ! DIFERENT        [ shift and go to state 57 ]
  ! MINOR           [ shift and go to state 58 ]
  ! MINOREQUAL      [ shift and go to state 59 ]
  ! GREATER         [ shift and go to state 60 ]
  ! GREATEREQUAL    [ shift and go to state 61 ]


state 80

    (36) relacional -> expression MINOR expression .
    (28) aritmetica -> expression . PLUS expression
    (29) aritmetica -> expression . BY expression
    (30) aritmetica -> expression . DIVIDED expression
    (31) aritmetica -> expression . LESS expression
    (32) aritmetica -> expression . MODUL expression
    (34) relacional -> expression . DEQUAL expression
    (35) relacional -> expression . DIFERENT expression
    (36) relacional -> expression . MINOR expression
    (37) relacional -> expression . MINOREQUAL expression
    (38) relacional -> expression . GREATER expression
    (39) relacional -> expression . GREATEREQUAL expression

    DEQUAL          reduce using rule 36 (relacional -> expression MINOR expression .)
    DIFERENT        reduce using rule 36 (relacional -> expression MINOR expression .)
    MINOR           reduce using rule 36 (relacional -> expression MINOR expression .)
    MINOREQUAL      reduce using rule 36 (relacional -> expression MINOR expression .)
    GREATER         reduce using rule 36 (relacional -> expression MINOR expression .)
    GREATEREQUAL    reduce using rule 36 (relacional -> expression MINOR expression .)
    CONSOLE         reduce using rule 36 (relacional -> expression MINOR expression .)
    RVAR            reduce using rule 36 (relacional -> expression MINOR expression .)
    RCONST          reduce using rule 36 (relacional -> expression MINOR expression .)
    ID              reduce using rule 36 (relacional -> expression MINOR expression .)
    RIF             reduce using rule 36 (relacional -> expression MINOR expression .)
    $end            reduce using rule 36 (relacional -> expression MINOR expression .)
    LLAVEC          reduce using rule 36 (relacional -> expression MINOR expression .)
    PARC            reduce using rule 36 (relacional -> expression MINOR expression .)
    PLUS            shift and go to state 51
    BY              shift and go to state 52
    DIVIDED         shift and go to state 53
    LESS            shift and go to state 54
    MODUL           shift and go to state 55

  ! PLUS            [ reduce using rule 36 (relacional -> expression MINOR expression .) ]
  ! BY              [ reduce using rule 36 (relacional -> expression MINOR expression .) ]
  ! DIVIDED         [ reduce using rule 36 (relacional -> expression MINOR expression .) ]
  ! LESS            [ reduce using rule 36 (relacional -> expression MINOR expression .) ]
  ! MODUL           [ reduce using rule 36 (relacional -> expression MINOR expression .) ]
  ! DEQUAL          [ shift and go to state 56 ]
  ! DIFERENT        [ shift and go to state 57 ]
  ! MINOR           [ shift and go to state 58 ]
  ! MINOREQUAL      [ shift and go to state 59 ]
  ! GREATER         [ shift and go to state 60 ]
  ! GREATEREQUAL    [ shift and go to state 61 ]


state 81

    (37) relacional -> expression MINOREQUAL expression .
    (28) aritmetica -> expression . PLUS expression
    (29) aritmetica -> expression . BY expression
    (30) aritmetica -> expression . DIVIDED expression
    (31) aritmetica -> expression . LESS expression
    (32) aritmetica -> expression . MODUL expression
    (34) relacional -> expression . DEQUAL expression
    (35) relacional -> expression . DIFERENT expression
    (36) relacional -> expression . MINOR expression
    (37) relacional -> expression . MINOREQUAL expression
    (38) relacional -> expression . GREATER expression
    (39) relacional -> expression . GREATEREQUAL expression

    DEQUAL          reduce using rule 37 (relacional -> expression MINOREQUAL expression .)
    DIFERENT        reduce using rule 37 (relacional -> expression MINOREQUAL expression .)
    MINOR           reduce using rule 37 (relacional -> expression MINOREQUAL expression .)
    MINOREQUAL      reduce using rule 37 (relacional -> expression MINOREQUAL expression .)
    GREATER         reduce using rule 37 (relacional -> expression MINOREQUAL expression .)
    GREATEREQUAL    reduce using rule 37 (relacional -> expression MINOREQUAL expression .)
    CONSOLE         reduce using rule 37 (relacional -> expression MINOREQUAL expression .)
    RVAR            reduce using rule 37 (relacional -> expression MINOREQUAL expression .)
    RCONST          reduce using rule 37 (relacional -> expression MINOREQUAL expression .)
    ID              reduce using rule 37 (relacional -> expression MINOREQUAL expression .)
    RIF             reduce using rule 37 (relacional -> expression MINOREQUAL expression .)
    $end            reduce using rule 37 (relacional -> expression MINOREQUAL expression .)
    LLAVEC          reduce using rule 37 (relacional -> expression MINOREQUAL expression .)
    PARC            reduce using rule 37 (relacional -> expression MINOREQUAL expression .)
    PLUS            shift and go to state 51
    BY              shift and go to state 52
    DIVIDED         shift and go to state 53
    LESS            shift and go to state 54
    MODUL           shift and go to state 55

  ! PLUS            [ reduce using rule 37 (relacional -> expression MINOREQUAL expression .) ]
  ! BY              [ reduce using rule 37 (relacional -> expression MINOREQUAL expression .) ]
  ! DIVIDED         [ reduce using rule 37 (relacional -> expression MINOREQUAL expression .) ]
  ! LESS            [ reduce using rule 37 (relacional -> expression MINOREQUAL expression .) ]
  ! MODUL           [ reduce using rule 37 (relacional -> expression MINOREQUAL expression .) ]
  ! DEQUAL          [ shift and go to state 56 ]
  ! DIFERENT        [ shift and go to state 57 ]
  ! MINOR           [ shift and go to state 58 ]
  ! MINOREQUAL      [ shift and go to state 59 ]
  ! GREATER         [ shift and go to state 60 ]
  ! GREATEREQUAL    [ shift and go to state 61 ]


state 82

    (38) relacional -> expression GREATER expression .
    (28) aritmetica -> expression . PLUS expression
    (29) aritmetica -> expression . BY expression
    (30) aritmetica -> expression . DIVIDED expression
    (31) aritmetica -> expression . LESS expression
    (32) aritmetica -> expression . MODUL expression
    (34) relacional -> expression . DEQUAL expression
    (35) relacional -> expression . DIFERENT expression
    (36) relacional -> expression . MINOR expression
    (37) relacional -> expression . MINOREQUAL expression
    (38) relacional -> expression . GREATER expression
    (39) relacional -> expression . GREATEREQUAL expression

    DEQUAL          reduce using rule 38 (relacional -> expression GREATER expression .)
    DIFERENT        reduce using rule 38 (relacional -> expression GREATER expression .)
    MINOR           reduce using rule 38 (relacional -> expression GREATER expression .)
    MINOREQUAL      reduce using rule 38 (relacional -> expression GREATER expression .)
    GREATER         reduce using rule 38 (relacional -> expression GREATER expression .)
    GREATEREQUAL    reduce using rule 38 (relacional -> expression GREATER expression .)
    CONSOLE         reduce using rule 38 (relacional -> expression GREATER expression .)
    RVAR            reduce using rule 38 (relacional -> expression GREATER expression .)
    RCONST          reduce using rule 38 (relacional -> expression GREATER expression .)
    ID              reduce using rule 38 (relacional -> expression GREATER expression .)
    RIF             reduce using rule 38 (relacional -> expression GREATER expression .)
    $end            reduce using rule 38 (relacional -> expression GREATER expression .)
    LLAVEC          reduce using rule 38 (relacional -> expression GREATER expression .)
    PARC            reduce using rule 38 (relacional -> expression GREATER expression .)
    PLUS            shift and go to state 51
    BY              shift and go to state 52
    DIVIDED         shift and go to state 53
    LESS            shift and go to state 54
    MODUL           shift and go to state 55

  ! PLUS            [ reduce using rule 38 (relacional -> expression GREATER expression .) ]
  ! BY              [ reduce using rule 38 (relacional -> expression GREATER expression .) ]
  ! DIVIDED         [ reduce using rule 38 (relacional -> expression GREATER expression .) ]
  ! LESS            [ reduce using rule 38 (relacional -> expression GREATER expression .) ]
  ! MODUL           [ reduce using rule 38 (relacional -> expression GREATER expression .) ]
  ! DEQUAL          [ shift and go to state 56 ]
  ! DIFERENT        [ shift and go to state 57 ]
  ! MINOR           [ shift and go to state 58 ]
  ! MINOREQUAL      [ shift and go to state 59 ]
  ! GREATER         [ shift and go to state 60 ]
  ! GREATEREQUAL    [ shift and go to state 61 ]


state 83

    (39) relacional -> expression GREATEREQUAL expression .
    (28) aritmetica -> expression . PLUS expression
    (29) aritmetica -> expression . BY expression
    (30) aritmetica -> expression . DIVIDED expression
    (31) aritmetica -> expression . LESS expression
    (32) aritmetica -> expression . MODUL expression
    (34) relacional -> expression . DEQUAL expression
    (35) relacional -> expression . DIFERENT expression
    (36) relacional -> expression . MINOR expression
    (37) relacional -> expression . MINOREQUAL expression
    (38) relacional -> expression . GREATER expression
    (39) relacional -> expression . GREATEREQUAL expression

    DEQUAL          reduce using rule 39 (relacional -> expression GREATEREQUAL expression .)
    DIFERENT        reduce using rule 39 (relacional -> expression GREATEREQUAL expression .)
    MINOR           reduce using rule 39 (relacional -> expression GREATEREQUAL expression .)
    MINOREQUAL      reduce using rule 39 (relacional -> expression GREATEREQUAL expression .)
    GREATER         reduce using rule 39 (relacional -> expression GREATEREQUAL expression .)
    GREATEREQUAL    reduce using rule 39 (relacional -> expression GREATEREQUAL expression .)
    CONSOLE         reduce using rule 39 (relacional -> expression GREATEREQUAL expression .)
    RVAR            reduce using rule 39 (relacional -> expression GREATEREQUAL expression .)
    RCONST          reduce using rule 39 (relacional -> expression GREATEREQUAL expression .)
    ID              reduce using rule 39 (relacional -> expression GREATEREQUAL expression .)
    RIF             reduce using rule 39 (relacional -> expression GREATEREQUAL expression .)
    $end            reduce using rule 39 (relacional -> expression GREATEREQUAL expression .)
    LLAVEC          reduce using rule 39 (relacional -> expression GREATEREQUAL expression .)
    PARC            reduce using rule 39 (relacional -> expression GREATEREQUAL expression .)
    PLUS            shift and go to state 51
    BY              shift and go to state 52
    DIVIDED         shift and go to state 53
    LESS            shift and go to state 54
    MODUL           shift and go to state 55

  ! PLUS            [ reduce using rule 39 (relacional -> expression GREATEREQUAL expression .) ]
  ! BY              [ reduce using rule 39 (relacional -> expression GREATEREQUAL expression .) ]
  ! DIVIDED         [ reduce using rule 39 (relacional -> expression GREATEREQUAL expression .) ]
  ! LESS            [ reduce using rule 39 (relacional -> expression GREATEREQUAL expression .) ]
  ! MODUL           [ reduce using rule 39 (relacional -> expression GREATEREQUAL expression .) ]
  ! DEQUAL          [ shift and go to state 56 ]
  ! DIFERENT        [ shift and go to state 57 ]
  ! MINOR           [ shift and go to state 58 ]
  ! MINOREQUAL      [ shift and go to state 59 ]
  ! GREATER         [ shift and go to state 60 ]
  ! GREATEREQUAL    [ shift and go to state 61 ]


state 84

    (40) logica -> boolean AND boolean .

    PLUS            reduce using rule 40 (logica -> boolean AND boolean .)
    BY              reduce using rule 40 (logica -> boolean AND boolean .)
    DIVIDED         reduce using rule 40 (logica -> boolean AND boolean .)
    LESS            reduce using rule 40 (logica -> boolean AND boolean .)
    MODUL           reduce using rule 40 (logica -> boolean AND boolean .)
    DEQUAL          reduce using rule 40 (logica -> boolean AND boolean .)
    DIFERENT        reduce using rule 40 (logica -> boolean AND boolean .)
    MINOR           reduce using rule 40 (logica -> boolean AND boolean .)
    MINOREQUAL      reduce using rule 40 (logica -> boolean AND boolean .)
    GREATER         reduce using rule 40 (logica -> boolean AND boolean .)
    GREATEREQUAL    reduce using rule 40 (logica -> boolean AND boolean .)
    CONSOLE         reduce using rule 40 (logica -> boolean AND boolean .)
    RVAR            reduce using rule 40 (logica -> boolean AND boolean .)
    RCONST          reduce using rule 40 (logica -> boolean AND boolean .)
    ID              reduce using rule 40 (logica -> boolean AND boolean .)
    RIF             reduce using rule 40 (logica -> boolean AND boolean .)
    $end            reduce using rule 40 (logica -> boolean AND boolean .)
    LLAVEC          reduce using rule 40 (logica -> boolean AND boolean .)
    PARC            reduce using rule 40 (logica -> boolean AND boolean .)


state 85

    (41) logica -> boolean OR boolean .

    PLUS            reduce using rule 41 (logica -> boolean OR boolean .)
    BY              reduce using rule 41 (logica -> boolean OR boolean .)
    DIVIDED         reduce using rule 41 (logica -> boolean OR boolean .)
    LESS            reduce using rule 41 (logica -> boolean OR boolean .)
    MODUL           reduce using rule 41 (logica -> boolean OR boolean .)
    DEQUAL          reduce using rule 41 (logica -> boolean OR boolean .)
    DIFERENT        reduce using rule 41 (logica -> boolean OR boolean .)
    MINOR           reduce using rule 41 (logica -> boolean OR boolean .)
    MINOREQUAL      reduce using rule 41 (logica -> boolean OR boolean .)
    GREATER         reduce using rule 41 (logica -> boolean OR boolean .)
    GREATEREQUAL    reduce using rule 41 (logica -> boolean OR boolean .)
    CONSOLE         reduce using rule 41 (logica -> boolean OR boolean .)
    RVAR            reduce using rule 41 (logica -> boolean OR boolean .)
    RCONST          reduce using rule 41 (logica -> boolean OR boolean .)
    ID              reduce using rule 41 (logica -> boolean OR boolean .)
    RIF             reduce using rule 41 (logica -> boolean OR boolean .)
    $end            reduce using rule 41 (logica -> boolean OR boolean .)
    LLAVEC          reduce using rule 41 (logica -> boolean OR boolean .)
    PARC            reduce using rule 41 (logica -> boolean OR boolean .)


state 86

    (13) declareConst -> RCONST ID DOUBLEDOT type EQUAL . expression
    (23) expression -> . primitivo
    (24) expression -> . aritmetica
    (25) expression -> . relacional
    (26) expression -> . logica
    (27) expression -> . ID
    (43) primitivo -> . NUMBER
    (44) primitivo -> . FLOAT
    (45) primitivo -> . STRING
    (46) primitivo -> . boolean
    (28) aritmetica -> . expression PLUS expression
    (29) aritmetica -> . expression BY expression
    (30) aritmetica -> . expression DIVIDED expression
    (31) aritmetica -> . expression LESS expression
    (32) aritmetica -> . expression MODUL expression
    (33) aritmetica -> . LESS expression
    (34) relacional -> . expression DEQUAL expression
    (35) relacional -> . expression DIFERENT expression
    (36) relacional -> . expression MINOR expression
    (37) relacional -> . expression MINOREQUAL expression
    (38) relacional -> . expression GREATER expression
    (39) relacional -> . expression GREATEREQUAL expression
    (40) logica -> . boolean AND boolean
    (41) logica -> . boolean OR boolean
    (42) logica -> . NOT boolean
    (47) boolean -> . TRUE
    (48) boolean -> . FALSE

    ID              shift and go to state 25
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LESS            shift and go to state 35
    NOT             shift and go to state 36
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    expression                     shift and go to state 90
    primitivo                      shift and go to state 27
    aritmetica                     shift and go to state 28
    relacional                     shift and go to state 29
    logica                         shift and go to state 30
    boolean                        shift and go to state 34

state 87

    (19) if_else -> RIF PARA expression PARC LLAVEA . instrucciones LLAVEC else
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declare
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . if_else
    (9) print -> . CONSOLE DOT LOG PARA expression PARC
    (10) declare -> . RVAR ID DOUBLEDOT type EQUAL expression
    (11) declare -> . RVAR ID EQUAL expression
    (12) declare -> . RVAR ID DOUBLEDOT type
    (13) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (14) declareConst -> . RCONST ID EQUAL expression
    (15) declareConst -> . RCONST ID DOUBLEDOT type
    (16) assignVar -> . ID EQUAL expression
    (17) assignVar -> . ID PLUS EQUAL expression
    (18) assignVar -> . ID LESS EQUAL expression
    (19) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else

    CONSOLE         shift and go to state 9
    RVAR            shift and go to state 10
    RCONST          shift and go to state 12
    ID              shift and go to state 11
    RIF             shift and go to state 13

    instrucciones                  shift and go to state 91
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declare                        shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    if_else                        shift and go to state 8

state 88

    (9) print -> CONSOLE DOT LOG PARA expression PARC .

    CONSOLE         reduce using rule 9 (print -> CONSOLE DOT LOG PARA expression PARC .)
    RVAR            reduce using rule 9 (print -> CONSOLE DOT LOG PARA expression PARC .)
    RCONST          reduce using rule 9 (print -> CONSOLE DOT LOG PARA expression PARC .)
    ID              reduce using rule 9 (print -> CONSOLE DOT LOG PARA expression PARC .)
    RIF             reduce using rule 9 (print -> CONSOLE DOT LOG PARA expression PARC .)
    $end            reduce using rule 9 (print -> CONSOLE DOT LOG PARA expression PARC .)
    LLAVEC          reduce using rule 9 (print -> CONSOLE DOT LOG PARA expression PARC .)


state 89

    (10) declare -> RVAR ID DOUBLEDOT type EQUAL expression .
    (28) aritmetica -> expression . PLUS expression
    (29) aritmetica -> expression . BY expression
    (30) aritmetica -> expression . DIVIDED expression
    (31) aritmetica -> expression . LESS expression
    (32) aritmetica -> expression . MODUL expression
    (34) relacional -> expression . DEQUAL expression
    (35) relacional -> expression . DIFERENT expression
    (36) relacional -> expression . MINOR expression
    (37) relacional -> expression . MINOREQUAL expression
    (38) relacional -> expression . GREATER expression
    (39) relacional -> expression . GREATEREQUAL expression

    CONSOLE         reduce using rule 10 (declare -> RVAR ID DOUBLEDOT type EQUAL expression .)
    RVAR            reduce using rule 10 (declare -> RVAR ID DOUBLEDOT type EQUAL expression .)
    RCONST          reduce using rule 10 (declare -> RVAR ID DOUBLEDOT type EQUAL expression .)
    ID              reduce using rule 10 (declare -> RVAR ID DOUBLEDOT type EQUAL expression .)
    RIF             reduce using rule 10 (declare -> RVAR ID DOUBLEDOT type EQUAL expression .)
    $end            reduce using rule 10 (declare -> RVAR ID DOUBLEDOT type EQUAL expression .)
    LLAVEC          reduce using rule 10 (declare -> RVAR ID DOUBLEDOT type EQUAL expression .)
    PLUS            shift and go to state 51
    BY              shift and go to state 52
    DIVIDED         shift and go to state 53
    LESS            shift and go to state 54
    MODUL           shift and go to state 55
    DEQUAL          shift and go to state 56
    DIFERENT        shift and go to state 57
    MINOR           shift and go to state 58
    MINOREQUAL      shift and go to state 59
    GREATER         shift and go to state 60
    GREATEREQUAL    shift and go to state 61


state 90

    (13) declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .
    (28) aritmetica -> expression . PLUS expression
    (29) aritmetica -> expression . BY expression
    (30) aritmetica -> expression . DIVIDED expression
    (31) aritmetica -> expression . LESS expression
    (32) aritmetica -> expression . MODUL expression
    (34) relacional -> expression . DEQUAL expression
    (35) relacional -> expression . DIFERENT expression
    (36) relacional -> expression . MINOR expression
    (37) relacional -> expression . MINOREQUAL expression
    (38) relacional -> expression . GREATER expression
    (39) relacional -> expression . GREATEREQUAL expression

    CONSOLE         reduce using rule 13 (declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .)
    RVAR            reduce using rule 13 (declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .)
    RCONST          reduce using rule 13 (declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .)
    ID              reduce using rule 13 (declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .)
    RIF             reduce using rule 13 (declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .)
    $end            reduce using rule 13 (declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .)
    LLAVEC          reduce using rule 13 (declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .)
    PLUS            shift and go to state 51
    BY              shift and go to state 52
    DIVIDED         shift and go to state 53
    LESS            shift and go to state 54
    MODUL           shift and go to state 55
    DEQUAL          shift and go to state 56
    DIFERENT        shift and go to state 57
    MINOR           shift and go to state 58
    MINOREQUAL      shift and go to state 59
    GREATER         shift and go to state 60
    GREATEREQUAL    shift and go to state 61


state 91

    (19) if_else -> RIF PARA expression PARC LLAVEA instrucciones . LLAVEC else
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declare
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . if_else
    (9) print -> . CONSOLE DOT LOG PARA expression PARC
    (10) declare -> . RVAR ID DOUBLEDOT type EQUAL expression
    (11) declare -> . RVAR ID EQUAL expression
    (12) declare -> . RVAR ID DOUBLEDOT type
    (13) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (14) declareConst -> . RCONST ID EQUAL expression
    (15) declareConst -> . RCONST ID DOUBLEDOT type
    (16) assignVar -> . ID EQUAL expression
    (17) assignVar -> . ID PLUS EQUAL expression
    (18) assignVar -> . ID LESS EQUAL expression
    (19) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else

    LLAVEC          shift and go to state 92
    CONSOLE         shift and go to state 9
    RVAR            shift and go to state 10
    RCONST          shift and go to state 12
    ID              shift and go to state 11
    RIF             shift and go to state 13

    instruccion                    shift and go to state 14
    print                          shift and go to state 4
    declare                        shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    if_else                        shift and go to state 8

state 92

    (19) if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC . else
    (20) else -> . RELSE LLAVEA instrucciones LLAVEC
    (21) else -> . RELSE if_else
    (22) else -> .

    RELSE           shift and go to state 94
    CONSOLE         reduce using rule 22 (else -> .)
    RVAR            reduce using rule 22 (else -> .)
    RCONST          reduce using rule 22 (else -> .)
    ID              reduce using rule 22 (else -> .)
    RIF             reduce using rule 22 (else -> .)
    $end            reduce using rule 22 (else -> .)
    LLAVEC          reduce using rule 22 (else -> .)

    else                           shift and go to state 93

state 93

    (19) if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .

    CONSOLE         reduce using rule 19 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RVAR            reduce using rule 19 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RCONST          reduce using rule 19 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    ID              reduce using rule 19 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RIF             reduce using rule 19 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    $end            reduce using rule 19 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    LLAVEC          reduce using rule 19 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)


state 94

    (20) else -> RELSE . LLAVEA instrucciones LLAVEC
    (21) else -> RELSE . if_else
    (19) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else

    LLAVEA          shift and go to state 95
    RIF             shift and go to state 13

    if_else                        shift and go to state 96

state 95

    (20) else -> RELSE LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declare
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . if_else
    (9) print -> . CONSOLE DOT LOG PARA expression PARC
    (10) declare -> . RVAR ID DOUBLEDOT type EQUAL expression
    (11) declare -> . RVAR ID EQUAL expression
    (12) declare -> . RVAR ID DOUBLEDOT type
    (13) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (14) declareConst -> . RCONST ID EQUAL expression
    (15) declareConst -> . RCONST ID DOUBLEDOT type
    (16) assignVar -> . ID EQUAL expression
    (17) assignVar -> . ID PLUS EQUAL expression
    (18) assignVar -> . ID LESS EQUAL expression
    (19) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else

    CONSOLE         shift and go to state 9
    RVAR            shift and go to state 10
    RCONST          shift and go to state 12
    ID              shift and go to state 11
    RIF             shift and go to state 13

    instrucciones                  shift and go to state 97
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declare                        shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    if_else                        shift and go to state 8

state 96

    (21) else -> RELSE if_else .

    CONSOLE         reduce using rule 21 (else -> RELSE if_else .)
    RVAR            reduce using rule 21 (else -> RELSE if_else .)
    RCONST          reduce using rule 21 (else -> RELSE if_else .)
    ID              reduce using rule 21 (else -> RELSE if_else .)
    RIF             reduce using rule 21 (else -> RELSE if_else .)
    $end            reduce using rule 21 (else -> RELSE if_else .)
    LLAVEC          reduce using rule 21 (else -> RELSE if_else .)


state 97

    (20) else -> RELSE LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declare
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . if_else
    (9) print -> . CONSOLE DOT LOG PARA expression PARC
    (10) declare -> . RVAR ID DOUBLEDOT type EQUAL expression
    (11) declare -> . RVAR ID EQUAL expression
    (12) declare -> . RVAR ID DOUBLEDOT type
    (13) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (14) declareConst -> . RCONST ID EQUAL expression
    (15) declareConst -> . RCONST ID DOUBLEDOT type
    (16) assignVar -> . ID EQUAL expression
    (17) assignVar -> . ID PLUS EQUAL expression
    (18) assignVar -> . ID LESS EQUAL expression
    (19) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else

    LLAVEC          shift and go to state 98
    CONSOLE         shift and go to state 9
    RVAR            shift and go to state 10
    RCONST          shift and go to state 12
    ID              shift and go to state 11
    RIF             shift and go to state 13

    instruccion                    shift and go to state 14
    print                          shift and go to state 4
    declare                        shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    if_else                        shift and go to state 8

state 98

    (20) else -> RELSE LLAVEA instrucciones LLAVEC .

    CONSOLE         reduce using rule 20 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RVAR            reduce using rule 20 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RCONST          reduce using rule 20 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    ID              reduce using rule 20 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RIF             reduce using rule 20 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    $end            reduce using rule 20 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    LLAVEC          reduce using rule 20 (else -> RELSE LLAVEA instrucciones LLAVEC .)

