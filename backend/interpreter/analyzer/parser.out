Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> print
Rule 5     instruccion -> declare
Rule 6     instruccion -> declareConst
Rule 7     instruccion -> assignVar
Rule 8     print -> CONSOLE DOT LOG PARA expression PARC
Rule 9     declare -> RVAR ID DOUBLEDOT type EQUAL expression
Rule 10    declare -> RVAR ID EQUAL expression
Rule 11    declare -> RVAR ID DOUBLEDOT type
Rule 12    declareConst -> RCONST ID DOUBLEDOT type EQUAL expression
Rule 13    declareConst -> RCONST ID EQUAL expression
Rule 14    declareConst -> RCONST ID DOUBLEDOT type
Rule 15    assignVar -> ID EQUAL expression
Rule 16    assignVar -> ID PLUS EQUAL expression
Rule 17    assignVar -> ID LESS EQUAL expression
Rule 18    expression -> primitivo
Rule 19    expression -> aritmetica
Rule 20    expression -> relacional
Rule 21    expression -> logica
Rule 22    expression -> ID
Rule 23    aritmetica -> expression PLUS expression
Rule 24    aritmetica -> expression BY expression
Rule 25    aritmetica -> expression DIVIDED expression
Rule 26    aritmetica -> expression LESS expression
Rule 27    aritmetica -> expression MODUL expression
Rule 28    aritmetica -> LESS expression
Rule 29    relacional -> expression DEQUAL expression
Rule 30    relacional -> expression DIFERENT expression
Rule 31    relacional -> expression MINOR expression
Rule 32    relacional -> expression MINOREQUAL expression
Rule 33    relacional -> expression GREATER expression
Rule 34    relacional -> expression GREATEREQUAL expression
Rule 35    logica -> boolean AND boolean
Rule 36    logica -> boolean OR boolean
Rule 37    logica -> NOT boolean
Rule 38    primitivo -> NUMBER
Rule 39    primitivo -> FLOAT
Rule 40    primitivo -> STRING
Rule 41    primitivo -> boolean
Rule 42    boolean -> TRUE
Rule 43    boolean -> FALSE
Rule 44    type -> RNUMBER
Rule 45    type -> RFLOAT
Rule 46    type -> RSTRING
Rule 47    type -> RBOOLEAN

Terminals, with rules where they appear

AND                  : 35
BY                   : 24
CONSOLE              : 8
DEQUAL               : 29
DIFERENT             : 30
DIVIDED              : 25
DOT                  : 8
DOUBLEDOT            : 9 11 12 14
EQUAL                : 9 10 12 13 15 16 17
FALSE                : 43
FLOAT                : 39
GREATER              : 33
GREATEREQUAL         : 34
ID                   : 9 10 11 12 13 14 15 16 17 22
LESS                 : 17 26 28
LOG                  : 8
MINOR                : 31
MINOREQUAL           : 32
MODUL                : 27
NOT                  : 37
NUMBER               : 38
OR                   : 36
PARA                 : 8
PARC                 : 8
PLUS                 : 16 23
RBOOLEAN             : 47
RCONST               : 12 13 14
RFLOAT               : 45
RNUMBER              : 44
RSTRING              : 46
RVAR                 : 9 10 11
STRING               : 40
TRUE                 : 42
error                : 

Nonterminals, with rules where they appear

aritmetica           : 19
assignVar            : 7
boolean              : 35 35 36 36 37 41
declare              : 5
declareConst         : 6
expression           : 8 9 10 12 13 15 16 17 23 23 24 24 25 25 26 26 27 27 28 29 29 30 30 31 31 32 32 33 33 34 34
instruccion          : 2 3
instrucciones        : 1 2
logica               : 21
primitivo            : 18
print                : 4
relacional           : 20
start                : 0
type                 : 9 11 12 14

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declare
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) print -> . CONSOLE DOT LOG PARA expression PARC
    (9) declare -> . RVAR ID DOUBLEDOT type EQUAL expression
    (10) declare -> . RVAR ID EQUAL expression
    (11) declare -> . RVAR ID DOUBLEDOT type
    (12) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (13) declareConst -> . RCONST ID EQUAL expression
    (14) declareConst -> . RCONST ID DOUBLEDOT type
    (15) assignVar -> . ID EQUAL expression
    (16) assignVar -> . ID PLUS EQUAL expression
    (17) assignVar -> . ID LESS EQUAL expression

    CONSOLE         shift and go to state 8
    RVAR            shift and go to state 9
    RCONST          shift and go to state 11
    ID              shift and go to state 10

    start                          shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declare                        shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7

state 1

    (0) S' -> start .



state 2

    (1) start -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declare
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) print -> . CONSOLE DOT LOG PARA expression PARC
    (9) declare -> . RVAR ID DOUBLEDOT type EQUAL expression
    (10) declare -> . RVAR ID EQUAL expression
    (11) declare -> . RVAR ID DOUBLEDOT type
    (12) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (13) declareConst -> . RCONST ID EQUAL expression
    (14) declareConst -> . RCONST ID DOUBLEDOT type
    (15) assignVar -> . ID EQUAL expression
    (16) assignVar -> . ID PLUS EQUAL expression
    (17) assignVar -> . ID LESS EQUAL expression

    $end            reduce using rule 1 (start -> instrucciones .)
    CONSOLE         shift and go to state 8
    RVAR            shift and go to state 9
    RCONST          shift and go to state 11
    ID              shift and go to state 10

    instruccion                    shift and go to state 12
    print                          shift and go to state 4
    declare                        shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7

state 3

    (3) instrucciones -> instruccion .

    CONSOLE         reduce using rule 3 (instrucciones -> instruccion .)
    RVAR            reduce using rule 3 (instrucciones -> instruccion .)
    RCONST          reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> print .

    CONSOLE         reduce using rule 4 (instruccion -> print .)
    RVAR            reduce using rule 4 (instruccion -> print .)
    RCONST          reduce using rule 4 (instruccion -> print .)
    ID              reduce using rule 4 (instruccion -> print .)
    $end            reduce using rule 4 (instruccion -> print .)


state 5

    (5) instruccion -> declare .

    CONSOLE         reduce using rule 5 (instruccion -> declare .)
    RVAR            reduce using rule 5 (instruccion -> declare .)
    RCONST          reduce using rule 5 (instruccion -> declare .)
    ID              reduce using rule 5 (instruccion -> declare .)
    $end            reduce using rule 5 (instruccion -> declare .)


state 6

    (6) instruccion -> declareConst .

    CONSOLE         reduce using rule 6 (instruccion -> declareConst .)
    RVAR            reduce using rule 6 (instruccion -> declareConst .)
    RCONST          reduce using rule 6 (instruccion -> declareConst .)
    ID              reduce using rule 6 (instruccion -> declareConst .)
    $end            reduce using rule 6 (instruccion -> declareConst .)


state 7

    (7) instruccion -> assignVar .

    CONSOLE         reduce using rule 7 (instruccion -> assignVar .)
    RVAR            reduce using rule 7 (instruccion -> assignVar .)
    RCONST          reduce using rule 7 (instruccion -> assignVar .)
    ID              reduce using rule 7 (instruccion -> assignVar .)
    $end            reduce using rule 7 (instruccion -> assignVar .)


state 8

    (8) print -> CONSOLE . DOT LOG PARA expression PARC

    DOT             shift and go to state 13


state 9

    (9) declare -> RVAR . ID DOUBLEDOT type EQUAL expression
    (10) declare -> RVAR . ID EQUAL expression
    (11) declare -> RVAR . ID DOUBLEDOT type

    ID              shift and go to state 14


state 10

    (15) assignVar -> ID . EQUAL expression
    (16) assignVar -> ID . PLUS EQUAL expression
    (17) assignVar -> ID . LESS EQUAL expression

    EQUAL           shift and go to state 15
    PLUS            shift and go to state 16
    LESS            shift and go to state 17


state 11

    (12) declareConst -> RCONST . ID DOUBLEDOT type EQUAL expression
    (13) declareConst -> RCONST . ID EQUAL expression
    (14) declareConst -> RCONST . ID DOUBLEDOT type

    ID              shift and go to state 18


state 12

    (2) instrucciones -> instrucciones instruccion .

    CONSOLE         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RVAR            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RCONST          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 13

    (8) print -> CONSOLE DOT . LOG PARA expression PARC

    LOG             shift and go to state 19


state 14

    (9) declare -> RVAR ID . DOUBLEDOT type EQUAL expression
    (10) declare -> RVAR ID . EQUAL expression
    (11) declare -> RVAR ID . DOUBLEDOT type

    DOUBLEDOT       shift and go to state 20
    EQUAL           shift and go to state 21


state 15

    (15) assignVar -> ID EQUAL . expression
    (18) expression -> . primitivo
    (19) expression -> . aritmetica
    (20) expression -> . relacional
    (21) expression -> . logica
    (22) expression -> . ID
    (38) primitivo -> . NUMBER
    (39) primitivo -> . FLOAT
    (40) primitivo -> . STRING
    (41) primitivo -> . boolean
    (23) aritmetica -> . expression PLUS expression
    (24) aritmetica -> . expression BY expression
    (25) aritmetica -> . expression DIVIDED expression
    (26) aritmetica -> . expression LESS expression
    (27) aritmetica -> . expression MODUL expression
    (28) aritmetica -> . LESS expression
    (29) relacional -> . expression DEQUAL expression
    (30) relacional -> . expression DIFERENT expression
    (31) relacional -> . expression MINOR expression
    (32) relacional -> . expression MINOREQUAL expression
    (33) relacional -> . expression GREATER expression
    (34) relacional -> . expression GREATEREQUAL expression
    (35) logica -> . boolean AND boolean
    (36) logica -> . boolean OR boolean
    (37) logica -> . NOT boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ID              shift and go to state 22
    NUMBER          shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    LESS            shift and go to state 32
    NOT             shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 23
    primitivo                      shift and go to state 24
    aritmetica                     shift and go to state 25
    relacional                     shift and go to state 26
    logica                         shift and go to state 27
    boolean                        shift and go to state 31

state 16

    (16) assignVar -> ID PLUS . EQUAL expression

    EQUAL           shift and go to state 36


state 17

    (17) assignVar -> ID LESS . EQUAL expression

    EQUAL           shift and go to state 37


state 18

    (12) declareConst -> RCONST ID . DOUBLEDOT type EQUAL expression
    (13) declareConst -> RCONST ID . EQUAL expression
    (14) declareConst -> RCONST ID . DOUBLEDOT type

    DOUBLEDOT       shift and go to state 38
    EQUAL           shift and go to state 39


state 19

    (8) print -> CONSOLE DOT LOG . PARA expression PARC

    PARA            shift and go to state 40


state 20

    (9) declare -> RVAR ID DOUBLEDOT . type EQUAL expression
    (11) declare -> RVAR ID DOUBLEDOT . type
    (44) type -> . RNUMBER
    (45) type -> . RFLOAT
    (46) type -> . RSTRING
    (47) type -> . RBOOLEAN

    RNUMBER         shift and go to state 42
    RFLOAT          shift and go to state 43
    RSTRING         shift and go to state 44
    RBOOLEAN        shift and go to state 45

    type                           shift and go to state 41

state 21

    (10) declare -> RVAR ID EQUAL . expression
    (18) expression -> . primitivo
    (19) expression -> . aritmetica
    (20) expression -> . relacional
    (21) expression -> . logica
    (22) expression -> . ID
    (38) primitivo -> . NUMBER
    (39) primitivo -> . FLOAT
    (40) primitivo -> . STRING
    (41) primitivo -> . boolean
    (23) aritmetica -> . expression PLUS expression
    (24) aritmetica -> . expression BY expression
    (25) aritmetica -> . expression DIVIDED expression
    (26) aritmetica -> . expression LESS expression
    (27) aritmetica -> . expression MODUL expression
    (28) aritmetica -> . LESS expression
    (29) relacional -> . expression DEQUAL expression
    (30) relacional -> . expression DIFERENT expression
    (31) relacional -> . expression MINOR expression
    (32) relacional -> . expression MINOREQUAL expression
    (33) relacional -> . expression GREATER expression
    (34) relacional -> . expression GREATEREQUAL expression
    (35) logica -> . boolean AND boolean
    (36) logica -> . boolean OR boolean
    (37) logica -> . NOT boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ID              shift and go to state 22
    NUMBER          shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    LESS            shift and go to state 32
    NOT             shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 46
    primitivo                      shift and go to state 24
    aritmetica                     shift and go to state 25
    relacional                     shift and go to state 26
    logica                         shift and go to state 27
    boolean                        shift and go to state 31

state 22

    (22) expression -> ID .

    PLUS            reduce using rule 22 (expression -> ID .)
    BY              reduce using rule 22 (expression -> ID .)
    DIVIDED         reduce using rule 22 (expression -> ID .)
    LESS            reduce using rule 22 (expression -> ID .)
    MODUL           reduce using rule 22 (expression -> ID .)
    DEQUAL          reduce using rule 22 (expression -> ID .)
    DIFERENT        reduce using rule 22 (expression -> ID .)
    MINOR           reduce using rule 22 (expression -> ID .)
    MINOREQUAL      reduce using rule 22 (expression -> ID .)
    GREATER         reduce using rule 22 (expression -> ID .)
    GREATEREQUAL    reduce using rule 22 (expression -> ID .)
    CONSOLE         reduce using rule 22 (expression -> ID .)
    RVAR            reduce using rule 22 (expression -> ID .)
    RCONST          reduce using rule 22 (expression -> ID .)
    ID              reduce using rule 22 (expression -> ID .)
    $end            reduce using rule 22 (expression -> ID .)
    PARC            reduce using rule 22 (expression -> ID .)


state 23

    (15) assignVar -> ID EQUAL expression .
    (23) aritmetica -> expression . PLUS expression
    (24) aritmetica -> expression . BY expression
    (25) aritmetica -> expression . DIVIDED expression
    (26) aritmetica -> expression . LESS expression
    (27) aritmetica -> expression . MODUL expression
    (29) relacional -> expression . DEQUAL expression
    (30) relacional -> expression . DIFERENT expression
    (31) relacional -> expression . MINOR expression
    (32) relacional -> expression . MINOREQUAL expression
    (33) relacional -> expression . GREATER expression
    (34) relacional -> expression . GREATEREQUAL expression

    CONSOLE         reduce using rule 15 (assignVar -> ID EQUAL expression .)
    RVAR            reduce using rule 15 (assignVar -> ID EQUAL expression .)
    RCONST          reduce using rule 15 (assignVar -> ID EQUAL expression .)
    ID              reduce using rule 15 (assignVar -> ID EQUAL expression .)
    $end            reduce using rule 15 (assignVar -> ID EQUAL expression .)
    PLUS            shift and go to state 47
    BY              shift and go to state 48
    DIVIDED         shift and go to state 49
    LESS            shift and go to state 50
    MODUL           shift and go to state 51
    DEQUAL          shift and go to state 52
    DIFERENT        shift and go to state 53
    MINOR           shift and go to state 54
    MINOREQUAL      shift and go to state 55
    GREATER         shift and go to state 56
    GREATEREQUAL    shift and go to state 57


state 24

    (18) expression -> primitivo .

    PLUS            reduce using rule 18 (expression -> primitivo .)
    BY              reduce using rule 18 (expression -> primitivo .)
    DIVIDED         reduce using rule 18 (expression -> primitivo .)
    LESS            reduce using rule 18 (expression -> primitivo .)
    MODUL           reduce using rule 18 (expression -> primitivo .)
    DEQUAL          reduce using rule 18 (expression -> primitivo .)
    DIFERENT        reduce using rule 18 (expression -> primitivo .)
    MINOR           reduce using rule 18 (expression -> primitivo .)
    MINOREQUAL      reduce using rule 18 (expression -> primitivo .)
    GREATER         reduce using rule 18 (expression -> primitivo .)
    GREATEREQUAL    reduce using rule 18 (expression -> primitivo .)
    CONSOLE         reduce using rule 18 (expression -> primitivo .)
    RVAR            reduce using rule 18 (expression -> primitivo .)
    RCONST          reduce using rule 18 (expression -> primitivo .)
    ID              reduce using rule 18 (expression -> primitivo .)
    $end            reduce using rule 18 (expression -> primitivo .)
    PARC            reduce using rule 18 (expression -> primitivo .)


state 25

    (19) expression -> aritmetica .

    PLUS            reduce using rule 19 (expression -> aritmetica .)
    BY              reduce using rule 19 (expression -> aritmetica .)
    DIVIDED         reduce using rule 19 (expression -> aritmetica .)
    LESS            reduce using rule 19 (expression -> aritmetica .)
    MODUL           reduce using rule 19 (expression -> aritmetica .)
    DEQUAL          reduce using rule 19 (expression -> aritmetica .)
    DIFERENT        reduce using rule 19 (expression -> aritmetica .)
    MINOR           reduce using rule 19 (expression -> aritmetica .)
    MINOREQUAL      reduce using rule 19 (expression -> aritmetica .)
    GREATER         reduce using rule 19 (expression -> aritmetica .)
    GREATEREQUAL    reduce using rule 19 (expression -> aritmetica .)
    CONSOLE         reduce using rule 19 (expression -> aritmetica .)
    RVAR            reduce using rule 19 (expression -> aritmetica .)
    RCONST          reduce using rule 19 (expression -> aritmetica .)
    ID              reduce using rule 19 (expression -> aritmetica .)
    $end            reduce using rule 19 (expression -> aritmetica .)
    PARC            reduce using rule 19 (expression -> aritmetica .)


state 26

    (20) expression -> relacional .

    PLUS            reduce using rule 20 (expression -> relacional .)
    BY              reduce using rule 20 (expression -> relacional .)
    DIVIDED         reduce using rule 20 (expression -> relacional .)
    LESS            reduce using rule 20 (expression -> relacional .)
    MODUL           reduce using rule 20 (expression -> relacional .)
    DEQUAL          reduce using rule 20 (expression -> relacional .)
    DIFERENT        reduce using rule 20 (expression -> relacional .)
    MINOR           reduce using rule 20 (expression -> relacional .)
    MINOREQUAL      reduce using rule 20 (expression -> relacional .)
    GREATER         reduce using rule 20 (expression -> relacional .)
    GREATEREQUAL    reduce using rule 20 (expression -> relacional .)
    CONSOLE         reduce using rule 20 (expression -> relacional .)
    RVAR            reduce using rule 20 (expression -> relacional .)
    RCONST          reduce using rule 20 (expression -> relacional .)
    ID              reduce using rule 20 (expression -> relacional .)
    $end            reduce using rule 20 (expression -> relacional .)
    PARC            reduce using rule 20 (expression -> relacional .)


state 27

    (21) expression -> logica .

    PLUS            reduce using rule 21 (expression -> logica .)
    BY              reduce using rule 21 (expression -> logica .)
    DIVIDED         reduce using rule 21 (expression -> logica .)
    LESS            reduce using rule 21 (expression -> logica .)
    MODUL           reduce using rule 21 (expression -> logica .)
    DEQUAL          reduce using rule 21 (expression -> logica .)
    DIFERENT        reduce using rule 21 (expression -> logica .)
    MINOR           reduce using rule 21 (expression -> logica .)
    MINOREQUAL      reduce using rule 21 (expression -> logica .)
    GREATER         reduce using rule 21 (expression -> logica .)
    GREATEREQUAL    reduce using rule 21 (expression -> logica .)
    CONSOLE         reduce using rule 21 (expression -> logica .)
    RVAR            reduce using rule 21 (expression -> logica .)
    RCONST          reduce using rule 21 (expression -> logica .)
    ID              reduce using rule 21 (expression -> logica .)
    $end            reduce using rule 21 (expression -> logica .)
    PARC            reduce using rule 21 (expression -> logica .)


state 28

    (38) primitivo -> NUMBER .

    PLUS            reduce using rule 38 (primitivo -> NUMBER .)
    BY              reduce using rule 38 (primitivo -> NUMBER .)
    DIVIDED         reduce using rule 38 (primitivo -> NUMBER .)
    LESS            reduce using rule 38 (primitivo -> NUMBER .)
    MODUL           reduce using rule 38 (primitivo -> NUMBER .)
    DEQUAL          reduce using rule 38 (primitivo -> NUMBER .)
    DIFERENT        reduce using rule 38 (primitivo -> NUMBER .)
    MINOR           reduce using rule 38 (primitivo -> NUMBER .)
    MINOREQUAL      reduce using rule 38 (primitivo -> NUMBER .)
    GREATER         reduce using rule 38 (primitivo -> NUMBER .)
    GREATEREQUAL    reduce using rule 38 (primitivo -> NUMBER .)
    CONSOLE         reduce using rule 38 (primitivo -> NUMBER .)
    RVAR            reduce using rule 38 (primitivo -> NUMBER .)
    RCONST          reduce using rule 38 (primitivo -> NUMBER .)
    ID              reduce using rule 38 (primitivo -> NUMBER .)
    $end            reduce using rule 38 (primitivo -> NUMBER .)
    PARC            reduce using rule 38 (primitivo -> NUMBER .)


state 29

    (39) primitivo -> FLOAT .

    PLUS            reduce using rule 39 (primitivo -> FLOAT .)
    BY              reduce using rule 39 (primitivo -> FLOAT .)
    DIVIDED         reduce using rule 39 (primitivo -> FLOAT .)
    LESS            reduce using rule 39 (primitivo -> FLOAT .)
    MODUL           reduce using rule 39 (primitivo -> FLOAT .)
    DEQUAL          reduce using rule 39 (primitivo -> FLOAT .)
    DIFERENT        reduce using rule 39 (primitivo -> FLOAT .)
    MINOR           reduce using rule 39 (primitivo -> FLOAT .)
    MINOREQUAL      reduce using rule 39 (primitivo -> FLOAT .)
    GREATER         reduce using rule 39 (primitivo -> FLOAT .)
    GREATEREQUAL    reduce using rule 39 (primitivo -> FLOAT .)
    CONSOLE         reduce using rule 39 (primitivo -> FLOAT .)
    RVAR            reduce using rule 39 (primitivo -> FLOAT .)
    RCONST          reduce using rule 39 (primitivo -> FLOAT .)
    ID              reduce using rule 39 (primitivo -> FLOAT .)
    $end            reduce using rule 39 (primitivo -> FLOAT .)
    PARC            reduce using rule 39 (primitivo -> FLOAT .)


state 30

    (40) primitivo -> STRING .

    PLUS            reduce using rule 40 (primitivo -> STRING .)
    BY              reduce using rule 40 (primitivo -> STRING .)
    DIVIDED         reduce using rule 40 (primitivo -> STRING .)
    LESS            reduce using rule 40 (primitivo -> STRING .)
    MODUL           reduce using rule 40 (primitivo -> STRING .)
    DEQUAL          reduce using rule 40 (primitivo -> STRING .)
    DIFERENT        reduce using rule 40 (primitivo -> STRING .)
    MINOR           reduce using rule 40 (primitivo -> STRING .)
    MINOREQUAL      reduce using rule 40 (primitivo -> STRING .)
    GREATER         reduce using rule 40 (primitivo -> STRING .)
    GREATEREQUAL    reduce using rule 40 (primitivo -> STRING .)
    CONSOLE         reduce using rule 40 (primitivo -> STRING .)
    RVAR            reduce using rule 40 (primitivo -> STRING .)
    RCONST          reduce using rule 40 (primitivo -> STRING .)
    ID              reduce using rule 40 (primitivo -> STRING .)
    $end            reduce using rule 40 (primitivo -> STRING .)
    PARC            reduce using rule 40 (primitivo -> STRING .)


state 31

    (41) primitivo -> boolean .
    (35) logica -> boolean . AND boolean
    (36) logica -> boolean . OR boolean

    PLUS            reduce using rule 41 (primitivo -> boolean .)
    BY              reduce using rule 41 (primitivo -> boolean .)
    DIVIDED         reduce using rule 41 (primitivo -> boolean .)
    LESS            reduce using rule 41 (primitivo -> boolean .)
    MODUL           reduce using rule 41 (primitivo -> boolean .)
    DEQUAL          reduce using rule 41 (primitivo -> boolean .)
    DIFERENT        reduce using rule 41 (primitivo -> boolean .)
    MINOR           reduce using rule 41 (primitivo -> boolean .)
    MINOREQUAL      reduce using rule 41 (primitivo -> boolean .)
    GREATER         reduce using rule 41 (primitivo -> boolean .)
    GREATEREQUAL    reduce using rule 41 (primitivo -> boolean .)
    CONSOLE         reduce using rule 41 (primitivo -> boolean .)
    RVAR            reduce using rule 41 (primitivo -> boolean .)
    RCONST          reduce using rule 41 (primitivo -> boolean .)
    ID              reduce using rule 41 (primitivo -> boolean .)
    $end            reduce using rule 41 (primitivo -> boolean .)
    PARC            reduce using rule 41 (primitivo -> boolean .)
    AND             shift and go to state 58
    OR              shift and go to state 59


state 32

    (28) aritmetica -> LESS . expression
    (18) expression -> . primitivo
    (19) expression -> . aritmetica
    (20) expression -> . relacional
    (21) expression -> . logica
    (22) expression -> . ID
    (38) primitivo -> . NUMBER
    (39) primitivo -> . FLOAT
    (40) primitivo -> . STRING
    (41) primitivo -> . boolean
    (23) aritmetica -> . expression PLUS expression
    (24) aritmetica -> . expression BY expression
    (25) aritmetica -> . expression DIVIDED expression
    (26) aritmetica -> . expression LESS expression
    (27) aritmetica -> . expression MODUL expression
    (28) aritmetica -> . LESS expression
    (29) relacional -> . expression DEQUAL expression
    (30) relacional -> . expression DIFERENT expression
    (31) relacional -> . expression MINOR expression
    (32) relacional -> . expression MINOREQUAL expression
    (33) relacional -> . expression GREATER expression
    (34) relacional -> . expression GREATEREQUAL expression
    (35) logica -> . boolean AND boolean
    (36) logica -> . boolean OR boolean
    (37) logica -> . NOT boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ID              shift and go to state 22
    NUMBER          shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    LESS            shift and go to state 32
    NOT             shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 60
    primitivo                      shift and go to state 24
    aritmetica                     shift and go to state 25
    relacional                     shift and go to state 26
    logica                         shift and go to state 27
    boolean                        shift and go to state 31

state 33

    (37) logica -> NOT . boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    boolean                        shift and go to state 61

state 34

    (42) boolean -> TRUE .

    AND             reduce using rule 42 (boolean -> TRUE .)
    OR              reduce using rule 42 (boolean -> TRUE .)
    PLUS            reduce using rule 42 (boolean -> TRUE .)
    BY              reduce using rule 42 (boolean -> TRUE .)
    DIVIDED         reduce using rule 42 (boolean -> TRUE .)
    LESS            reduce using rule 42 (boolean -> TRUE .)
    MODUL           reduce using rule 42 (boolean -> TRUE .)
    DEQUAL          reduce using rule 42 (boolean -> TRUE .)
    DIFERENT        reduce using rule 42 (boolean -> TRUE .)
    MINOR           reduce using rule 42 (boolean -> TRUE .)
    MINOREQUAL      reduce using rule 42 (boolean -> TRUE .)
    GREATER         reduce using rule 42 (boolean -> TRUE .)
    GREATEREQUAL    reduce using rule 42 (boolean -> TRUE .)
    CONSOLE         reduce using rule 42 (boolean -> TRUE .)
    RVAR            reduce using rule 42 (boolean -> TRUE .)
    RCONST          reduce using rule 42 (boolean -> TRUE .)
    ID              reduce using rule 42 (boolean -> TRUE .)
    $end            reduce using rule 42 (boolean -> TRUE .)
    PARC            reduce using rule 42 (boolean -> TRUE .)


state 35

    (43) boolean -> FALSE .

    AND             reduce using rule 43 (boolean -> FALSE .)
    OR              reduce using rule 43 (boolean -> FALSE .)
    PLUS            reduce using rule 43 (boolean -> FALSE .)
    BY              reduce using rule 43 (boolean -> FALSE .)
    DIVIDED         reduce using rule 43 (boolean -> FALSE .)
    LESS            reduce using rule 43 (boolean -> FALSE .)
    MODUL           reduce using rule 43 (boolean -> FALSE .)
    DEQUAL          reduce using rule 43 (boolean -> FALSE .)
    DIFERENT        reduce using rule 43 (boolean -> FALSE .)
    MINOR           reduce using rule 43 (boolean -> FALSE .)
    MINOREQUAL      reduce using rule 43 (boolean -> FALSE .)
    GREATER         reduce using rule 43 (boolean -> FALSE .)
    GREATEREQUAL    reduce using rule 43 (boolean -> FALSE .)
    CONSOLE         reduce using rule 43 (boolean -> FALSE .)
    RVAR            reduce using rule 43 (boolean -> FALSE .)
    RCONST          reduce using rule 43 (boolean -> FALSE .)
    ID              reduce using rule 43 (boolean -> FALSE .)
    $end            reduce using rule 43 (boolean -> FALSE .)
    PARC            reduce using rule 43 (boolean -> FALSE .)


state 36

    (16) assignVar -> ID PLUS EQUAL . expression
    (18) expression -> . primitivo
    (19) expression -> . aritmetica
    (20) expression -> . relacional
    (21) expression -> . logica
    (22) expression -> . ID
    (38) primitivo -> . NUMBER
    (39) primitivo -> . FLOAT
    (40) primitivo -> . STRING
    (41) primitivo -> . boolean
    (23) aritmetica -> . expression PLUS expression
    (24) aritmetica -> . expression BY expression
    (25) aritmetica -> . expression DIVIDED expression
    (26) aritmetica -> . expression LESS expression
    (27) aritmetica -> . expression MODUL expression
    (28) aritmetica -> . LESS expression
    (29) relacional -> . expression DEQUAL expression
    (30) relacional -> . expression DIFERENT expression
    (31) relacional -> . expression MINOR expression
    (32) relacional -> . expression MINOREQUAL expression
    (33) relacional -> . expression GREATER expression
    (34) relacional -> . expression GREATEREQUAL expression
    (35) logica -> . boolean AND boolean
    (36) logica -> . boolean OR boolean
    (37) logica -> . NOT boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ID              shift and go to state 22
    NUMBER          shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    LESS            shift and go to state 32
    NOT             shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 62
    primitivo                      shift and go to state 24
    aritmetica                     shift and go to state 25
    relacional                     shift and go to state 26
    logica                         shift and go to state 27
    boolean                        shift and go to state 31

state 37

    (17) assignVar -> ID LESS EQUAL . expression
    (18) expression -> . primitivo
    (19) expression -> . aritmetica
    (20) expression -> . relacional
    (21) expression -> . logica
    (22) expression -> . ID
    (38) primitivo -> . NUMBER
    (39) primitivo -> . FLOAT
    (40) primitivo -> . STRING
    (41) primitivo -> . boolean
    (23) aritmetica -> . expression PLUS expression
    (24) aritmetica -> . expression BY expression
    (25) aritmetica -> . expression DIVIDED expression
    (26) aritmetica -> . expression LESS expression
    (27) aritmetica -> . expression MODUL expression
    (28) aritmetica -> . LESS expression
    (29) relacional -> . expression DEQUAL expression
    (30) relacional -> . expression DIFERENT expression
    (31) relacional -> . expression MINOR expression
    (32) relacional -> . expression MINOREQUAL expression
    (33) relacional -> . expression GREATER expression
    (34) relacional -> . expression GREATEREQUAL expression
    (35) logica -> . boolean AND boolean
    (36) logica -> . boolean OR boolean
    (37) logica -> . NOT boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ID              shift and go to state 22
    NUMBER          shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    LESS            shift and go to state 32
    NOT             shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 63
    primitivo                      shift and go to state 24
    aritmetica                     shift and go to state 25
    relacional                     shift and go to state 26
    logica                         shift and go to state 27
    boolean                        shift and go to state 31

state 38

    (12) declareConst -> RCONST ID DOUBLEDOT . type EQUAL expression
    (14) declareConst -> RCONST ID DOUBLEDOT . type
    (44) type -> . RNUMBER
    (45) type -> . RFLOAT
    (46) type -> . RSTRING
    (47) type -> . RBOOLEAN

    RNUMBER         shift and go to state 42
    RFLOAT          shift and go to state 43
    RSTRING         shift and go to state 44
    RBOOLEAN        shift and go to state 45

    type                           shift and go to state 64

state 39

    (13) declareConst -> RCONST ID EQUAL . expression
    (18) expression -> . primitivo
    (19) expression -> . aritmetica
    (20) expression -> . relacional
    (21) expression -> . logica
    (22) expression -> . ID
    (38) primitivo -> . NUMBER
    (39) primitivo -> . FLOAT
    (40) primitivo -> . STRING
    (41) primitivo -> . boolean
    (23) aritmetica -> . expression PLUS expression
    (24) aritmetica -> . expression BY expression
    (25) aritmetica -> . expression DIVIDED expression
    (26) aritmetica -> . expression LESS expression
    (27) aritmetica -> . expression MODUL expression
    (28) aritmetica -> . LESS expression
    (29) relacional -> . expression DEQUAL expression
    (30) relacional -> . expression DIFERENT expression
    (31) relacional -> . expression MINOR expression
    (32) relacional -> . expression MINOREQUAL expression
    (33) relacional -> . expression GREATER expression
    (34) relacional -> . expression GREATEREQUAL expression
    (35) logica -> . boolean AND boolean
    (36) logica -> . boolean OR boolean
    (37) logica -> . NOT boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ID              shift and go to state 22
    NUMBER          shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    LESS            shift and go to state 32
    NOT             shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 65
    primitivo                      shift and go to state 24
    aritmetica                     shift and go to state 25
    relacional                     shift and go to state 26
    logica                         shift and go to state 27
    boolean                        shift and go to state 31

state 40

    (8) print -> CONSOLE DOT LOG PARA . expression PARC
    (18) expression -> . primitivo
    (19) expression -> . aritmetica
    (20) expression -> . relacional
    (21) expression -> . logica
    (22) expression -> . ID
    (38) primitivo -> . NUMBER
    (39) primitivo -> . FLOAT
    (40) primitivo -> . STRING
    (41) primitivo -> . boolean
    (23) aritmetica -> . expression PLUS expression
    (24) aritmetica -> . expression BY expression
    (25) aritmetica -> . expression DIVIDED expression
    (26) aritmetica -> . expression LESS expression
    (27) aritmetica -> . expression MODUL expression
    (28) aritmetica -> . LESS expression
    (29) relacional -> . expression DEQUAL expression
    (30) relacional -> . expression DIFERENT expression
    (31) relacional -> . expression MINOR expression
    (32) relacional -> . expression MINOREQUAL expression
    (33) relacional -> . expression GREATER expression
    (34) relacional -> . expression GREATEREQUAL expression
    (35) logica -> . boolean AND boolean
    (36) logica -> . boolean OR boolean
    (37) logica -> . NOT boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ID              shift and go to state 22
    NUMBER          shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    LESS            shift and go to state 32
    NOT             shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 66
    primitivo                      shift and go to state 24
    aritmetica                     shift and go to state 25
    relacional                     shift and go to state 26
    logica                         shift and go to state 27
    boolean                        shift and go to state 31

state 41

    (9) declare -> RVAR ID DOUBLEDOT type . EQUAL expression
    (11) declare -> RVAR ID DOUBLEDOT type .

    EQUAL           shift and go to state 67
    CONSOLE         reduce using rule 11 (declare -> RVAR ID DOUBLEDOT type .)
    RVAR            reduce using rule 11 (declare -> RVAR ID DOUBLEDOT type .)
    RCONST          reduce using rule 11 (declare -> RVAR ID DOUBLEDOT type .)
    ID              reduce using rule 11 (declare -> RVAR ID DOUBLEDOT type .)
    $end            reduce using rule 11 (declare -> RVAR ID DOUBLEDOT type .)


state 42

    (44) type -> RNUMBER .

    EQUAL           reduce using rule 44 (type -> RNUMBER .)
    CONSOLE         reduce using rule 44 (type -> RNUMBER .)
    RVAR            reduce using rule 44 (type -> RNUMBER .)
    RCONST          reduce using rule 44 (type -> RNUMBER .)
    ID              reduce using rule 44 (type -> RNUMBER .)
    $end            reduce using rule 44 (type -> RNUMBER .)


state 43

    (45) type -> RFLOAT .

    EQUAL           reduce using rule 45 (type -> RFLOAT .)
    CONSOLE         reduce using rule 45 (type -> RFLOAT .)
    RVAR            reduce using rule 45 (type -> RFLOAT .)
    RCONST          reduce using rule 45 (type -> RFLOAT .)
    ID              reduce using rule 45 (type -> RFLOAT .)
    $end            reduce using rule 45 (type -> RFLOAT .)


state 44

    (46) type -> RSTRING .

    EQUAL           reduce using rule 46 (type -> RSTRING .)
    CONSOLE         reduce using rule 46 (type -> RSTRING .)
    RVAR            reduce using rule 46 (type -> RSTRING .)
    RCONST          reduce using rule 46 (type -> RSTRING .)
    ID              reduce using rule 46 (type -> RSTRING .)
    $end            reduce using rule 46 (type -> RSTRING .)


state 45

    (47) type -> RBOOLEAN .

    EQUAL           reduce using rule 47 (type -> RBOOLEAN .)
    CONSOLE         reduce using rule 47 (type -> RBOOLEAN .)
    RVAR            reduce using rule 47 (type -> RBOOLEAN .)
    RCONST          reduce using rule 47 (type -> RBOOLEAN .)
    ID              reduce using rule 47 (type -> RBOOLEAN .)
    $end            reduce using rule 47 (type -> RBOOLEAN .)


state 46

    (10) declare -> RVAR ID EQUAL expression .
    (23) aritmetica -> expression . PLUS expression
    (24) aritmetica -> expression . BY expression
    (25) aritmetica -> expression . DIVIDED expression
    (26) aritmetica -> expression . LESS expression
    (27) aritmetica -> expression . MODUL expression
    (29) relacional -> expression . DEQUAL expression
    (30) relacional -> expression . DIFERENT expression
    (31) relacional -> expression . MINOR expression
    (32) relacional -> expression . MINOREQUAL expression
    (33) relacional -> expression . GREATER expression
    (34) relacional -> expression . GREATEREQUAL expression

    CONSOLE         reduce using rule 10 (declare -> RVAR ID EQUAL expression .)
    RVAR            reduce using rule 10 (declare -> RVAR ID EQUAL expression .)
    RCONST          reduce using rule 10 (declare -> RVAR ID EQUAL expression .)
    ID              reduce using rule 10 (declare -> RVAR ID EQUAL expression .)
    $end            reduce using rule 10 (declare -> RVAR ID EQUAL expression .)
    PLUS            shift and go to state 47
    BY              shift and go to state 48
    DIVIDED         shift and go to state 49
    LESS            shift and go to state 50
    MODUL           shift and go to state 51
    DEQUAL          shift and go to state 52
    DIFERENT        shift and go to state 53
    MINOR           shift and go to state 54
    MINOREQUAL      shift and go to state 55
    GREATER         shift and go to state 56
    GREATEREQUAL    shift and go to state 57


state 47

    (23) aritmetica -> expression PLUS . expression
    (18) expression -> . primitivo
    (19) expression -> . aritmetica
    (20) expression -> . relacional
    (21) expression -> . logica
    (22) expression -> . ID
    (38) primitivo -> . NUMBER
    (39) primitivo -> . FLOAT
    (40) primitivo -> . STRING
    (41) primitivo -> . boolean
    (23) aritmetica -> . expression PLUS expression
    (24) aritmetica -> . expression BY expression
    (25) aritmetica -> . expression DIVIDED expression
    (26) aritmetica -> . expression LESS expression
    (27) aritmetica -> . expression MODUL expression
    (28) aritmetica -> . LESS expression
    (29) relacional -> . expression DEQUAL expression
    (30) relacional -> . expression DIFERENT expression
    (31) relacional -> . expression MINOR expression
    (32) relacional -> . expression MINOREQUAL expression
    (33) relacional -> . expression GREATER expression
    (34) relacional -> . expression GREATEREQUAL expression
    (35) logica -> . boolean AND boolean
    (36) logica -> . boolean OR boolean
    (37) logica -> . NOT boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ID              shift and go to state 22
    NUMBER          shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    LESS            shift and go to state 32
    NOT             shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 68
    primitivo                      shift and go to state 24
    aritmetica                     shift and go to state 25
    relacional                     shift and go to state 26
    logica                         shift and go to state 27
    boolean                        shift and go to state 31

state 48

    (24) aritmetica -> expression BY . expression
    (18) expression -> . primitivo
    (19) expression -> . aritmetica
    (20) expression -> . relacional
    (21) expression -> . logica
    (22) expression -> . ID
    (38) primitivo -> . NUMBER
    (39) primitivo -> . FLOAT
    (40) primitivo -> . STRING
    (41) primitivo -> . boolean
    (23) aritmetica -> . expression PLUS expression
    (24) aritmetica -> . expression BY expression
    (25) aritmetica -> . expression DIVIDED expression
    (26) aritmetica -> . expression LESS expression
    (27) aritmetica -> . expression MODUL expression
    (28) aritmetica -> . LESS expression
    (29) relacional -> . expression DEQUAL expression
    (30) relacional -> . expression DIFERENT expression
    (31) relacional -> . expression MINOR expression
    (32) relacional -> . expression MINOREQUAL expression
    (33) relacional -> . expression GREATER expression
    (34) relacional -> . expression GREATEREQUAL expression
    (35) logica -> . boolean AND boolean
    (36) logica -> . boolean OR boolean
    (37) logica -> . NOT boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ID              shift and go to state 22
    NUMBER          shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    LESS            shift and go to state 32
    NOT             shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 69
    primitivo                      shift and go to state 24
    aritmetica                     shift and go to state 25
    relacional                     shift and go to state 26
    logica                         shift and go to state 27
    boolean                        shift and go to state 31

state 49

    (25) aritmetica -> expression DIVIDED . expression
    (18) expression -> . primitivo
    (19) expression -> . aritmetica
    (20) expression -> . relacional
    (21) expression -> . logica
    (22) expression -> . ID
    (38) primitivo -> . NUMBER
    (39) primitivo -> . FLOAT
    (40) primitivo -> . STRING
    (41) primitivo -> . boolean
    (23) aritmetica -> . expression PLUS expression
    (24) aritmetica -> . expression BY expression
    (25) aritmetica -> . expression DIVIDED expression
    (26) aritmetica -> . expression LESS expression
    (27) aritmetica -> . expression MODUL expression
    (28) aritmetica -> . LESS expression
    (29) relacional -> . expression DEQUAL expression
    (30) relacional -> . expression DIFERENT expression
    (31) relacional -> . expression MINOR expression
    (32) relacional -> . expression MINOREQUAL expression
    (33) relacional -> . expression GREATER expression
    (34) relacional -> . expression GREATEREQUAL expression
    (35) logica -> . boolean AND boolean
    (36) logica -> . boolean OR boolean
    (37) logica -> . NOT boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ID              shift and go to state 22
    NUMBER          shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    LESS            shift and go to state 32
    NOT             shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 70
    primitivo                      shift and go to state 24
    aritmetica                     shift and go to state 25
    relacional                     shift and go to state 26
    logica                         shift and go to state 27
    boolean                        shift and go to state 31

state 50

    (26) aritmetica -> expression LESS . expression
    (18) expression -> . primitivo
    (19) expression -> . aritmetica
    (20) expression -> . relacional
    (21) expression -> . logica
    (22) expression -> . ID
    (38) primitivo -> . NUMBER
    (39) primitivo -> . FLOAT
    (40) primitivo -> . STRING
    (41) primitivo -> . boolean
    (23) aritmetica -> . expression PLUS expression
    (24) aritmetica -> . expression BY expression
    (25) aritmetica -> . expression DIVIDED expression
    (26) aritmetica -> . expression LESS expression
    (27) aritmetica -> . expression MODUL expression
    (28) aritmetica -> . LESS expression
    (29) relacional -> . expression DEQUAL expression
    (30) relacional -> . expression DIFERENT expression
    (31) relacional -> . expression MINOR expression
    (32) relacional -> . expression MINOREQUAL expression
    (33) relacional -> . expression GREATER expression
    (34) relacional -> . expression GREATEREQUAL expression
    (35) logica -> . boolean AND boolean
    (36) logica -> . boolean OR boolean
    (37) logica -> . NOT boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ID              shift and go to state 22
    NUMBER          shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    LESS            shift and go to state 32
    NOT             shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 71
    primitivo                      shift and go to state 24
    aritmetica                     shift and go to state 25
    relacional                     shift and go to state 26
    logica                         shift and go to state 27
    boolean                        shift and go to state 31

state 51

    (27) aritmetica -> expression MODUL . expression
    (18) expression -> . primitivo
    (19) expression -> . aritmetica
    (20) expression -> . relacional
    (21) expression -> . logica
    (22) expression -> . ID
    (38) primitivo -> . NUMBER
    (39) primitivo -> . FLOAT
    (40) primitivo -> . STRING
    (41) primitivo -> . boolean
    (23) aritmetica -> . expression PLUS expression
    (24) aritmetica -> . expression BY expression
    (25) aritmetica -> . expression DIVIDED expression
    (26) aritmetica -> . expression LESS expression
    (27) aritmetica -> . expression MODUL expression
    (28) aritmetica -> . LESS expression
    (29) relacional -> . expression DEQUAL expression
    (30) relacional -> . expression DIFERENT expression
    (31) relacional -> . expression MINOR expression
    (32) relacional -> . expression MINOREQUAL expression
    (33) relacional -> . expression GREATER expression
    (34) relacional -> . expression GREATEREQUAL expression
    (35) logica -> . boolean AND boolean
    (36) logica -> . boolean OR boolean
    (37) logica -> . NOT boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ID              shift and go to state 22
    NUMBER          shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    LESS            shift and go to state 32
    NOT             shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 72
    primitivo                      shift and go to state 24
    aritmetica                     shift and go to state 25
    relacional                     shift and go to state 26
    logica                         shift and go to state 27
    boolean                        shift and go to state 31

state 52

    (29) relacional -> expression DEQUAL . expression
    (18) expression -> . primitivo
    (19) expression -> . aritmetica
    (20) expression -> . relacional
    (21) expression -> . logica
    (22) expression -> . ID
    (38) primitivo -> . NUMBER
    (39) primitivo -> . FLOAT
    (40) primitivo -> . STRING
    (41) primitivo -> . boolean
    (23) aritmetica -> . expression PLUS expression
    (24) aritmetica -> . expression BY expression
    (25) aritmetica -> . expression DIVIDED expression
    (26) aritmetica -> . expression LESS expression
    (27) aritmetica -> . expression MODUL expression
    (28) aritmetica -> . LESS expression
    (29) relacional -> . expression DEQUAL expression
    (30) relacional -> . expression DIFERENT expression
    (31) relacional -> . expression MINOR expression
    (32) relacional -> . expression MINOREQUAL expression
    (33) relacional -> . expression GREATER expression
    (34) relacional -> . expression GREATEREQUAL expression
    (35) logica -> . boolean AND boolean
    (36) logica -> . boolean OR boolean
    (37) logica -> . NOT boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ID              shift and go to state 22
    NUMBER          shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    LESS            shift and go to state 32
    NOT             shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 73
    primitivo                      shift and go to state 24
    aritmetica                     shift and go to state 25
    relacional                     shift and go to state 26
    logica                         shift and go to state 27
    boolean                        shift and go to state 31

state 53

    (30) relacional -> expression DIFERENT . expression
    (18) expression -> . primitivo
    (19) expression -> . aritmetica
    (20) expression -> . relacional
    (21) expression -> . logica
    (22) expression -> . ID
    (38) primitivo -> . NUMBER
    (39) primitivo -> . FLOAT
    (40) primitivo -> . STRING
    (41) primitivo -> . boolean
    (23) aritmetica -> . expression PLUS expression
    (24) aritmetica -> . expression BY expression
    (25) aritmetica -> . expression DIVIDED expression
    (26) aritmetica -> . expression LESS expression
    (27) aritmetica -> . expression MODUL expression
    (28) aritmetica -> . LESS expression
    (29) relacional -> . expression DEQUAL expression
    (30) relacional -> . expression DIFERENT expression
    (31) relacional -> . expression MINOR expression
    (32) relacional -> . expression MINOREQUAL expression
    (33) relacional -> . expression GREATER expression
    (34) relacional -> . expression GREATEREQUAL expression
    (35) logica -> . boolean AND boolean
    (36) logica -> . boolean OR boolean
    (37) logica -> . NOT boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ID              shift and go to state 22
    NUMBER          shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    LESS            shift and go to state 32
    NOT             shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 74
    primitivo                      shift and go to state 24
    aritmetica                     shift and go to state 25
    relacional                     shift and go to state 26
    logica                         shift and go to state 27
    boolean                        shift and go to state 31

state 54

    (31) relacional -> expression MINOR . expression
    (18) expression -> . primitivo
    (19) expression -> . aritmetica
    (20) expression -> . relacional
    (21) expression -> . logica
    (22) expression -> . ID
    (38) primitivo -> . NUMBER
    (39) primitivo -> . FLOAT
    (40) primitivo -> . STRING
    (41) primitivo -> . boolean
    (23) aritmetica -> . expression PLUS expression
    (24) aritmetica -> . expression BY expression
    (25) aritmetica -> . expression DIVIDED expression
    (26) aritmetica -> . expression LESS expression
    (27) aritmetica -> . expression MODUL expression
    (28) aritmetica -> . LESS expression
    (29) relacional -> . expression DEQUAL expression
    (30) relacional -> . expression DIFERENT expression
    (31) relacional -> . expression MINOR expression
    (32) relacional -> . expression MINOREQUAL expression
    (33) relacional -> . expression GREATER expression
    (34) relacional -> . expression GREATEREQUAL expression
    (35) logica -> . boolean AND boolean
    (36) logica -> . boolean OR boolean
    (37) logica -> . NOT boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ID              shift and go to state 22
    NUMBER          shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    LESS            shift and go to state 32
    NOT             shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 75
    primitivo                      shift and go to state 24
    aritmetica                     shift and go to state 25
    relacional                     shift and go to state 26
    logica                         shift and go to state 27
    boolean                        shift and go to state 31

state 55

    (32) relacional -> expression MINOREQUAL . expression
    (18) expression -> . primitivo
    (19) expression -> . aritmetica
    (20) expression -> . relacional
    (21) expression -> . logica
    (22) expression -> . ID
    (38) primitivo -> . NUMBER
    (39) primitivo -> . FLOAT
    (40) primitivo -> . STRING
    (41) primitivo -> . boolean
    (23) aritmetica -> . expression PLUS expression
    (24) aritmetica -> . expression BY expression
    (25) aritmetica -> . expression DIVIDED expression
    (26) aritmetica -> . expression LESS expression
    (27) aritmetica -> . expression MODUL expression
    (28) aritmetica -> . LESS expression
    (29) relacional -> . expression DEQUAL expression
    (30) relacional -> . expression DIFERENT expression
    (31) relacional -> . expression MINOR expression
    (32) relacional -> . expression MINOREQUAL expression
    (33) relacional -> . expression GREATER expression
    (34) relacional -> . expression GREATEREQUAL expression
    (35) logica -> . boolean AND boolean
    (36) logica -> . boolean OR boolean
    (37) logica -> . NOT boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ID              shift and go to state 22
    NUMBER          shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    LESS            shift and go to state 32
    NOT             shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 76
    primitivo                      shift and go to state 24
    aritmetica                     shift and go to state 25
    relacional                     shift and go to state 26
    logica                         shift and go to state 27
    boolean                        shift and go to state 31

state 56

    (33) relacional -> expression GREATER . expression
    (18) expression -> . primitivo
    (19) expression -> . aritmetica
    (20) expression -> . relacional
    (21) expression -> . logica
    (22) expression -> . ID
    (38) primitivo -> . NUMBER
    (39) primitivo -> . FLOAT
    (40) primitivo -> . STRING
    (41) primitivo -> . boolean
    (23) aritmetica -> . expression PLUS expression
    (24) aritmetica -> . expression BY expression
    (25) aritmetica -> . expression DIVIDED expression
    (26) aritmetica -> . expression LESS expression
    (27) aritmetica -> . expression MODUL expression
    (28) aritmetica -> . LESS expression
    (29) relacional -> . expression DEQUAL expression
    (30) relacional -> . expression DIFERENT expression
    (31) relacional -> . expression MINOR expression
    (32) relacional -> . expression MINOREQUAL expression
    (33) relacional -> . expression GREATER expression
    (34) relacional -> . expression GREATEREQUAL expression
    (35) logica -> . boolean AND boolean
    (36) logica -> . boolean OR boolean
    (37) logica -> . NOT boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ID              shift and go to state 22
    NUMBER          shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    LESS            shift and go to state 32
    NOT             shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 77
    primitivo                      shift and go to state 24
    aritmetica                     shift and go to state 25
    relacional                     shift and go to state 26
    logica                         shift and go to state 27
    boolean                        shift and go to state 31

state 57

    (34) relacional -> expression GREATEREQUAL . expression
    (18) expression -> . primitivo
    (19) expression -> . aritmetica
    (20) expression -> . relacional
    (21) expression -> . logica
    (22) expression -> . ID
    (38) primitivo -> . NUMBER
    (39) primitivo -> . FLOAT
    (40) primitivo -> . STRING
    (41) primitivo -> . boolean
    (23) aritmetica -> . expression PLUS expression
    (24) aritmetica -> . expression BY expression
    (25) aritmetica -> . expression DIVIDED expression
    (26) aritmetica -> . expression LESS expression
    (27) aritmetica -> . expression MODUL expression
    (28) aritmetica -> . LESS expression
    (29) relacional -> . expression DEQUAL expression
    (30) relacional -> . expression DIFERENT expression
    (31) relacional -> . expression MINOR expression
    (32) relacional -> . expression MINOREQUAL expression
    (33) relacional -> . expression GREATER expression
    (34) relacional -> . expression GREATEREQUAL expression
    (35) logica -> . boolean AND boolean
    (36) logica -> . boolean OR boolean
    (37) logica -> . NOT boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ID              shift and go to state 22
    NUMBER          shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    LESS            shift and go to state 32
    NOT             shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 78
    primitivo                      shift and go to state 24
    aritmetica                     shift and go to state 25
    relacional                     shift and go to state 26
    logica                         shift and go to state 27
    boolean                        shift and go to state 31

state 58

    (35) logica -> boolean AND . boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    boolean                        shift and go to state 79

state 59

    (36) logica -> boolean OR . boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    boolean                        shift and go to state 80

state 60

    (28) aritmetica -> LESS expression .
    (23) aritmetica -> expression . PLUS expression
    (24) aritmetica -> expression . BY expression
    (25) aritmetica -> expression . DIVIDED expression
    (26) aritmetica -> expression . LESS expression
    (27) aritmetica -> expression . MODUL expression
    (29) relacional -> expression . DEQUAL expression
    (30) relacional -> expression . DIFERENT expression
    (31) relacional -> expression . MINOR expression
    (32) relacional -> expression . MINOREQUAL expression
    (33) relacional -> expression . GREATER expression
    (34) relacional -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 28 (aritmetica -> LESS expression .)
    BY              reduce using rule 28 (aritmetica -> LESS expression .)
    DIVIDED         reduce using rule 28 (aritmetica -> LESS expression .)
    LESS            reduce using rule 28 (aritmetica -> LESS expression .)
    MODUL           reduce using rule 28 (aritmetica -> LESS expression .)
    DEQUAL          reduce using rule 28 (aritmetica -> LESS expression .)
    DIFERENT        reduce using rule 28 (aritmetica -> LESS expression .)
    MINOR           reduce using rule 28 (aritmetica -> LESS expression .)
    MINOREQUAL      reduce using rule 28 (aritmetica -> LESS expression .)
    GREATER         reduce using rule 28 (aritmetica -> LESS expression .)
    GREATEREQUAL    reduce using rule 28 (aritmetica -> LESS expression .)
    CONSOLE         reduce using rule 28 (aritmetica -> LESS expression .)
    RVAR            reduce using rule 28 (aritmetica -> LESS expression .)
    RCONST          reduce using rule 28 (aritmetica -> LESS expression .)
    ID              reduce using rule 28 (aritmetica -> LESS expression .)
    $end            reduce using rule 28 (aritmetica -> LESS expression .)
    PARC            reduce using rule 28 (aritmetica -> LESS expression .)

  ! PLUS            [ shift and go to state 47 ]
  ! BY              [ shift and go to state 48 ]
  ! DIVIDED         [ shift and go to state 49 ]
  ! LESS            [ shift and go to state 50 ]
  ! MODUL           [ shift and go to state 51 ]
  ! DEQUAL          [ shift and go to state 52 ]
  ! DIFERENT        [ shift and go to state 53 ]
  ! MINOR           [ shift and go to state 54 ]
  ! MINOREQUAL      [ shift and go to state 55 ]
  ! GREATER         [ shift and go to state 56 ]
  ! GREATEREQUAL    [ shift and go to state 57 ]


state 61

    (37) logica -> NOT boolean .

    PLUS            reduce using rule 37 (logica -> NOT boolean .)
    BY              reduce using rule 37 (logica -> NOT boolean .)
    DIVIDED         reduce using rule 37 (logica -> NOT boolean .)
    LESS            reduce using rule 37 (logica -> NOT boolean .)
    MODUL           reduce using rule 37 (logica -> NOT boolean .)
    DEQUAL          reduce using rule 37 (logica -> NOT boolean .)
    DIFERENT        reduce using rule 37 (logica -> NOT boolean .)
    MINOR           reduce using rule 37 (logica -> NOT boolean .)
    MINOREQUAL      reduce using rule 37 (logica -> NOT boolean .)
    GREATER         reduce using rule 37 (logica -> NOT boolean .)
    GREATEREQUAL    reduce using rule 37 (logica -> NOT boolean .)
    CONSOLE         reduce using rule 37 (logica -> NOT boolean .)
    RVAR            reduce using rule 37 (logica -> NOT boolean .)
    RCONST          reduce using rule 37 (logica -> NOT boolean .)
    ID              reduce using rule 37 (logica -> NOT boolean .)
    $end            reduce using rule 37 (logica -> NOT boolean .)
    PARC            reduce using rule 37 (logica -> NOT boolean .)


state 62

    (16) assignVar -> ID PLUS EQUAL expression .
    (23) aritmetica -> expression . PLUS expression
    (24) aritmetica -> expression . BY expression
    (25) aritmetica -> expression . DIVIDED expression
    (26) aritmetica -> expression . LESS expression
    (27) aritmetica -> expression . MODUL expression
    (29) relacional -> expression . DEQUAL expression
    (30) relacional -> expression . DIFERENT expression
    (31) relacional -> expression . MINOR expression
    (32) relacional -> expression . MINOREQUAL expression
    (33) relacional -> expression . GREATER expression
    (34) relacional -> expression . GREATEREQUAL expression

    CONSOLE         reduce using rule 16 (assignVar -> ID PLUS EQUAL expression .)
    RVAR            reduce using rule 16 (assignVar -> ID PLUS EQUAL expression .)
    RCONST          reduce using rule 16 (assignVar -> ID PLUS EQUAL expression .)
    ID              reduce using rule 16 (assignVar -> ID PLUS EQUAL expression .)
    $end            reduce using rule 16 (assignVar -> ID PLUS EQUAL expression .)
    PLUS            shift and go to state 47
    BY              shift and go to state 48
    DIVIDED         shift and go to state 49
    LESS            shift and go to state 50
    MODUL           shift and go to state 51
    DEQUAL          shift and go to state 52
    DIFERENT        shift and go to state 53
    MINOR           shift and go to state 54
    MINOREQUAL      shift and go to state 55
    GREATER         shift and go to state 56
    GREATEREQUAL    shift and go to state 57


state 63

    (17) assignVar -> ID LESS EQUAL expression .
    (23) aritmetica -> expression . PLUS expression
    (24) aritmetica -> expression . BY expression
    (25) aritmetica -> expression . DIVIDED expression
    (26) aritmetica -> expression . LESS expression
    (27) aritmetica -> expression . MODUL expression
    (29) relacional -> expression . DEQUAL expression
    (30) relacional -> expression . DIFERENT expression
    (31) relacional -> expression . MINOR expression
    (32) relacional -> expression . MINOREQUAL expression
    (33) relacional -> expression . GREATER expression
    (34) relacional -> expression . GREATEREQUAL expression

    CONSOLE         reduce using rule 17 (assignVar -> ID LESS EQUAL expression .)
    RVAR            reduce using rule 17 (assignVar -> ID LESS EQUAL expression .)
    RCONST          reduce using rule 17 (assignVar -> ID LESS EQUAL expression .)
    ID              reduce using rule 17 (assignVar -> ID LESS EQUAL expression .)
    $end            reduce using rule 17 (assignVar -> ID LESS EQUAL expression .)
    PLUS            shift and go to state 47
    BY              shift and go to state 48
    DIVIDED         shift and go to state 49
    LESS            shift and go to state 50
    MODUL           shift and go to state 51
    DEQUAL          shift and go to state 52
    DIFERENT        shift and go to state 53
    MINOR           shift and go to state 54
    MINOREQUAL      shift and go to state 55
    GREATER         shift and go to state 56
    GREATEREQUAL    shift and go to state 57


state 64

    (12) declareConst -> RCONST ID DOUBLEDOT type . EQUAL expression
    (14) declareConst -> RCONST ID DOUBLEDOT type .

    EQUAL           shift and go to state 81
    CONSOLE         reduce using rule 14 (declareConst -> RCONST ID DOUBLEDOT type .)
    RVAR            reduce using rule 14 (declareConst -> RCONST ID DOUBLEDOT type .)
    RCONST          reduce using rule 14 (declareConst -> RCONST ID DOUBLEDOT type .)
    ID              reduce using rule 14 (declareConst -> RCONST ID DOUBLEDOT type .)
    $end            reduce using rule 14 (declareConst -> RCONST ID DOUBLEDOT type .)


state 65

    (13) declareConst -> RCONST ID EQUAL expression .
    (23) aritmetica -> expression . PLUS expression
    (24) aritmetica -> expression . BY expression
    (25) aritmetica -> expression . DIVIDED expression
    (26) aritmetica -> expression . LESS expression
    (27) aritmetica -> expression . MODUL expression
    (29) relacional -> expression . DEQUAL expression
    (30) relacional -> expression . DIFERENT expression
    (31) relacional -> expression . MINOR expression
    (32) relacional -> expression . MINOREQUAL expression
    (33) relacional -> expression . GREATER expression
    (34) relacional -> expression . GREATEREQUAL expression

    CONSOLE         reduce using rule 13 (declareConst -> RCONST ID EQUAL expression .)
    RVAR            reduce using rule 13 (declareConst -> RCONST ID EQUAL expression .)
    RCONST          reduce using rule 13 (declareConst -> RCONST ID EQUAL expression .)
    ID              reduce using rule 13 (declareConst -> RCONST ID EQUAL expression .)
    $end            reduce using rule 13 (declareConst -> RCONST ID EQUAL expression .)
    PLUS            shift and go to state 47
    BY              shift and go to state 48
    DIVIDED         shift and go to state 49
    LESS            shift and go to state 50
    MODUL           shift and go to state 51
    DEQUAL          shift and go to state 52
    DIFERENT        shift and go to state 53
    MINOR           shift and go to state 54
    MINOREQUAL      shift and go to state 55
    GREATER         shift and go to state 56
    GREATEREQUAL    shift and go to state 57


state 66

    (8) print -> CONSOLE DOT LOG PARA expression . PARC
    (23) aritmetica -> expression . PLUS expression
    (24) aritmetica -> expression . BY expression
    (25) aritmetica -> expression . DIVIDED expression
    (26) aritmetica -> expression . LESS expression
    (27) aritmetica -> expression . MODUL expression
    (29) relacional -> expression . DEQUAL expression
    (30) relacional -> expression . DIFERENT expression
    (31) relacional -> expression . MINOR expression
    (32) relacional -> expression . MINOREQUAL expression
    (33) relacional -> expression . GREATER expression
    (34) relacional -> expression . GREATEREQUAL expression

    PARC            shift and go to state 82
    PLUS            shift and go to state 47
    BY              shift and go to state 48
    DIVIDED         shift and go to state 49
    LESS            shift and go to state 50
    MODUL           shift and go to state 51
    DEQUAL          shift and go to state 52
    DIFERENT        shift and go to state 53
    MINOR           shift and go to state 54
    MINOREQUAL      shift and go to state 55
    GREATER         shift and go to state 56
    GREATEREQUAL    shift and go to state 57


state 67

    (9) declare -> RVAR ID DOUBLEDOT type EQUAL . expression
    (18) expression -> . primitivo
    (19) expression -> . aritmetica
    (20) expression -> . relacional
    (21) expression -> . logica
    (22) expression -> . ID
    (38) primitivo -> . NUMBER
    (39) primitivo -> . FLOAT
    (40) primitivo -> . STRING
    (41) primitivo -> . boolean
    (23) aritmetica -> . expression PLUS expression
    (24) aritmetica -> . expression BY expression
    (25) aritmetica -> . expression DIVIDED expression
    (26) aritmetica -> . expression LESS expression
    (27) aritmetica -> . expression MODUL expression
    (28) aritmetica -> . LESS expression
    (29) relacional -> . expression DEQUAL expression
    (30) relacional -> . expression DIFERENT expression
    (31) relacional -> . expression MINOR expression
    (32) relacional -> . expression MINOREQUAL expression
    (33) relacional -> . expression GREATER expression
    (34) relacional -> . expression GREATEREQUAL expression
    (35) logica -> . boolean AND boolean
    (36) logica -> . boolean OR boolean
    (37) logica -> . NOT boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ID              shift and go to state 22
    NUMBER          shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    LESS            shift and go to state 32
    NOT             shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 83
    primitivo                      shift and go to state 24
    aritmetica                     shift and go to state 25
    relacional                     shift and go to state 26
    logica                         shift and go to state 27
    boolean                        shift and go to state 31

state 68

    (23) aritmetica -> expression PLUS expression .
    (23) aritmetica -> expression . PLUS expression
    (24) aritmetica -> expression . BY expression
    (25) aritmetica -> expression . DIVIDED expression
    (26) aritmetica -> expression . LESS expression
    (27) aritmetica -> expression . MODUL expression
    (29) relacional -> expression . DEQUAL expression
    (30) relacional -> expression . DIFERENT expression
    (31) relacional -> expression . MINOR expression
    (32) relacional -> expression . MINOREQUAL expression
    (33) relacional -> expression . GREATER expression
    (34) relacional -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 23 (aritmetica -> expression PLUS expression .)
    LESS            reduce using rule 23 (aritmetica -> expression PLUS expression .)
    DEQUAL          reduce using rule 23 (aritmetica -> expression PLUS expression .)
    DIFERENT        reduce using rule 23 (aritmetica -> expression PLUS expression .)
    MINOR           reduce using rule 23 (aritmetica -> expression PLUS expression .)
    MINOREQUAL      reduce using rule 23 (aritmetica -> expression PLUS expression .)
    GREATER         reduce using rule 23 (aritmetica -> expression PLUS expression .)
    GREATEREQUAL    reduce using rule 23 (aritmetica -> expression PLUS expression .)
    CONSOLE         reduce using rule 23 (aritmetica -> expression PLUS expression .)
    RVAR            reduce using rule 23 (aritmetica -> expression PLUS expression .)
    RCONST          reduce using rule 23 (aritmetica -> expression PLUS expression .)
    ID              reduce using rule 23 (aritmetica -> expression PLUS expression .)
    $end            reduce using rule 23 (aritmetica -> expression PLUS expression .)
    PARC            reduce using rule 23 (aritmetica -> expression PLUS expression .)
    BY              shift and go to state 48
    DIVIDED         shift and go to state 49
    MODUL           shift and go to state 51

  ! BY              [ reduce using rule 23 (aritmetica -> expression PLUS expression .) ]
  ! DIVIDED         [ reduce using rule 23 (aritmetica -> expression PLUS expression .) ]
  ! MODUL           [ reduce using rule 23 (aritmetica -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 47 ]
  ! LESS            [ shift and go to state 50 ]
  ! DEQUAL          [ shift and go to state 52 ]
  ! DIFERENT        [ shift and go to state 53 ]
  ! MINOR           [ shift and go to state 54 ]
  ! MINOREQUAL      [ shift and go to state 55 ]
  ! GREATER         [ shift and go to state 56 ]
  ! GREATEREQUAL    [ shift and go to state 57 ]


state 69

    (24) aritmetica -> expression BY expression .
    (23) aritmetica -> expression . PLUS expression
    (24) aritmetica -> expression . BY expression
    (25) aritmetica -> expression . DIVIDED expression
    (26) aritmetica -> expression . LESS expression
    (27) aritmetica -> expression . MODUL expression
    (29) relacional -> expression . DEQUAL expression
    (30) relacional -> expression . DIFERENT expression
    (31) relacional -> expression . MINOR expression
    (32) relacional -> expression . MINOREQUAL expression
    (33) relacional -> expression . GREATER expression
    (34) relacional -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 24 (aritmetica -> expression BY expression .)
    BY              reduce using rule 24 (aritmetica -> expression BY expression .)
    DIVIDED         reduce using rule 24 (aritmetica -> expression BY expression .)
    LESS            reduce using rule 24 (aritmetica -> expression BY expression .)
    MODUL           reduce using rule 24 (aritmetica -> expression BY expression .)
    DEQUAL          reduce using rule 24 (aritmetica -> expression BY expression .)
    DIFERENT        reduce using rule 24 (aritmetica -> expression BY expression .)
    MINOR           reduce using rule 24 (aritmetica -> expression BY expression .)
    MINOREQUAL      reduce using rule 24 (aritmetica -> expression BY expression .)
    GREATER         reduce using rule 24 (aritmetica -> expression BY expression .)
    GREATEREQUAL    reduce using rule 24 (aritmetica -> expression BY expression .)
    CONSOLE         reduce using rule 24 (aritmetica -> expression BY expression .)
    RVAR            reduce using rule 24 (aritmetica -> expression BY expression .)
    RCONST          reduce using rule 24 (aritmetica -> expression BY expression .)
    ID              reduce using rule 24 (aritmetica -> expression BY expression .)
    $end            reduce using rule 24 (aritmetica -> expression BY expression .)
    PARC            reduce using rule 24 (aritmetica -> expression BY expression .)

  ! PLUS            [ shift and go to state 47 ]
  ! BY              [ shift and go to state 48 ]
  ! DIVIDED         [ shift and go to state 49 ]
  ! LESS            [ shift and go to state 50 ]
  ! MODUL           [ shift and go to state 51 ]
  ! DEQUAL          [ shift and go to state 52 ]
  ! DIFERENT        [ shift and go to state 53 ]
  ! MINOR           [ shift and go to state 54 ]
  ! MINOREQUAL      [ shift and go to state 55 ]
  ! GREATER         [ shift and go to state 56 ]
  ! GREATEREQUAL    [ shift and go to state 57 ]


state 70

    (25) aritmetica -> expression DIVIDED expression .
    (23) aritmetica -> expression . PLUS expression
    (24) aritmetica -> expression . BY expression
    (25) aritmetica -> expression . DIVIDED expression
    (26) aritmetica -> expression . LESS expression
    (27) aritmetica -> expression . MODUL expression
    (29) relacional -> expression . DEQUAL expression
    (30) relacional -> expression . DIFERENT expression
    (31) relacional -> expression . MINOR expression
    (32) relacional -> expression . MINOREQUAL expression
    (33) relacional -> expression . GREATER expression
    (34) relacional -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 25 (aritmetica -> expression DIVIDED expression .)
    BY              reduce using rule 25 (aritmetica -> expression DIVIDED expression .)
    DIVIDED         reduce using rule 25 (aritmetica -> expression DIVIDED expression .)
    LESS            reduce using rule 25 (aritmetica -> expression DIVIDED expression .)
    MODUL           reduce using rule 25 (aritmetica -> expression DIVIDED expression .)
    DEQUAL          reduce using rule 25 (aritmetica -> expression DIVIDED expression .)
    DIFERENT        reduce using rule 25 (aritmetica -> expression DIVIDED expression .)
    MINOR           reduce using rule 25 (aritmetica -> expression DIVIDED expression .)
    MINOREQUAL      reduce using rule 25 (aritmetica -> expression DIVIDED expression .)
    GREATER         reduce using rule 25 (aritmetica -> expression DIVIDED expression .)
    GREATEREQUAL    reduce using rule 25 (aritmetica -> expression DIVIDED expression .)
    CONSOLE         reduce using rule 25 (aritmetica -> expression DIVIDED expression .)
    RVAR            reduce using rule 25 (aritmetica -> expression DIVIDED expression .)
    RCONST          reduce using rule 25 (aritmetica -> expression DIVIDED expression .)
    ID              reduce using rule 25 (aritmetica -> expression DIVIDED expression .)
    $end            reduce using rule 25 (aritmetica -> expression DIVIDED expression .)
    PARC            reduce using rule 25 (aritmetica -> expression DIVIDED expression .)

  ! PLUS            [ shift and go to state 47 ]
  ! BY              [ shift and go to state 48 ]
  ! DIVIDED         [ shift and go to state 49 ]
  ! LESS            [ shift and go to state 50 ]
  ! MODUL           [ shift and go to state 51 ]
  ! DEQUAL          [ shift and go to state 52 ]
  ! DIFERENT        [ shift and go to state 53 ]
  ! MINOR           [ shift and go to state 54 ]
  ! MINOREQUAL      [ shift and go to state 55 ]
  ! GREATER         [ shift and go to state 56 ]
  ! GREATEREQUAL    [ shift and go to state 57 ]


state 71

    (26) aritmetica -> expression LESS expression .
    (23) aritmetica -> expression . PLUS expression
    (24) aritmetica -> expression . BY expression
    (25) aritmetica -> expression . DIVIDED expression
    (26) aritmetica -> expression . LESS expression
    (27) aritmetica -> expression . MODUL expression
    (29) relacional -> expression . DEQUAL expression
    (30) relacional -> expression . DIFERENT expression
    (31) relacional -> expression . MINOR expression
    (32) relacional -> expression . MINOREQUAL expression
    (33) relacional -> expression . GREATER expression
    (34) relacional -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 26 (aritmetica -> expression LESS expression .)
    LESS            reduce using rule 26 (aritmetica -> expression LESS expression .)
    DEQUAL          reduce using rule 26 (aritmetica -> expression LESS expression .)
    DIFERENT        reduce using rule 26 (aritmetica -> expression LESS expression .)
    MINOR           reduce using rule 26 (aritmetica -> expression LESS expression .)
    MINOREQUAL      reduce using rule 26 (aritmetica -> expression LESS expression .)
    GREATER         reduce using rule 26 (aritmetica -> expression LESS expression .)
    GREATEREQUAL    reduce using rule 26 (aritmetica -> expression LESS expression .)
    CONSOLE         reduce using rule 26 (aritmetica -> expression LESS expression .)
    RVAR            reduce using rule 26 (aritmetica -> expression LESS expression .)
    RCONST          reduce using rule 26 (aritmetica -> expression LESS expression .)
    ID              reduce using rule 26 (aritmetica -> expression LESS expression .)
    $end            reduce using rule 26 (aritmetica -> expression LESS expression .)
    PARC            reduce using rule 26 (aritmetica -> expression LESS expression .)
    BY              shift and go to state 48
    DIVIDED         shift and go to state 49
    MODUL           shift and go to state 51

  ! BY              [ reduce using rule 26 (aritmetica -> expression LESS expression .) ]
  ! DIVIDED         [ reduce using rule 26 (aritmetica -> expression LESS expression .) ]
  ! MODUL           [ reduce using rule 26 (aritmetica -> expression LESS expression .) ]
  ! PLUS            [ shift and go to state 47 ]
  ! LESS            [ shift and go to state 50 ]
  ! DEQUAL          [ shift and go to state 52 ]
  ! DIFERENT        [ shift and go to state 53 ]
  ! MINOR           [ shift and go to state 54 ]
  ! MINOREQUAL      [ shift and go to state 55 ]
  ! GREATER         [ shift and go to state 56 ]
  ! GREATEREQUAL    [ shift and go to state 57 ]


state 72

    (27) aritmetica -> expression MODUL expression .
    (23) aritmetica -> expression . PLUS expression
    (24) aritmetica -> expression . BY expression
    (25) aritmetica -> expression . DIVIDED expression
    (26) aritmetica -> expression . LESS expression
    (27) aritmetica -> expression . MODUL expression
    (29) relacional -> expression . DEQUAL expression
    (30) relacional -> expression . DIFERENT expression
    (31) relacional -> expression . MINOR expression
    (32) relacional -> expression . MINOREQUAL expression
    (33) relacional -> expression . GREATER expression
    (34) relacional -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 27 (aritmetica -> expression MODUL expression .)
    BY              reduce using rule 27 (aritmetica -> expression MODUL expression .)
    DIVIDED         reduce using rule 27 (aritmetica -> expression MODUL expression .)
    LESS            reduce using rule 27 (aritmetica -> expression MODUL expression .)
    MODUL           reduce using rule 27 (aritmetica -> expression MODUL expression .)
    DEQUAL          reduce using rule 27 (aritmetica -> expression MODUL expression .)
    DIFERENT        reduce using rule 27 (aritmetica -> expression MODUL expression .)
    MINOR           reduce using rule 27 (aritmetica -> expression MODUL expression .)
    MINOREQUAL      reduce using rule 27 (aritmetica -> expression MODUL expression .)
    GREATER         reduce using rule 27 (aritmetica -> expression MODUL expression .)
    GREATEREQUAL    reduce using rule 27 (aritmetica -> expression MODUL expression .)
    CONSOLE         reduce using rule 27 (aritmetica -> expression MODUL expression .)
    RVAR            reduce using rule 27 (aritmetica -> expression MODUL expression .)
    RCONST          reduce using rule 27 (aritmetica -> expression MODUL expression .)
    ID              reduce using rule 27 (aritmetica -> expression MODUL expression .)
    $end            reduce using rule 27 (aritmetica -> expression MODUL expression .)
    PARC            reduce using rule 27 (aritmetica -> expression MODUL expression .)

  ! PLUS            [ shift and go to state 47 ]
  ! BY              [ shift and go to state 48 ]
  ! DIVIDED         [ shift and go to state 49 ]
  ! LESS            [ shift and go to state 50 ]
  ! MODUL           [ shift and go to state 51 ]
  ! DEQUAL          [ shift and go to state 52 ]
  ! DIFERENT        [ shift and go to state 53 ]
  ! MINOR           [ shift and go to state 54 ]
  ! MINOREQUAL      [ shift and go to state 55 ]
  ! GREATER         [ shift and go to state 56 ]
  ! GREATEREQUAL    [ shift and go to state 57 ]


state 73

    (29) relacional -> expression DEQUAL expression .
    (23) aritmetica -> expression . PLUS expression
    (24) aritmetica -> expression . BY expression
    (25) aritmetica -> expression . DIVIDED expression
    (26) aritmetica -> expression . LESS expression
    (27) aritmetica -> expression . MODUL expression
    (29) relacional -> expression . DEQUAL expression
    (30) relacional -> expression . DIFERENT expression
    (31) relacional -> expression . MINOR expression
    (32) relacional -> expression . MINOREQUAL expression
    (33) relacional -> expression . GREATER expression
    (34) relacional -> expression . GREATEREQUAL expression

    DEQUAL          reduce using rule 29 (relacional -> expression DEQUAL expression .)
    DIFERENT        reduce using rule 29 (relacional -> expression DEQUAL expression .)
    MINOR           reduce using rule 29 (relacional -> expression DEQUAL expression .)
    MINOREQUAL      reduce using rule 29 (relacional -> expression DEQUAL expression .)
    GREATER         reduce using rule 29 (relacional -> expression DEQUAL expression .)
    GREATEREQUAL    reduce using rule 29 (relacional -> expression DEQUAL expression .)
    CONSOLE         reduce using rule 29 (relacional -> expression DEQUAL expression .)
    RVAR            reduce using rule 29 (relacional -> expression DEQUAL expression .)
    RCONST          reduce using rule 29 (relacional -> expression DEQUAL expression .)
    ID              reduce using rule 29 (relacional -> expression DEQUAL expression .)
    $end            reduce using rule 29 (relacional -> expression DEQUAL expression .)
    PARC            reduce using rule 29 (relacional -> expression DEQUAL expression .)
    PLUS            shift and go to state 47
    BY              shift and go to state 48
    DIVIDED         shift and go to state 49
    LESS            shift and go to state 50
    MODUL           shift and go to state 51

  ! PLUS            [ reduce using rule 29 (relacional -> expression DEQUAL expression .) ]
  ! BY              [ reduce using rule 29 (relacional -> expression DEQUAL expression .) ]
  ! DIVIDED         [ reduce using rule 29 (relacional -> expression DEQUAL expression .) ]
  ! LESS            [ reduce using rule 29 (relacional -> expression DEQUAL expression .) ]
  ! MODUL           [ reduce using rule 29 (relacional -> expression DEQUAL expression .) ]
  ! DEQUAL          [ shift and go to state 52 ]
  ! DIFERENT        [ shift and go to state 53 ]
  ! MINOR           [ shift and go to state 54 ]
  ! MINOREQUAL      [ shift and go to state 55 ]
  ! GREATER         [ shift and go to state 56 ]
  ! GREATEREQUAL    [ shift and go to state 57 ]


state 74

    (30) relacional -> expression DIFERENT expression .
    (23) aritmetica -> expression . PLUS expression
    (24) aritmetica -> expression . BY expression
    (25) aritmetica -> expression . DIVIDED expression
    (26) aritmetica -> expression . LESS expression
    (27) aritmetica -> expression . MODUL expression
    (29) relacional -> expression . DEQUAL expression
    (30) relacional -> expression . DIFERENT expression
    (31) relacional -> expression . MINOR expression
    (32) relacional -> expression . MINOREQUAL expression
    (33) relacional -> expression . GREATER expression
    (34) relacional -> expression . GREATEREQUAL expression

    DEQUAL          reduce using rule 30 (relacional -> expression DIFERENT expression .)
    DIFERENT        reduce using rule 30 (relacional -> expression DIFERENT expression .)
    MINOR           reduce using rule 30 (relacional -> expression DIFERENT expression .)
    MINOREQUAL      reduce using rule 30 (relacional -> expression DIFERENT expression .)
    GREATER         reduce using rule 30 (relacional -> expression DIFERENT expression .)
    GREATEREQUAL    reduce using rule 30 (relacional -> expression DIFERENT expression .)
    CONSOLE         reduce using rule 30 (relacional -> expression DIFERENT expression .)
    RVAR            reduce using rule 30 (relacional -> expression DIFERENT expression .)
    RCONST          reduce using rule 30 (relacional -> expression DIFERENT expression .)
    ID              reduce using rule 30 (relacional -> expression DIFERENT expression .)
    $end            reduce using rule 30 (relacional -> expression DIFERENT expression .)
    PARC            reduce using rule 30 (relacional -> expression DIFERENT expression .)
    PLUS            shift and go to state 47
    BY              shift and go to state 48
    DIVIDED         shift and go to state 49
    LESS            shift and go to state 50
    MODUL           shift and go to state 51

  ! PLUS            [ reduce using rule 30 (relacional -> expression DIFERENT expression .) ]
  ! BY              [ reduce using rule 30 (relacional -> expression DIFERENT expression .) ]
  ! DIVIDED         [ reduce using rule 30 (relacional -> expression DIFERENT expression .) ]
  ! LESS            [ reduce using rule 30 (relacional -> expression DIFERENT expression .) ]
  ! MODUL           [ reduce using rule 30 (relacional -> expression DIFERENT expression .) ]
  ! DEQUAL          [ shift and go to state 52 ]
  ! DIFERENT        [ shift and go to state 53 ]
  ! MINOR           [ shift and go to state 54 ]
  ! MINOREQUAL      [ shift and go to state 55 ]
  ! GREATER         [ shift and go to state 56 ]
  ! GREATEREQUAL    [ shift and go to state 57 ]


state 75

    (31) relacional -> expression MINOR expression .
    (23) aritmetica -> expression . PLUS expression
    (24) aritmetica -> expression . BY expression
    (25) aritmetica -> expression . DIVIDED expression
    (26) aritmetica -> expression . LESS expression
    (27) aritmetica -> expression . MODUL expression
    (29) relacional -> expression . DEQUAL expression
    (30) relacional -> expression . DIFERENT expression
    (31) relacional -> expression . MINOR expression
    (32) relacional -> expression . MINOREQUAL expression
    (33) relacional -> expression . GREATER expression
    (34) relacional -> expression . GREATEREQUAL expression

    DEQUAL          reduce using rule 31 (relacional -> expression MINOR expression .)
    DIFERENT        reduce using rule 31 (relacional -> expression MINOR expression .)
    MINOR           reduce using rule 31 (relacional -> expression MINOR expression .)
    MINOREQUAL      reduce using rule 31 (relacional -> expression MINOR expression .)
    GREATER         reduce using rule 31 (relacional -> expression MINOR expression .)
    GREATEREQUAL    reduce using rule 31 (relacional -> expression MINOR expression .)
    CONSOLE         reduce using rule 31 (relacional -> expression MINOR expression .)
    RVAR            reduce using rule 31 (relacional -> expression MINOR expression .)
    RCONST          reduce using rule 31 (relacional -> expression MINOR expression .)
    ID              reduce using rule 31 (relacional -> expression MINOR expression .)
    $end            reduce using rule 31 (relacional -> expression MINOR expression .)
    PARC            reduce using rule 31 (relacional -> expression MINOR expression .)
    PLUS            shift and go to state 47
    BY              shift and go to state 48
    DIVIDED         shift and go to state 49
    LESS            shift and go to state 50
    MODUL           shift and go to state 51

  ! PLUS            [ reduce using rule 31 (relacional -> expression MINOR expression .) ]
  ! BY              [ reduce using rule 31 (relacional -> expression MINOR expression .) ]
  ! DIVIDED         [ reduce using rule 31 (relacional -> expression MINOR expression .) ]
  ! LESS            [ reduce using rule 31 (relacional -> expression MINOR expression .) ]
  ! MODUL           [ reduce using rule 31 (relacional -> expression MINOR expression .) ]
  ! DEQUAL          [ shift and go to state 52 ]
  ! DIFERENT        [ shift and go to state 53 ]
  ! MINOR           [ shift and go to state 54 ]
  ! MINOREQUAL      [ shift and go to state 55 ]
  ! GREATER         [ shift and go to state 56 ]
  ! GREATEREQUAL    [ shift and go to state 57 ]


state 76

    (32) relacional -> expression MINOREQUAL expression .
    (23) aritmetica -> expression . PLUS expression
    (24) aritmetica -> expression . BY expression
    (25) aritmetica -> expression . DIVIDED expression
    (26) aritmetica -> expression . LESS expression
    (27) aritmetica -> expression . MODUL expression
    (29) relacional -> expression . DEQUAL expression
    (30) relacional -> expression . DIFERENT expression
    (31) relacional -> expression . MINOR expression
    (32) relacional -> expression . MINOREQUAL expression
    (33) relacional -> expression . GREATER expression
    (34) relacional -> expression . GREATEREQUAL expression

    DEQUAL          reduce using rule 32 (relacional -> expression MINOREQUAL expression .)
    DIFERENT        reduce using rule 32 (relacional -> expression MINOREQUAL expression .)
    MINOR           reduce using rule 32 (relacional -> expression MINOREQUAL expression .)
    MINOREQUAL      reduce using rule 32 (relacional -> expression MINOREQUAL expression .)
    GREATER         reduce using rule 32 (relacional -> expression MINOREQUAL expression .)
    GREATEREQUAL    reduce using rule 32 (relacional -> expression MINOREQUAL expression .)
    CONSOLE         reduce using rule 32 (relacional -> expression MINOREQUAL expression .)
    RVAR            reduce using rule 32 (relacional -> expression MINOREQUAL expression .)
    RCONST          reduce using rule 32 (relacional -> expression MINOREQUAL expression .)
    ID              reduce using rule 32 (relacional -> expression MINOREQUAL expression .)
    $end            reduce using rule 32 (relacional -> expression MINOREQUAL expression .)
    PARC            reduce using rule 32 (relacional -> expression MINOREQUAL expression .)
    PLUS            shift and go to state 47
    BY              shift and go to state 48
    DIVIDED         shift and go to state 49
    LESS            shift and go to state 50
    MODUL           shift and go to state 51

  ! PLUS            [ reduce using rule 32 (relacional -> expression MINOREQUAL expression .) ]
  ! BY              [ reduce using rule 32 (relacional -> expression MINOREQUAL expression .) ]
  ! DIVIDED         [ reduce using rule 32 (relacional -> expression MINOREQUAL expression .) ]
  ! LESS            [ reduce using rule 32 (relacional -> expression MINOREQUAL expression .) ]
  ! MODUL           [ reduce using rule 32 (relacional -> expression MINOREQUAL expression .) ]
  ! DEQUAL          [ shift and go to state 52 ]
  ! DIFERENT        [ shift and go to state 53 ]
  ! MINOR           [ shift and go to state 54 ]
  ! MINOREQUAL      [ shift and go to state 55 ]
  ! GREATER         [ shift and go to state 56 ]
  ! GREATEREQUAL    [ shift and go to state 57 ]


state 77

    (33) relacional -> expression GREATER expression .
    (23) aritmetica -> expression . PLUS expression
    (24) aritmetica -> expression . BY expression
    (25) aritmetica -> expression . DIVIDED expression
    (26) aritmetica -> expression . LESS expression
    (27) aritmetica -> expression . MODUL expression
    (29) relacional -> expression . DEQUAL expression
    (30) relacional -> expression . DIFERENT expression
    (31) relacional -> expression . MINOR expression
    (32) relacional -> expression . MINOREQUAL expression
    (33) relacional -> expression . GREATER expression
    (34) relacional -> expression . GREATEREQUAL expression

    DEQUAL          reduce using rule 33 (relacional -> expression GREATER expression .)
    DIFERENT        reduce using rule 33 (relacional -> expression GREATER expression .)
    MINOR           reduce using rule 33 (relacional -> expression GREATER expression .)
    MINOREQUAL      reduce using rule 33 (relacional -> expression GREATER expression .)
    GREATER         reduce using rule 33 (relacional -> expression GREATER expression .)
    GREATEREQUAL    reduce using rule 33 (relacional -> expression GREATER expression .)
    CONSOLE         reduce using rule 33 (relacional -> expression GREATER expression .)
    RVAR            reduce using rule 33 (relacional -> expression GREATER expression .)
    RCONST          reduce using rule 33 (relacional -> expression GREATER expression .)
    ID              reduce using rule 33 (relacional -> expression GREATER expression .)
    $end            reduce using rule 33 (relacional -> expression GREATER expression .)
    PARC            reduce using rule 33 (relacional -> expression GREATER expression .)
    PLUS            shift and go to state 47
    BY              shift and go to state 48
    DIVIDED         shift and go to state 49
    LESS            shift and go to state 50
    MODUL           shift and go to state 51

  ! PLUS            [ reduce using rule 33 (relacional -> expression GREATER expression .) ]
  ! BY              [ reduce using rule 33 (relacional -> expression GREATER expression .) ]
  ! DIVIDED         [ reduce using rule 33 (relacional -> expression GREATER expression .) ]
  ! LESS            [ reduce using rule 33 (relacional -> expression GREATER expression .) ]
  ! MODUL           [ reduce using rule 33 (relacional -> expression GREATER expression .) ]
  ! DEQUAL          [ shift and go to state 52 ]
  ! DIFERENT        [ shift and go to state 53 ]
  ! MINOR           [ shift and go to state 54 ]
  ! MINOREQUAL      [ shift and go to state 55 ]
  ! GREATER         [ shift and go to state 56 ]
  ! GREATEREQUAL    [ shift and go to state 57 ]


state 78

    (34) relacional -> expression GREATEREQUAL expression .
    (23) aritmetica -> expression . PLUS expression
    (24) aritmetica -> expression . BY expression
    (25) aritmetica -> expression . DIVIDED expression
    (26) aritmetica -> expression . LESS expression
    (27) aritmetica -> expression . MODUL expression
    (29) relacional -> expression . DEQUAL expression
    (30) relacional -> expression . DIFERENT expression
    (31) relacional -> expression . MINOR expression
    (32) relacional -> expression . MINOREQUAL expression
    (33) relacional -> expression . GREATER expression
    (34) relacional -> expression . GREATEREQUAL expression

    DEQUAL          reduce using rule 34 (relacional -> expression GREATEREQUAL expression .)
    DIFERENT        reduce using rule 34 (relacional -> expression GREATEREQUAL expression .)
    MINOR           reduce using rule 34 (relacional -> expression GREATEREQUAL expression .)
    MINOREQUAL      reduce using rule 34 (relacional -> expression GREATEREQUAL expression .)
    GREATER         reduce using rule 34 (relacional -> expression GREATEREQUAL expression .)
    GREATEREQUAL    reduce using rule 34 (relacional -> expression GREATEREQUAL expression .)
    CONSOLE         reduce using rule 34 (relacional -> expression GREATEREQUAL expression .)
    RVAR            reduce using rule 34 (relacional -> expression GREATEREQUAL expression .)
    RCONST          reduce using rule 34 (relacional -> expression GREATEREQUAL expression .)
    ID              reduce using rule 34 (relacional -> expression GREATEREQUAL expression .)
    $end            reduce using rule 34 (relacional -> expression GREATEREQUAL expression .)
    PARC            reduce using rule 34 (relacional -> expression GREATEREQUAL expression .)
    PLUS            shift and go to state 47
    BY              shift and go to state 48
    DIVIDED         shift and go to state 49
    LESS            shift and go to state 50
    MODUL           shift and go to state 51

  ! PLUS            [ reduce using rule 34 (relacional -> expression GREATEREQUAL expression .) ]
  ! BY              [ reduce using rule 34 (relacional -> expression GREATEREQUAL expression .) ]
  ! DIVIDED         [ reduce using rule 34 (relacional -> expression GREATEREQUAL expression .) ]
  ! LESS            [ reduce using rule 34 (relacional -> expression GREATEREQUAL expression .) ]
  ! MODUL           [ reduce using rule 34 (relacional -> expression GREATEREQUAL expression .) ]
  ! DEQUAL          [ shift and go to state 52 ]
  ! DIFERENT        [ shift and go to state 53 ]
  ! MINOR           [ shift and go to state 54 ]
  ! MINOREQUAL      [ shift and go to state 55 ]
  ! GREATER         [ shift and go to state 56 ]
  ! GREATEREQUAL    [ shift and go to state 57 ]


state 79

    (35) logica -> boolean AND boolean .

    PLUS            reduce using rule 35 (logica -> boolean AND boolean .)
    BY              reduce using rule 35 (logica -> boolean AND boolean .)
    DIVIDED         reduce using rule 35 (logica -> boolean AND boolean .)
    LESS            reduce using rule 35 (logica -> boolean AND boolean .)
    MODUL           reduce using rule 35 (logica -> boolean AND boolean .)
    DEQUAL          reduce using rule 35 (logica -> boolean AND boolean .)
    DIFERENT        reduce using rule 35 (logica -> boolean AND boolean .)
    MINOR           reduce using rule 35 (logica -> boolean AND boolean .)
    MINOREQUAL      reduce using rule 35 (logica -> boolean AND boolean .)
    GREATER         reduce using rule 35 (logica -> boolean AND boolean .)
    GREATEREQUAL    reduce using rule 35 (logica -> boolean AND boolean .)
    CONSOLE         reduce using rule 35 (logica -> boolean AND boolean .)
    RVAR            reduce using rule 35 (logica -> boolean AND boolean .)
    RCONST          reduce using rule 35 (logica -> boolean AND boolean .)
    ID              reduce using rule 35 (logica -> boolean AND boolean .)
    $end            reduce using rule 35 (logica -> boolean AND boolean .)
    PARC            reduce using rule 35 (logica -> boolean AND boolean .)


state 80

    (36) logica -> boolean OR boolean .

    PLUS            reduce using rule 36 (logica -> boolean OR boolean .)
    BY              reduce using rule 36 (logica -> boolean OR boolean .)
    DIVIDED         reduce using rule 36 (logica -> boolean OR boolean .)
    LESS            reduce using rule 36 (logica -> boolean OR boolean .)
    MODUL           reduce using rule 36 (logica -> boolean OR boolean .)
    DEQUAL          reduce using rule 36 (logica -> boolean OR boolean .)
    DIFERENT        reduce using rule 36 (logica -> boolean OR boolean .)
    MINOR           reduce using rule 36 (logica -> boolean OR boolean .)
    MINOREQUAL      reduce using rule 36 (logica -> boolean OR boolean .)
    GREATER         reduce using rule 36 (logica -> boolean OR boolean .)
    GREATEREQUAL    reduce using rule 36 (logica -> boolean OR boolean .)
    CONSOLE         reduce using rule 36 (logica -> boolean OR boolean .)
    RVAR            reduce using rule 36 (logica -> boolean OR boolean .)
    RCONST          reduce using rule 36 (logica -> boolean OR boolean .)
    ID              reduce using rule 36 (logica -> boolean OR boolean .)
    $end            reduce using rule 36 (logica -> boolean OR boolean .)
    PARC            reduce using rule 36 (logica -> boolean OR boolean .)


state 81

    (12) declareConst -> RCONST ID DOUBLEDOT type EQUAL . expression
    (18) expression -> . primitivo
    (19) expression -> . aritmetica
    (20) expression -> . relacional
    (21) expression -> . logica
    (22) expression -> . ID
    (38) primitivo -> . NUMBER
    (39) primitivo -> . FLOAT
    (40) primitivo -> . STRING
    (41) primitivo -> . boolean
    (23) aritmetica -> . expression PLUS expression
    (24) aritmetica -> . expression BY expression
    (25) aritmetica -> . expression DIVIDED expression
    (26) aritmetica -> . expression LESS expression
    (27) aritmetica -> . expression MODUL expression
    (28) aritmetica -> . LESS expression
    (29) relacional -> . expression DEQUAL expression
    (30) relacional -> . expression DIFERENT expression
    (31) relacional -> . expression MINOR expression
    (32) relacional -> . expression MINOREQUAL expression
    (33) relacional -> . expression GREATER expression
    (34) relacional -> . expression GREATEREQUAL expression
    (35) logica -> . boolean AND boolean
    (36) logica -> . boolean OR boolean
    (37) logica -> . NOT boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ID              shift and go to state 22
    NUMBER          shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    LESS            shift and go to state 32
    NOT             shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35

    expression                     shift and go to state 84
    primitivo                      shift and go to state 24
    aritmetica                     shift and go to state 25
    relacional                     shift and go to state 26
    logica                         shift and go to state 27
    boolean                        shift and go to state 31

state 82

    (8) print -> CONSOLE DOT LOG PARA expression PARC .

    CONSOLE         reduce using rule 8 (print -> CONSOLE DOT LOG PARA expression PARC .)
    RVAR            reduce using rule 8 (print -> CONSOLE DOT LOG PARA expression PARC .)
    RCONST          reduce using rule 8 (print -> CONSOLE DOT LOG PARA expression PARC .)
    ID              reduce using rule 8 (print -> CONSOLE DOT LOG PARA expression PARC .)
    $end            reduce using rule 8 (print -> CONSOLE DOT LOG PARA expression PARC .)


state 83

    (9) declare -> RVAR ID DOUBLEDOT type EQUAL expression .
    (23) aritmetica -> expression . PLUS expression
    (24) aritmetica -> expression . BY expression
    (25) aritmetica -> expression . DIVIDED expression
    (26) aritmetica -> expression . LESS expression
    (27) aritmetica -> expression . MODUL expression
    (29) relacional -> expression . DEQUAL expression
    (30) relacional -> expression . DIFERENT expression
    (31) relacional -> expression . MINOR expression
    (32) relacional -> expression . MINOREQUAL expression
    (33) relacional -> expression . GREATER expression
    (34) relacional -> expression . GREATEREQUAL expression

    CONSOLE         reduce using rule 9 (declare -> RVAR ID DOUBLEDOT type EQUAL expression .)
    RVAR            reduce using rule 9 (declare -> RVAR ID DOUBLEDOT type EQUAL expression .)
    RCONST          reduce using rule 9 (declare -> RVAR ID DOUBLEDOT type EQUAL expression .)
    ID              reduce using rule 9 (declare -> RVAR ID DOUBLEDOT type EQUAL expression .)
    $end            reduce using rule 9 (declare -> RVAR ID DOUBLEDOT type EQUAL expression .)
    PLUS            shift and go to state 47
    BY              shift and go to state 48
    DIVIDED         shift and go to state 49
    LESS            shift and go to state 50
    MODUL           shift and go to state 51
    DEQUAL          shift and go to state 52
    DIFERENT        shift and go to state 53
    MINOR           shift and go to state 54
    MINOREQUAL      shift and go to state 55
    GREATER         shift and go to state 56
    GREATEREQUAL    shift and go to state 57


state 84

    (12) declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .
    (23) aritmetica -> expression . PLUS expression
    (24) aritmetica -> expression . BY expression
    (25) aritmetica -> expression . DIVIDED expression
    (26) aritmetica -> expression . LESS expression
    (27) aritmetica -> expression . MODUL expression
    (29) relacional -> expression . DEQUAL expression
    (30) relacional -> expression . DIFERENT expression
    (31) relacional -> expression . MINOR expression
    (32) relacional -> expression . MINOREQUAL expression
    (33) relacional -> expression . GREATER expression
    (34) relacional -> expression . GREATEREQUAL expression

    CONSOLE         reduce using rule 12 (declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .)
    RVAR            reduce using rule 12 (declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .)
    RCONST          reduce using rule 12 (declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .)
    ID              reduce using rule 12 (declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .)
    $end            reduce using rule 12 (declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .)
    PLUS            shift and go to state 47
    BY              shift and go to state 48
    DIVIDED         shift and go to state 49
    LESS            shift and go to state 50
    MODUL           shift and go to state 51
    DEQUAL          shift and go to state 52
    DIFERENT        shift and go to state 53
    MINOR           shift and go to state 54
    MINOREQUAL      shift and go to state 55
    GREATER         shift and go to state 56
    GREATEREQUAL    shift and go to state 57

