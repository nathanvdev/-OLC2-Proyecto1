Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion SEMICOLON
Rule 3     instrucciones -> instruccion SEMICOLON
Rule 4     instruccion -> print
Rule 5     instruccion -> declarevar
Rule 6     instruccion -> declareConst
Rule 7     instruccion -> assignVar
Rule 8     instruccion -> declareArray
Rule 9     instruccion -> assingArray
Rule 10    instruccion -> arrayFuncs
Rule 11    instruccion -> if_else
Rule 12    instruccion -> ternario
Rule 13    instruccion -> while_
Rule 14    instruccion -> for_
Rule 15    instruccion -> transfer
Rule 16    instruccion -> createInterface
Rule 17    instruccion -> declareInterface
Rule 18    instruccion -> modifyInterface
Rule 19    print -> CONSOLE DOT LOG PARA expression_list PARC
Rule 20    declaration_type -> RCONST
Rule 21    declaration_type -> RVAR
Rule 22    declarevar -> RVAR ID DOUBLEDOT type EQUAL expression
Rule 23    declarevar -> RVAR ID EQUAL expression
Rule 24    declarevar -> RVAR ID DOUBLEDOT type
Rule 25    declareConst -> RCONST ID DOUBLEDOT type EQUAL expression
Rule 26    declareConst -> RCONST ID EQUAL expression
Rule 27    declareConst -> RCONST ID DOUBLEDOT type
Rule 28    assignVar -> ID EQUAL expression
Rule 29    assignVar -> ID PLUS EQUAL expression
Rule 30    assignVar -> ID LESS EQUAL expression
Rule 31    declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
Rule 32    declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
Rule 33    declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
Rule 34    assingArray -> ID BRACKETO expression BRACKETC EQUAL expression
Rule 35    arrayFuncs -> ID DOT RPUSH PARA expression PARC
Rule 36    arrayFuncs -> ID DOT RPOP PARA PARC
Rule 37    if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
Rule 38    else -> RELSE LLAVEA instrucciones LLAVEC
Rule 39    else -> RELSE if_else
Rule 40    else -> <empty>
Rule 41    ternario -> expression QUESTIONM expression DOUBLEDOT expression
Rule 42    while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
Rule 43    for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
Rule 44    for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
Rule 45    transfer -> RBREAK
Rule 46    transfer -> RCONTINUE
Rule 47    transfer -> RRETURN
Rule 48    transfer -> RRETURN expression
Rule 49    createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC
Rule 50    attributesList -> attributesList ID DOUBLEDOT type
Rule 51    attributesList -> ID DOUBLEDOT type
Rule 52    declareInterface -> RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
Rule 53    interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression
Rule 54    interfaceContent -> ID DOUBLEDOT expression
Rule 55    modifyInterface -> ID DOT ID EQUAL expression
Rule 56    expression -> primitivo
Rule 57    expression -> aritmetica
Rule 58    expression -> relacional
Rule 59    expression -> logica
Rule 60    expression -> expression_group
Rule 61    expression -> id_
Rule 62    expression -> arraysExpression
Rule 63    expression -> interfaceContent
Rule 64    expression -> boolean
Rule 65    expression_group -> PARA expression PARC
Rule 66    interfaceContent -> ID DOT RKEYS PARA PARC
Rule 67    interfaceContent -> ID DOT RVALUES PARA PARC
Rule 68    expression_list -> expression_list COMMA expression
Rule 69    expression_list -> expression
Rule 70    id_ -> ID
Rule 71    id_ -> ID BRACKETO expression BRACKETC
Rule 72    aritmetica -> expression PLUS expression
Rule 73    aritmetica -> expression BY expression
Rule 74    aritmetica -> expression DIVIDED expression
Rule 75    aritmetica -> expression LESS expression
Rule 76    aritmetica -> expression MODUL expression
Rule 77    aritmetica -> LESS expression
Rule 78    relacional -> expression DEQUAL expression
Rule 79    relacional -> expression DIFERENT expression
Rule 80    relacional -> expression MINOR expression
Rule 81    relacional -> expression MINOREQUAL expression
Rule 82    relacional -> expression GREATER expression
Rule 83    relacional -> expression GREATEREQUAL expression
Rule 84    logica -> expression AND expression
Rule 85    logica -> expression OR expression
Rule 86    logica -> NOT expression
Rule 87    primitivo -> NUMBER
Rule 88    primitivo -> FLOAT
Rule 89    primitivo -> STRING
Rule 90    arraysExpression -> ID DOT RPOP PARA PARC
Rule 91    arraysExpression -> ID DOT RINDEXOF PARA expression PARC
Rule 92    arraysExpression -> ID DOT RJOIN PARA PARC
Rule 93    arraysExpression -> ID DOT RLENGTH PARA PARC
Rule 94    boolean -> TRUE
Rule 95    boolean -> FALSE
Rule 96    type -> RNUMBER
Rule 97    type -> RFLOAT
Rule 98    type -> RSTRING
Rule 99    type -> RBOOLEAN

Terminals, with rules where they appear

AND                  : 84
BRACKETC             : 31 31 32 33 33 34 71
BRACKETO             : 31 31 32 33 33 34 71
BY                   : 73
COMMA                : 53 68
CONSOLE              : 19
DEQUAL               : 78
DIFERENT             : 79
DIVIDED              : 74
DOT                  : 19 35 36 55 66 67 90 91 92 93
DOUBLEDOT            : 22 24 25 27 31 32 33 41 50 51 52 53 54
EQUAL                : 22 23 25 26 28 29 30 31 32 33 34 52 55
FALSE                : 95
FLOAT                : 88
GREATER              : 82
GREATEREQUAL         : 83
ID                   : 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 49 50 51 52 52 53 54 55 55 66 67 70 71 90 91 92 93
LESS                 : 30 44 44 75 77
LLAVEA               : 37 38 42 43 44 49 52
LLAVEC               : 37 38 42 43 44 49 52
LOG                  : 19
MINOR                : 80
MINOREQUAL           : 81
MODUL                : 76
NOT                  : 86
NUMBER               : 87
OR                   : 85
PARA                 : 19 35 36 37 42 43 44 65 66 67 90 91 92 93
PARC                 : 19 35 36 37 42 43 44 65 66 67 90 91 92 93
PLUS                 : 29 43 43 72
QUESTIONM            : 41
RBOOLEAN             : 99
RBREAK               : 45
RCONST               : 20 25 26 27
RCONTINUE            : 46
RELSE                : 38 39
RFLOAT               : 97
RFOR                 : 43 44
RIF                  : 37
RINDEXOF             : 91
RINTERFACE           : 49
RJOIN                : 92
RKEYS                : 66
RLENGTH              : 93
RNUMBER              : 96
RPOP                 : 36 90
RPUSH                : 35
RRETURN              : 47 48
RSTRING              : 98
RVALUES              : 67
RVAR                 : 21 22 23 24 52
RWHILE               : 42
SEMICOLON            : 2 3 43 43 44 44
STRING               : 89
TRUE                 : 94
error                : 

Nonterminals, with rules where they appear

aritmetica           : 57
arrayFuncs           : 10
arraysExpression     : 62
assignVar            : 7
assingArray          : 9
attributesList       : 49 50
boolean              : 64
createInterface      : 16
declaration_type     : 31 32 33
declareArray         : 8
declareConst         : 6
declareInterface     : 17
declarevar           : 5 43 44
else                 : 37
expression           : 22 23 25 26 28 29 30 32 34 34 35 37 41 41 41 42 48 53 54 55 65 68 69 71 72 72 73 73 74 74 75 75 76 76 77 78 78 79 79 80 80 81 81 82 82 83 83 84 84 85 85 86 91
expression_group     : 60
expression_list      : 19 31 68
for_                 : 14
id_                  : 43 44 61
if_else              : 11 39
instruccion          : 2 3
instrucciones        : 1 2 37 38 42 43 44
interfaceContent     : 52 53 63
logica               : 59
modifyInterface      : 18
primitivo            : 56
print                : 4
relacional           : 43 44 58
start                : 0
ternario             : 12
transfer             : 15
type                 : 22 24 25 27 31 32 33 50 51
while_               : 13

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion SEMICOLON
    (3) instrucciones -> . instruccion SEMICOLON
    (4) instruccion -> . print
    (5) instruccion -> . declarevar
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . declareArray
    (9) instruccion -> . assingArray
    (10) instruccion -> . arrayFuncs
    (11) instruccion -> . if_else
    (12) instruccion -> . ternario
    (13) instruccion -> . while_
    (14) instruccion -> . for_
    (15) instruccion -> . transfer
    (16) instruccion -> . createInterface
    (17) instruccion -> . declareInterface
    (18) instruccion -> . modifyInterface
    (19) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (22) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (23) declarevar -> . RVAR ID EQUAL expression
    (24) declarevar -> . RVAR ID DOUBLEDOT type
    (25) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (26) declareConst -> . RCONST ID EQUAL expression
    (27) declareConst -> . RCONST ID DOUBLEDOT type
    (28) assignVar -> . ID EQUAL expression
    (29) assignVar -> . ID PLUS EQUAL expression
    (30) assignVar -> . ID LESS EQUAL expression
    (31) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (32) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (33) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (34) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (35) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (36) arrayFuncs -> . ID DOT RPOP PARA PARC
    (37) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (41) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (42) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (43) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (44) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (45) transfer -> . RBREAK
    (46) transfer -> . RCONTINUE
    (47) transfer -> . RRETURN
    (48) transfer -> . RRETURN expression
    (49) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (52) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (55) modifyInterface -> . ID DOT ID EQUAL expression
    (20) declaration_type -> . RCONST
    (21) declaration_type -> . RVAR
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    CONSOLE         shift and go to state 19
    RVAR            shift and go to state 21
    RCONST          shift and go to state 24
    ID              shift and go to state 22
    RIF             shift and go to state 27
    RWHILE          shift and go to state 28
    RFOR            shift and go to state 29
    RBREAK          shift and go to state 32
    RCONTINUE       shift and go to state 33
    RRETURN         shift and go to state 34
    RINTERFACE      shift and go to state 35
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    start                          shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    assingArray                    shift and go to state 9
    arrayFuncs                     shift and go to state 10
    if_else                        shift and go to state 11
    ternario                       shift and go to state 12
    while_                         shift and go to state 13
    for_                           shift and go to state 14
    transfer                       shift and go to state 15
    createInterface                shift and go to state 16
    declareInterface               shift and go to state 17
    modifyInterface                shift and go to state 18
    expression                     shift and go to state 23
    declaration_type               shift and go to state 26
    relacional                     shift and go to state 30
    id_                            shift and go to state 31
    interfaceContent               shift and go to state 36
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    arraysExpression               shift and go to state 41
    boolean                        shift and go to state 42

state 1

    (0) S' -> start .



state 2

    (1) start -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion SEMICOLON
    (4) instruccion -> . print
    (5) instruccion -> . declarevar
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . declareArray
    (9) instruccion -> . assingArray
    (10) instruccion -> . arrayFuncs
    (11) instruccion -> . if_else
    (12) instruccion -> . ternario
    (13) instruccion -> . while_
    (14) instruccion -> . for_
    (15) instruccion -> . transfer
    (16) instruccion -> . createInterface
    (17) instruccion -> . declareInterface
    (18) instruccion -> . modifyInterface
    (19) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (22) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (23) declarevar -> . RVAR ID EQUAL expression
    (24) declarevar -> . RVAR ID DOUBLEDOT type
    (25) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (26) declareConst -> . RCONST ID EQUAL expression
    (27) declareConst -> . RCONST ID DOUBLEDOT type
    (28) assignVar -> . ID EQUAL expression
    (29) assignVar -> . ID PLUS EQUAL expression
    (30) assignVar -> . ID LESS EQUAL expression
    (31) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (32) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (33) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (34) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (35) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (36) arrayFuncs -> . ID DOT RPOP PARA PARC
    (37) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (41) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (42) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (43) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (44) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (45) transfer -> . RBREAK
    (46) transfer -> . RCONTINUE
    (47) transfer -> . RRETURN
    (48) transfer -> . RRETURN expression
    (49) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (52) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (55) modifyInterface -> . ID DOT ID EQUAL expression
    (20) declaration_type -> . RCONST
    (21) declaration_type -> . RVAR
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    $end            reduce using rule 1 (start -> instrucciones .)
    CONSOLE         shift and go to state 19
    RVAR            shift and go to state 21
    RCONST          shift and go to state 24
    ID              shift and go to state 22
    RIF             shift and go to state 27
    RWHILE          shift and go to state 28
    RFOR            shift and go to state 29
    RBREAK          shift and go to state 32
    RCONTINUE       shift and go to state 33
    RRETURN         shift and go to state 34
    RINTERFACE      shift and go to state 35
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    instruccion                    shift and go to state 49
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    assingArray                    shift and go to state 9
    arrayFuncs                     shift and go to state 10
    if_else                        shift and go to state 11
    ternario                       shift and go to state 12
    while_                         shift and go to state 13
    for_                           shift and go to state 14
    transfer                       shift and go to state 15
    createInterface                shift and go to state 16
    declareInterface               shift and go to state 17
    modifyInterface                shift and go to state 18
    expression                     shift and go to state 23
    declaration_type               shift and go to state 26
    relacional                     shift and go to state 30
    id_                            shift and go to state 31
    interfaceContent               shift and go to state 36
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    arraysExpression               shift and go to state 41
    boolean                        shift and go to state 42

state 3

    (3) instrucciones -> instruccion . SEMICOLON

    SEMICOLON       shift and go to state 50


state 4

    (4) instruccion -> print .

    SEMICOLON       reduce using rule 4 (instruccion -> print .)


state 5

    (5) instruccion -> declarevar .

    SEMICOLON       reduce using rule 5 (instruccion -> declarevar .)


state 6

    (6) instruccion -> declareConst .

    SEMICOLON       reduce using rule 6 (instruccion -> declareConst .)


state 7

    (7) instruccion -> assignVar .

    SEMICOLON       reduce using rule 7 (instruccion -> assignVar .)


state 8

    (8) instruccion -> declareArray .

    SEMICOLON       reduce using rule 8 (instruccion -> declareArray .)


state 9

    (9) instruccion -> assingArray .

    SEMICOLON       reduce using rule 9 (instruccion -> assingArray .)


state 10

    (10) instruccion -> arrayFuncs .

    SEMICOLON       reduce using rule 10 (instruccion -> arrayFuncs .)


state 11

    (11) instruccion -> if_else .

    SEMICOLON       reduce using rule 11 (instruccion -> if_else .)


state 12

    (12) instruccion -> ternario .

    SEMICOLON       reduce using rule 12 (instruccion -> ternario .)


state 13

    (13) instruccion -> while_ .

    SEMICOLON       reduce using rule 13 (instruccion -> while_ .)


state 14

    (14) instruccion -> for_ .

    SEMICOLON       reduce using rule 14 (instruccion -> for_ .)


state 15

    (15) instruccion -> transfer .

    SEMICOLON       reduce using rule 15 (instruccion -> transfer .)


state 16

    (16) instruccion -> createInterface .

    SEMICOLON       reduce using rule 16 (instruccion -> createInterface .)


state 17

    (17) instruccion -> declareInterface .

    SEMICOLON       reduce using rule 17 (instruccion -> declareInterface .)


state 18

    (18) instruccion -> modifyInterface .

    SEMICOLON       reduce using rule 18 (instruccion -> modifyInterface .)


state 19

    (19) print -> CONSOLE . DOT LOG PARA expression_list PARC

    DOT             shift and go to state 51


state 20

    (65) expression_group -> PARA . expression PARC
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 52
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 21

    (22) declarevar -> RVAR . ID DOUBLEDOT type EQUAL expression
    (23) declarevar -> RVAR . ID EQUAL expression
    (24) declarevar -> RVAR . ID DOUBLEDOT type
    (52) declareInterface -> RVAR . ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (21) declaration_type -> RVAR .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 54

  ! ID              [ reduce using rule 21 (declaration_type -> RVAR .) ]


state 22

    (28) assignVar -> ID . EQUAL expression
    (29) assignVar -> ID . PLUS EQUAL expression
    (30) assignVar -> ID . LESS EQUAL expression
    (34) assingArray -> ID . BRACKETO expression BRACKETC EQUAL expression
    (35) arrayFuncs -> ID . DOT RPUSH PARA expression PARC
    (36) arrayFuncs -> ID . DOT RPOP PARA PARC
    (55) modifyInterface -> ID . DOT ID EQUAL expression
    (70) id_ -> ID .
    (71) id_ -> ID . BRACKETO expression BRACKETC
    (90) arraysExpression -> ID . DOT RPOP PARA PARC
    (91) arraysExpression -> ID . DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> ID . DOT RJOIN PARA PARC
    (93) arraysExpression -> ID . DOT RLENGTH PARA PARC
    (54) interfaceContent -> ID . DOUBLEDOT expression
    (66) interfaceContent -> ID . DOT RKEYS PARA PARC
    (67) interfaceContent -> ID . DOT RVALUES PARA PARC

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    EQUAL           shift and go to state 55
    PLUS            shift and go to state 56
    LESS            shift and go to state 57
    BRACKETO        shift and go to state 58
    DOT             shift and go to state 59
    QUESTIONM       reduce using rule 70 (id_ -> ID .)
    BY              reduce using rule 70 (id_ -> ID .)
    DIVIDED         reduce using rule 70 (id_ -> ID .)
    MODUL           reduce using rule 70 (id_ -> ID .)
    DEQUAL          reduce using rule 70 (id_ -> ID .)
    DIFERENT        reduce using rule 70 (id_ -> ID .)
    MINOR           reduce using rule 70 (id_ -> ID .)
    MINOREQUAL      reduce using rule 70 (id_ -> ID .)
    GREATER         reduce using rule 70 (id_ -> ID .)
    GREATEREQUAL    reduce using rule 70 (id_ -> ID .)
    AND             reduce using rule 70 (id_ -> ID .)
    OR              reduce using rule 70 (id_ -> ID .)
    DOUBLEDOT       shift and go to state 60

  ! PLUS            [ reduce using rule 70 (id_ -> ID .) ]
  ! LESS            [ reduce using rule 70 (id_ -> ID .) ]


state 23

    (41) ternario -> expression . QUESTIONM expression DOUBLEDOT expression
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    QUESTIONM       shift and go to state 61
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74


state 24

    (25) declareConst -> RCONST . ID DOUBLEDOT type EQUAL expression
    (26) declareConst -> RCONST . ID EQUAL expression
    (27) declareConst -> RCONST . ID DOUBLEDOT type
    (20) declaration_type -> RCONST .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 75

  ! ID              [ reduce using rule 20 (declaration_type -> RCONST .) ]


state 25

    (77) aritmetica -> LESS . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 76
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 26

    (31) declareArray -> declaration_type . ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (32) declareArray -> declaration_type . ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (33) declareArray -> declaration_type . ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC

    ID              shift and go to state 77


state 27

    (37) if_else -> RIF . PARA expression PARC LLAVEA instrucciones LLAVEC else

    PARA            shift and go to state 78


state 28

    (42) while_ -> RWHILE . PARA expression PARC LLAVEA instrucciones LLAVEC

    PARA            shift and go to state 79


state 29

    (43) for_ -> RFOR . PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (44) for_ -> RFOR . PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC

    PARA            shift and go to state 80


state 30

    (58) expression -> relacional .

    QUESTIONM       reduce using rule 58 (expression -> relacional .)
    PLUS            reduce using rule 58 (expression -> relacional .)
    BY              reduce using rule 58 (expression -> relacional .)
    DIVIDED         reduce using rule 58 (expression -> relacional .)
    LESS            reduce using rule 58 (expression -> relacional .)
    MODUL           reduce using rule 58 (expression -> relacional .)
    DEQUAL          reduce using rule 58 (expression -> relacional .)
    DIFERENT        reduce using rule 58 (expression -> relacional .)
    MINOR           reduce using rule 58 (expression -> relacional .)
    MINOREQUAL      reduce using rule 58 (expression -> relacional .)
    GREATER         reduce using rule 58 (expression -> relacional .)
    GREATEREQUAL    reduce using rule 58 (expression -> relacional .)
    AND             reduce using rule 58 (expression -> relacional .)
    OR              reduce using rule 58 (expression -> relacional .)
    PARC            reduce using rule 58 (expression -> relacional .)
    SEMICOLON       reduce using rule 58 (expression -> relacional .)
    BRACKETC        reduce using rule 58 (expression -> relacional .)
    COMMA           reduce using rule 58 (expression -> relacional .)
    DOUBLEDOT       reduce using rule 58 (expression -> relacional .)
    LLAVEC          reduce using rule 58 (expression -> relacional .)


state 31

    (61) expression -> id_ .

    QUESTIONM       reduce using rule 61 (expression -> id_ .)
    PLUS            reduce using rule 61 (expression -> id_ .)
    BY              reduce using rule 61 (expression -> id_ .)
    DIVIDED         reduce using rule 61 (expression -> id_ .)
    LESS            reduce using rule 61 (expression -> id_ .)
    MODUL           reduce using rule 61 (expression -> id_ .)
    DEQUAL          reduce using rule 61 (expression -> id_ .)
    DIFERENT        reduce using rule 61 (expression -> id_ .)
    MINOR           reduce using rule 61 (expression -> id_ .)
    MINOREQUAL      reduce using rule 61 (expression -> id_ .)
    GREATER         reduce using rule 61 (expression -> id_ .)
    GREATEREQUAL    reduce using rule 61 (expression -> id_ .)
    AND             reduce using rule 61 (expression -> id_ .)
    OR              reduce using rule 61 (expression -> id_ .)
    PARC            reduce using rule 61 (expression -> id_ .)
    SEMICOLON       reduce using rule 61 (expression -> id_ .)
    BRACKETC        reduce using rule 61 (expression -> id_ .)
    COMMA           reduce using rule 61 (expression -> id_ .)
    DOUBLEDOT       reduce using rule 61 (expression -> id_ .)
    LLAVEC          reduce using rule 61 (expression -> id_ .)


state 32

    (45) transfer -> RBREAK .

    SEMICOLON       reduce using rule 45 (transfer -> RBREAK .)


state 33

    (46) transfer -> RCONTINUE .

    SEMICOLON       reduce using rule 46 (transfer -> RCONTINUE .)


state 34

    (47) transfer -> RRETURN .
    (48) transfer -> RRETURN . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    SEMICOLON       reduce using rule 47 (transfer -> RRETURN .)
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 81
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 35

    (49) createInterface -> RINTERFACE . ID LLAVEA attributesList LLAVEC

    ID              shift and go to state 82


state 36

    (63) expression -> interfaceContent .
    (53) interfaceContent -> interfaceContent . COMMA ID DOUBLEDOT expression

  ! shift/reduce conflict for COMMA resolved as shift
    QUESTIONM       reduce using rule 63 (expression -> interfaceContent .)
    PLUS            reduce using rule 63 (expression -> interfaceContent .)
    BY              reduce using rule 63 (expression -> interfaceContent .)
    DIVIDED         reduce using rule 63 (expression -> interfaceContent .)
    LESS            reduce using rule 63 (expression -> interfaceContent .)
    MODUL           reduce using rule 63 (expression -> interfaceContent .)
    DEQUAL          reduce using rule 63 (expression -> interfaceContent .)
    DIFERENT        reduce using rule 63 (expression -> interfaceContent .)
    MINOR           reduce using rule 63 (expression -> interfaceContent .)
    MINOREQUAL      reduce using rule 63 (expression -> interfaceContent .)
    GREATER         reduce using rule 63 (expression -> interfaceContent .)
    GREATEREQUAL    reduce using rule 63 (expression -> interfaceContent .)
    AND             reduce using rule 63 (expression -> interfaceContent .)
    OR              reduce using rule 63 (expression -> interfaceContent .)
    PARC            reduce using rule 63 (expression -> interfaceContent .)
    SEMICOLON       reduce using rule 63 (expression -> interfaceContent .)
    BRACKETC        reduce using rule 63 (expression -> interfaceContent .)
    DOUBLEDOT       reduce using rule 63 (expression -> interfaceContent .)
    LLAVEC          reduce using rule 63 (expression -> interfaceContent .)
    COMMA           shift and go to state 83

  ! COMMA           [ reduce using rule 63 (expression -> interfaceContent .) ]


state 37

    (56) expression -> primitivo .

    QUESTIONM       reduce using rule 56 (expression -> primitivo .)
    PLUS            reduce using rule 56 (expression -> primitivo .)
    BY              reduce using rule 56 (expression -> primitivo .)
    DIVIDED         reduce using rule 56 (expression -> primitivo .)
    LESS            reduce using rule 56 (expression -> primitivo .)
    MODUL           reduce using rule 56 (expression -> primitivo .)
    DEQUAL          reduce using rule 56 (expression -> primitivo .)
    DIFERENT        reduce using rule 56 (expression -> primitivo .)
    MINOR           reduce using rule 56 (expression -> primitivo .)
    MINOREQUAL      reduce using rule 56 (expression -> primitivo .)
    GREATER         reduce using rule 56 (expression -> primitivo .)
    GREATEREQUAL    reduce using rule 56 (expression -> primitivo .)
    AND             reduce using rule 56 (expression -> primitivo .)
    OR              reduce using rule 56 (expression -> primitivo .)
    PARC            reduce using rule 56 (expression -> primitivo .)
    SEMICOLON       reduce using rule 56 (expression -> primitivo .)
    BRACKETC        reduce using rule 56 (expression -> primitivo .)
    COMMA           reduce using rule 56 (expression -> primitivo .)
    DOUBLEDOT       reduce using rule 56 (expression -> primitivo .)
    LLAVEC          reduce using rule 56 (expression -> primitivo .)


state 38

    (57) expression -> aritmetica .

    QUESTIONM       reduce using rule 57 (expression -> aritmetica .)
    PLUS            reduce using rule 57 (expression -> aritmetica .)
    BY              reduce using rule 57 (expression -> aritmetica .)
    DIVIDED         reduce using rule 57 (expression -> aritmetica .)
    LESS            reduce using rule 57 (expression -> aritmetica .)
    MODUL           reduce using rule 57 (expression -> aritmetica .)
    DEQUAL          reduce using rule 57 (expression -> aritmetica .)
    DIFERENT        reduce using rule 57 (expression -> aritmetica .)
    MINOR           reduce using rule 57 (expression -> aritmetica .)
    MINOREQUAL      reduce using rule 57 (expression -> aritmetica .)
    GREATER         reduce using rule 57 (expression -> aritmetica .)
    GREATEREQUAL    reduce using rule 57 (expression -> aritmetica .)
    AND             reduce using rule 57 (expression -> aritmetica .)
    OR              reduce using rule 57 (expression -> aritmetica .)
    PARC            reduce using rule 57 (expression -> aritmetica .)
    SEMICOLON       reduce using rule 57 (expression -> aritmetica .)
    BRACKETC        reduce using rule 57 (expression -> aritmetica .)
    COMMA           reduce using rule 57 (expression -> aritmetica .)
    DOUBLEDOT       reduce using rule 57 (expression -> aritmetica .)
    LLAVEC          reduce using rule 57 (expression -> aritmetica .)


state 39

    (59) expression -> logica .

    QUESTIONM       reduce using rule 59 (expression -> logica .)
    PLUS            reduce using rule 59 (expression -> logica .)
    BY              reduce using rule 59 (expression -> logica .)
    DIVIDED         reduce using rule 59 (expression -> logica .)
    LESS            reduce using rule 59 (expression -> logica .)
    MODUL           reduce using rule 59 (expression -> logica .)
    DEQUAL          reduce using rule 59 (expression -> logica .)
    DIFERENT        reduce using rule 59 (expression -> logica .)
    MINOR           reduce using rule 59 (expression -> logica .)
    MINOREQUAL      reduce using rule 59 (expression -> logica .)
    GREATER         reduce using rule 59 (expression -> logica .)
    GREATEREQUAL    reduce using rule 59 (expression -> logica .)
    AND             reduce using rule 59 (expression -> logica .)
    OR              reduce using rule 59 (expression -> logica .)
    PARC            reduce using rule 59 (expression -> logica .)
    SEMICOLON       reduce using rule 59 (expression -> logica .)
    BRACKETC        reduce using rule 59 (expression -> logica .)
    COMMA           reduce using rule 59 (expression -> logica .)
    DOUBLEDOT       reduce using rule 59 (expression -> logica .)
    LLAVEC          reduce using rule 59 (expression -> logica .)


state 40

    (60) expression -> expression_group .

    QUESTIONM       reduce using rule 60 (expression -> expression_group .)
    PLUS            reduce using rule 60 (expression -> expression_group .)
    BY              reduce using rule 60 (expression -> expression_group .)
    DIVIDED         reduce using rule 60 (expression -> expression_group .)
    LESS            reduce using rule 60 (expression -> expression_group .)
    MODUL           reduce using rule 60 (expression -> expression_group .)
    DEQUAL          reduce using rule 60 (expression -> expression_group .)
    DIFERENT        reduce using rule 60 (expression -> expression_group .)
    MINOR           reduce using rule 60 (expression -> expression_group .)
    MINOREQUAL      reduce using rule 60 (expression -> expression_group .)
    GREATER         reduce using rule 60 (expression -> expression_group .)
    GREATEREQUAL    reduce using rule 60 (expression -> expression_group .)
    AND             reduce using rule 60 (expression -> expression_group .)
    OR              reduce using rule 60 (expression -> expression_group .)
    PARC            reduce using rule 60 (expression -> expression_group .)
    SEMICOLON       reduce using rule 60 (expression -> expression_group .)
    BRACKETC        reduce using rule 60 (expression -> expression_group .)
    COMMA           reduce using rule 60 (expression -> expression_group .)
    DOUBLEDOT       reduce using rule 60 (expression -> expression_group .)
    LLAVEC          reduce using rule 60 (expression -> expression_group .)


state 41

    (62) expression -> arraysExpression .

    QUESTIONM       reduce using rule 62 (expression -> arraysExpression .)
    PLUS            reduce using rule 62 (expression -> arraysExpression .)
    BY              reduce using rule 62 (expression -> arraysExpression .)
    DIVIDED         reduce using rule 62 (expression -> arraysExpression .)
    LESS            reduce using rule 62 (expression -> arraysExpression .)
    MODUL           reduce using rule 62 (expression -> arraysExpression .)
    DEQUAL          reduce using rule 62 (expression -> arraysExpression .)
    DIFERENT        reduce using rule 62 (expression -> arraysExpression .)
    MINOR           reduce using rule 62 (expression -> arraysExpression .)
    MINOREQUAL      reduce using rule 62 (expression -> arraysExpression .)
    GREATER         reduce using rule 62 (expression -> arraysExpression .)
    GREATEREQUAL    reduce using rule 62 (expression -> arraysExpression .)
    AND             reduce using rule 62 (expression -> arraysExpression .)
    OR              reduce using rule 62 (expression -> arraysExpression .)
    PARC            reduce using rule 62 (expression -> arraysExpression .)
    SEMICOLON       reduce using rule 62 (expression -> arraysExpression .)
    BRACKETC        reduce using rule 62 (expression -> arraysExpression .)
    COMMA           reduce using rule 62 (expression -> arraysExpression .)
    DOUBLEDOT       reduce using rule 62 (expression -> arraysExpression .)
    LLAVEC          reduce using rule 62 (expression -> arraysExpression .)


state 42

    (64) expression -> boolean .

    QUESTIONM       reduce using rule 64 (expression -> boolean .)
    PLUS            reduce using rule 64 (expression -> boolean .)
    BY              reduce using rule 64 (expression -> boolean .)
    DIVIDED         reduce using rule 64 (expression -> boolean .)
    LESS            reduce using rule 64 (expression -> boolean .)
    MODUL           reduce using rule 64 (expression -> boolean .)
    DEQUAL          reduce using rule 64 (expression -> boolean .)
    DIFERENT        reduce using rule 64 (expression -> boolean .)
    MINOR           reduce using rule 64 (expression -> boolean .)
    MINOREQUAL      reduce using rule 64 (expression -> boolean .)
    GREATER         reduce using rule 64 (expression -> boolean .)
    GREATEREQUAL    reduce using rule 64 (expression -> boolean .)
    AND             reduce using rule 64 (expression -> boolean .)
    OR              reduce using rule 64 (expression -> boolean .)
    PARC            reduce using rule 64 (expression -> boolean .)
    SEMICOLON       reduce using rule 64 (expression -> boolean .)
    BRACKETC        reduce using rule 64 (expression -> boolean .)
    COMMA           reduce using rule 64 (expression -> boolean .)
    DOUBLEDOT       reduce using rule 64 (expression -> boolean .)
    LLAVEC          reduce using rule 64 (expression -> boolean .)


state 43

    (87) primitivo -> NUMBER .

    QUESTIONM       reduce using rule 87 (primitivo -> NUMBER .)
    PLUS            reduce using rule 87 (primitivo -> NUMBER .)
    BY              reduce using rule 87 (primitivo -> NUMBER .)
    DIVIDED         reduce using rule 87 (primitivo -> NUMBER .)
    LESS            reduce using rule 87 (primitivo -> NUMBER .)
    MODUL           reduce using rule 87 (primitivo -> NUMBER .)
    DEQUAL          reduce using rule 87 (primitivo -> NUMBER .)
    DIFERENT        reduce using rule 87 (primitivo -> NUMBER .)
    MINOR           reduce using rule 87 (primitivo -> NUMBER .)
    MINOREQUAL      reduce using rule 87 (primitivo -> NUMBER .)
    GREATER         reduce using rule 87 (primitivo -> NUMBER .)
    GREATEREQUAL    reduce using rule 87 (primitivo -> NUMBER .)
    AND             reduce using rule 87 (primitivo -> NUMBER .)
    OR              reduce using rule 87 (primitivo -> NUMBER .)
    PARC            reduce using rule 87 (primitivo -> NUMBER .)
    SEMICOLON       reduce using rule 87 (primitivo -> NUMBER .)
    BRACKETC        reduce using rule 87 (primitivo -> NUMBER .)
    COMMA           reduce using rule 87 (primitivo -> NUMBER .)
    DOUBLEDOT       reduce using rule 87 (primitivo -> NUMBER .)
    LLAVEC          reduce using rule 87 (primitivo -> NUMBER .)


state 44

    (88) primitivo -> FLOAT .

    QUESTIONM       reduce using rule 88 (primitivo -> FLOAT .)
    PLUS            reduce using rule 88 (primitivo -> FLOAT .)
    BY              reduce using rule 88 (primitivo -> FLOAT .)
    DIVIDED         reduce using rule 88 (primitivo -> FLOAT .)
    LESS            reduce using rule 88 (primitivo -> FLOAT .)
    MODUL           reduce using rule 88 (primitivo -> FLOAT .)
    DEQUAL          reduce using rule 88 (primitivo -> FLOAT .)
    DIFERENT        reduce using rule 88 (primitivo -> FLOAT .)
    MINOR           reduce using rule 88 (primitivo -> FLOAT .)
    MINOREQUAL      reduce using rule 88 (primitivo -> FLOAT .)
    GREATER         reduce using rule 88 (primitivo -> FLOAT .)
    GREATEREQUAL    reduce using rule 88 (primitivo -> FLOAT .)
    AND             reduce using rule 88 (primitivo -> FLOAT .)
    OR              reduce using rule 88 (primitivo -> FLOAT .)
    PARC            reduce using rule 88 (primitivo -> FLOAT .)
    SEMICOLON       reduce using rule 88 (primitivo -> FLOAT .)
    BRACKETC        reduce using rule 88 (primitivo -> FLOAT .)
    COMMA           reduce using rule 88 (primitivo -> FLOAT .)
    DOUBLEDOT       reduce using rule 88 (primitivo -> FLOAT .)
    LLAVEC          reduce using rule 88 (primitivo -> FLOAT .)


state 45

    (89) primitivo -> STRING .

    QUESTIONM       reduce using rule 89 (primitivo -> STRING .)
    PLUS            reduce using rule 89 (primitivo -> STRING .)
    BY              reduce using rule 89 (primitivo -> STRING .)
    DIVIDED         reduce using rule 89 (primitivo -> STRING .)
    LESS            reduce using rule 89 (primitivo -> STRING .)
    MODUL           reduce using rule 89 (primitivo -> STRING .)
    DEQUAL          reduce using rule 89 (primitivo -> STRING .)
    DIFERENT        reduce using rule 89 (primitivo -> STRING .)
    MINOR           reduce using rule 89 (primitivo -> STRING .)
    MINOREQUAL      reduce using rule 89 (primitivo -> STRING .)
    GREATER         reduce using rule 89 (primitivo -> STRING .)
    GREATEREQUAL    reduce using rule 89 (primitivo -> STRING .)
    AND             reduce using rule 89 (primitivo -> STRING .)
    OR              reduce using rule 89 (primitivo -> STRING .)
    PARC            reduce using rule 89 (primitivo -> STRING .)
    SEMICOLON       reduce using rule 89 (primitivo -> STRING .)
    BRACKETC        reduce using rule 89 (primitivo -> STRING .)
    COMMA           reduce using rule 89 (primitivo -> STRING .)
    DOUBLEDOT       reduce using rule 89 (primitivo -> STRING .)
    LLAVEC          reduce using rule 89 (primitivo -> STRING .)


state 46

    (86) logica -> NOT . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 84
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 47

    (94) boolean -> TRUE .

    QUESTIONM       reduce using rule 94 (boolean -> TRUE .)
    PLUS            reduce using rule 94 (boolean -> TRUE .)
    BY              reduce using rule 94 (boolean -> TRUE .)
    DIVIDED         reduce using rule 94 (boolean -> TRUE .)
    LESS            reduce using rule 94 (boolean -> TRUE .)
    MODUL           reduce using rule 94 (boolean -> TRUE .)
    DEQUAL          reduce using rule 94 (boolean -> TRUE .)
    DIFERENT        reduce using rule 94 (boolean -> TRUE .)
    MINOR           reduce using rule 94 (boolean -> TRUE .)
    MINOREQUAL      reduce using rule 94 (boolean -> TRUE .)
    GREATER         reduce using rule 94 (boolean -> TRUE .)
    GREATEREQUAL    reduce using rule 94 (boolean -> TRUE .)
    AND             reduce using rule 94 (boolean -> TRUE .)
    OR              reduce using rule 94 (boolean -> TRUE .)
    PARC            reduce using rule 94 (boolean -> TRUE .)
    SEMICOLON       reduce using rule 94 (boolean -> TRUE .)
    BRACKETC        reduce using rule 94 (boolean -> TRUE .)
    COMMA           reduce using rule 94 (boolean -> TRUE .)
    DOUBLEDOT       reduce using rule 94 (boolean -> TRUE .)
    LLAVEC          reduce using rule 94 (boolean -> TRUE .)


state 48

    (95) boolean -> FALSE .

    QUESTIONM       reduce using rule 95 (boolean -> FALSE .)
    PLUS            reduce using rule 95 (boolean -> FALSE .)
    BY              reduce using rule 95 (boolean -> FALSE .)
    DIVIDED         reduce using rule 95 (boolean -> FALSE .)
    LESS            reduce using rule 95 (boolean -> FALSE .)
    MODUL           reduce using rule 95 (boolean -> FALSE .)
    DEQUAL          reduce using rule 95 (boolean -> FALSE .)
    DIFERENT        reduce using rule 95 (boolean -> FALSE .)
    MINOR           reduce using rule 95 (boolean -> FALSE .)
    MINOREQUAL      reduce using rule 95 (boolean -> FALSE .)
    GREATER         reduce using rule 95 (boolean -> FALSE .)
    GREATEREQUAL    reduce using rule 95 (boolean -> FALSE .)
    AND             reduce using rule 95 (boolean -> FALSE .)
    OR              reduce using rule 95 (boolean -> FALSE .)
    PARC            reduce using rule 95 (boolean -> FALSE .)
    SEMICOLON       reduce using rule 95 (boolean -> FALSE .)
    BRACKETC        reduce using rule 95 (boolean -> FALSE .)
    COMMA           reduce using rule 95 (boolean -> FALSE .)
    DOUBLEDOT       reduce using rule 95 (boolean -> FALSE .)
    LLAVEC          reduce using rule 95 (boolean -> FALSE .)


state 49

    (2) instrucciones -> instrucciones instruccion . SEMICOLON

    SEMICOLON       shift and go to state 85


state 50

    (3) instrucciones -> instruccion SEMICOLON .

    CONSOLE         reduce using rule 3 (instrucciones -> instruccion SEMICOLON .)
    RVAR            reduce using rule 3 (instrucciones -> instruccion SEMICOLON .)
    RCONST          reduce using rule 3 (instrucciones -> instruccion SEMICOLON .)
    ID              reduce using rule 3 (instrucciones -> instruccion SEMICOLON .)
    RIF             reduce using rule 3 (instrucciones -> instruccion SEMICOLON .)
    RWHILE          reduce using rule 3 (instrucciones -> instruccion SEMICOLON .)
    RFOR            reduce using rule 3 (instrucciones -> instruccion SEMICOLON .)
    RBREAK          reduce using rule 3 (instrucciones -> instruccion SEMICOLON .)
    RCONTINUE       reduce using rule 3 (instrucciones -> instruccion SEMICOLON .)
    RRETURN         reduce using rule 3 (instrucciones -> instruccion SEMICOLON .)
    RINTERFACE      reduce using rule 3 (instrucciones -> instruccion SEMICOLON .)
    NUMBER          reduce using rule 3 (instrucciones -> instruccion SEMICOLON .)
    FLOAT           reduce using rule 3 (instrucciones -> instruccion SEMICOLON .)
    STRING          reduce using rule 3 (instrucciones -> instruccion SEMICOLON .)
    LESS            reduce using rule 3 (instrucciones -> instruccion SEMICOLON .)
    NOT             reduce using rule 3 (instrucciones -> instruccion SEMICOLON .)
    PARA            reduce using rule 3 (instrucciones -> instruccion SEMICOLON .)
    TRUE            reduce using rule 3 (instrucciones -> instruccion SEMICOLON .)
    FALSE           reduce using rule 3 (instrucciones -> instruccion SEMICOLON .)
    $end            reduce using rule 3 (instrucciones -> instruccion SEMICOLON .)
    LLAVEC          reduce using rule 3 (instrucciones -> instruccion SEMICOLON .)


state 51

    (19) print -> CONSOLE DOT . LOG PARA expression_list PARC

    LOG             shift and go to state 86


state 52

    (65) expression_group -> PARA expression . PARC
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    PARC            shift and go to state 87
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74


state 53

    (70) id_ -> ID .
    (71) id_ -> ID . BRACKETO expression BRACKETC
    (90) arraysExpression -> ID . DOT RPOP PARA PARC
    (91) arraysExpression -> ID . DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> ID . DOT RJOIN PARA PARC
    (93) arraysExpression -> ID . DOT RLENGTH PARA PARC
    (54) interfaceContent -> ID . DOUBLEDOT expression
    (66) interfaceContent -> ID . DOT RKEYS PARA PARC
    (67) interfaceContent -> ID . DOT RVALUES PARA PARC

  ! shift/reduce conflict for DOUBLEDOT resolved as shift
    PARC            reduce using rule 70 (id_ -> ID .)
    PLUS            reduce using rule 70 (id_ -> ID .)
    BY              reduce using rule 70 (id_ -> ID .)
    DIVIDED         reduce using rule 70 (id_ -> ID .)
    LESS            reduce using rule 70 (id_ -> ID .)
    MODUL           reduce using rule 70 (id_ -> ID .)
    DEQUAL          reduce using rule 70 (id_ -> ID .)
    DIFERENT        reduce using rule 70 (id_ -> ID .)
    MINOR           reduce using rule 70 (id_ -> ID .)
    MINOREQUAL      reduce using rule 70 (id_ -> ID .)
    GREATER         reduce using rule 70 (id_ -> ID .)
    GREATEREQUAL    reduce using rule 70 (id_ -> ID .)
    AND             reduce using rule 70 (id_ -> ID .)
    OR              reduce using rule 70 (id_ -> ID .)
    QUESTIONM       reduce using rule 70 (id_ -> ID .)
    SEMICOLON       reduce using rule 70 (id_ -> ID .)
    BRACKETC        reduce using rule 70 (id_ -> ID .)
    COMMA           reduce using rule 70 (id_ -> ID .)
    LLAVEC          reduce using rule 70 (id_ -> ID .)
    BRACKETO        shift and go to state 88
    DOT             shift and go to state 89
    DOUBLEDOT       shift and go to state 60

  ! DOUBLEDOT       [ reduce using rule 70 (id_ -> ID .) ]


state 54

    (22) declarevar -> RVAR ID . DOUBLEDOT type EQUAL expression
    (23) declarevar -> RVAR ID . EQUAL expression
    (24) declarevar -> RVAR ID . DOUBLEDOT type
    (52) declareInterface -> RVAR ID . DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC

    DOUBLEDOT       shift and go to state 90
    EQUAL           shift and go to state 91


state 55

    (28) assignVar -> ID EQUAL . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 92
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 56

    (29) assignVar -> ID PLUS . EQUAL expression

    EQUAL           shift and go to state 93


state 57

    (30) assignVar -> ID LESS . EQUAL expression

    EQUAL           shift and go to state 94


state 58

    (34) assingArray -> ID BRACKETO . expression BRACKETC EQUAL expression
    (71) id_ -> ID BRACKETO . expression BRACKETC
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 95
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 59

    (35) arrayFuncs -> ID DOT . RPUSH PARA expression PARC
    (36) arrayFuncs -> ID DOT . RPOP PARA PARC
    (55) modifyInterface -> ID DOT . ID EQUAL expression
    (90) arraysExpression -> ID DOT . RPOP PARA PARC
    (91) arraysExpression -> ID DOT . RINDEXOF PARA expression PARC
    (92) arraysExpression -> ID DOT . RJOIN PARA PARC
    (93) arraysExpression -> ID DOT . RLENGTH PARA PARC
    (66) interfaceContent -> ID DOT . RKEYS PARA PARC
    (67) interfaceContent -> ID DOT . RVALUES PARA PARC

    RPUSH           shift and go to state 97
    RPOP            shift and go to state 98
    ID              shift and go to state 96
    RINDEXOF        shift and go to state 99
    RJOIN           shift and go to state 100
    RLENGTH         shift and go to state 101
    RKEYS           shift and go to state 102
    RVALUES         shift and go to state 103


state 60

    (54) interfaceContent -> ID DOUBLEDOT . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 104
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 61

    (41) ternario -> expression QUESTIONM . expression DOUBLEDOT expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 105
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 62

    (72) aritmetica -> expression PLUS . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 106
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 63

    (73) aritmetica -> expression BY . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 107
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 64

    (74) aritmetica -> expression DIVIDED . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 108
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 65

    (75) aritmetica -> expression LESS . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 109
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 66

    (76) aritmetica -> expression MODUL . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 110
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 67

    (78) relacional -> expression DEQUAL . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 111
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 68

    (79) relacional -> expression DIFERENT . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 112
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 69

    (80) relacional -> expression MINOR . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 113
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 70

    (81) relacional -> expression MINOREQUAL . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 114
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 71

    (82) relacional -> expression GREATER . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 115
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 72

    (83) relacional -> expression GREATEREQUAL . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 116
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 73

    (84) logica -> expression AND . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 117
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 74

    (85) logica -> expression OR . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 118
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 75

    (25) declareConst -> RCONST ID . DOUBLEDOT type EQUAL expression
    (26) declareConst -> RCONST ID . EQUAL expression
    (27) declareConst -> RCONST ID . DOUBLEDOT type

    DOUBLEDOT       shift and go to state 119
    EQUAL           shift and go to state 120


state 76

    (77) aritmetica -> LESS expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    QUESTIONM       reduce using rule 77 (aritmetica -> LESS expression .)
    PLUS            reduce using rule 77 (aritmetica -> LESS expression .)
    BY              reduce using rule 77 (aritmetica -> LESS expression .)
    DIVIDED         reduce using rule 77 (aritmetica -> LESS expression .)
    LESS            reduce using rule 77 (aritmetica -> LESS expression .)
    MODUL           reduce using rule 77 (aritmetica -> LESS expression .)
    DEQUAL          reduce using rule 77 (aritmetica -> LESS expression .)
    DIFERENT        reduce using rule 77 (aritmetica -> LESS expression .)
    MINOR           reduce using rule 77 (aritmetica -> LESS expression .)
    MINOREQUAL      reduce using rule 77 (aritmetica -> LESS expression .)
    GREATER         reduce using rule 77 (aritmetica -> LESS expression .)
    GREATEREQUAL    reduce using rule 77 (aritmetica -> LESS expression .)
    AND             reduce using rule 77 (aritmetica -> LESS expression .)
    OR              reduce using rule 77 (aritmetica -> LESS expression .)
    PARC            reduce using rule 77 (aritmetica -> LESS expression .)
    SEMICOLON       reduce using rule 77 (aritmetica -> LESS expression .)
    BRACKETC        reduce using rule 77 (aritmetica -> LESS expression .)
    COMMA           reduce using rule 77 (aritmetica -> LESS expression .)
    DOUBLEDOT       reduce using rule 77 (aritmetica -> LESS expression .)
    LLAVEC          reduce using rule 77 (aritmetica -> LESS expression .)

  ! PLUS            [ shift and go to state 62 ]
  ! BY              [ shift and go to state 63 ]
  ! DIVIDED         [ shift and go to state 64 ]
  ! LESS            [ shift and go to state 65 ]
  ! MODUL           [ shift and go to state 66 ]
  ! DEQUAL          [ shift and go to state 67 ]
  ! DIFERENT        [ shift and go to state 68 ]
  ! MINOR           [ shift and go to state 69 ]
  ! MINOREQUAL      [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! GREATEREQUAL    [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]


state 77

    (31) declareArray -> declaration_type ID . DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (32) declareArray -> declaration_type ID . DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (33) declareArray -> declaration_type ID . DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC

    DOUBLEDOT       shift and go to state 121


state 78

    (37) if_else -> RIF PARA . expression PARC LLAVEA instrucciones LLAVEC else
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 122
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 79

    (42) while_ -> RWHILE PARA . expression PARC LLAVEA instrucciones LLAVEC
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 123
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 80

    (43) for_ -> RFOR PARA . declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (44) for_ -> RFOR PARA . declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (22) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (23) declarevar -> . RVAR ID EQUAL expression
    (24) declarevar -> . RVAR ID DOUBLEDOT type

    RVAR            shift and go to state 125

    declarevar                     shift and go to state 124

state 81

    (48) transfer -> RRETURN expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    SEMICOLON       reduce using rule 48 (transfer -> RRETURN expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74


state 82

    (49) createInterface -> RINTERFACE ID . LLAVEA attributesList LLAVEC

    LLAVEA          shift and go to state 126


state 83

    (53) interfaceContent -> interfaceContent COMMA . ID DOUBLEDOT expression

    ID              shift and go to state 127


state 84

    (86) logica -> NOT expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    QUESTIONM       reduce using rule 86 (logica -> NOT expression .)
    AND             reduce using rule 86 (logica -> NOT expression .)
    OR              reduce using rule 86 (logica -> NOT expression .)
    PARC            reduce using rule 86 (logica -> NOT expression .)
    SEMICOLON       reduce using rule 86 (logica -> NOT expression .)
    BRACKETC        reduce using rule 86 (logica -> NOT expression .)
    COMMA           reduce using rule 86 (logica -> NOT expression .)
    DOUBLEDOT       reduce using rule 86 (logica -> NOT expression .)
    LLAVEC          reduce using rule 86 (logica -> NOT expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72

  ! PLUS            [ reduce using rule 86 (logica -> NOT expression .) ]
  ! BY              [ reduce using rule 86 (logica -> NOT expression .) ]
  ! DIVIDED         [ reduce using rule 86 (logica -> NOT expression .) ]
  ! LESS            [ reduce using rule 86 (logica -> NOT expression .) ]
  ! MODUL           [ reduce using rule 86 (logica -> NOT expression .) ]
  ! DEQUAL          [ reduce using rule 86 (logica -> NOT expression .) ]
  ! DIFERENT        [ reduce using rule 86 (logica -> NOT expression .) ]
  ! MINOR           [ reduce using rule 86 (logica -> NOT expression .) ]
  ! MINOREQUAL      [ reduce using rule 86 (logica -> NOT expression .) ]
  ! GREATER         [ reduce using rule 86 (logica -> NOT expression .) ]
  ! GREATEREQUAL    [ reduce using rule 86 (logica -> NOT expression .) ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]


state 85

    (2) instrucciones -> instrucciones instruccion SEMICOLON .

    CONSOLE         reduce using rule 2 (instrucciones -> instrucciones instruccion SEMICOLON .)
    RVAR            reduce using rule 2 (instrucciones -> instrucciones instruccion SEMICOLON .)
    RCONST          reduce using rule 2 (instrucciones -> instrucciones instruccion SEMICOLON .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion SEMICOLON .)
    RIF             reduce using rule 2 (instrucciones -> instrucciones instruccion SEMICOLON .)
    RWHILE          reduce using rule 2 (instrucciones -> instrucciones instruccion SEMICOLON .)
    RFOR            reduce using rule 2 (instrucciones -> instrucciones instruccion SEMICOLON .)
    RBREAK          reduce using rule 2 (instrucciones -> instrucciones instruccion SEMICOLON .)
    RCONTINUE       reduce using rule 2 (instrucciones -> instrucciones instruccion SEMICOLON .)
    RRETURN         reduce using rule 2 (instrucciones -> instrucciones instruccion SEMICOLON .)
    RINTERFACE      reduce using rule 2 (instrucciones -> instrucciones instruccion SEMICOLON .)
    NUMBER          reduce using rule 2 (instrucciones -> instrucciones instruccion SEMICOLON .)
    FLOAT           reduce using rule 2 (instrucciones -> instrucciones instruccion SEMICOLON .)
    STRING          reduce using rule 2 (instrucciones -> instrucciones instruccion SEMICOLON .)
    LESS            reduce using rule 2 (instrucciones -> instrucciones instruccion SEMICOLON .)
    NOT             reduce using rule 2 (instrucciones -> instrucciones instruccion SEMICOLON .)
    PARA            reduce using rule 2 (instrucciones -> instrucciones instruccion SEMICOLON .)
    TRUE            reduce using rule 2 (instrucciones -> instrucciones instruccion SEMICOLON .)
    FALSE           reduce using rule 2 (instrucciones -> instrucciones instruccion SEMICOLON .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion SEMICOLON .)
    LLAVEC          reduce using rule 2 (instrucciones -> instrucciones instruccion SEMICOLON .)


state 86

    (19) print -> CONSOLE DOT LOG . PARA expression_list PARC

    PARA            shift and go to state 128


state 87

    (65) expression_group -> PARA expression PARC .

    QUESTIONM       reduce using rule 65 (expression_group -> PARA expression PARC .)
    PLUS            reduce using rule 65 (expression_group -> PARA expression PARC .)
    BY              reduce using rule 65 (expression_group -> PARA expression PARC .)
    DIVIDED         reduce using rule 65 (expression_group -> PARA expression PARC .)
    LESS            reduce using rule 65 (expression_group -> PARA expression PARC .)
    MODUL           reduce using rule 65 (expression_group -> PARA expression PARC .)
    DEQUAL          reduce using rule 65 (expression_group -> PARA expression PARC .)
    DIFERENT        reduce using rule 65 (expression_group -> PARA expression PARC .)
    MINOR           reduce using rule 65 (expression_group -> PARA expression PARC .)
    MINOREQUAL      reduce using rule 65 (expression_group -> PARA expression PARC .)
    GREATER         reduce using rule 65 (expression_group -> PARA expression PARC .)
    GREATEREQUAL    reduce using rule 65 (expression_group -> PARA expression PARC .)
    AND             reduce using rule 65 (expression_group -> PARA expression PARC .)
    OR              reduce using rule 65 (expression_group -> PARA expression PARC .)
    PARC            reduce using rule 65 (expression_group -> PARA expression PARC .)
    SEMICOLON       reduce using rule 65 (expression_group -> PARA expression PARC .)
    BRACKETC        reduce using rule 65 (expression_group -> PARA expression PARC .)
    COMMA           reduce using rule 65 (expression_group -> PARA expression PARC .)
    DOUBLEDOT       reduce using rule 65 (expression_group -> PARA expression PARC .)
    LLAVEC          reduce using rule 65 (expression_group -> PARA expression PARC .)


state 88

    (71) id_ -> ID BRACKETO . expression BRACKETC
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 129
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 89

    (90) arraysExpression -> ID DOT . RPOP PARA PARC
    (91) arraysExpression -> ID DOT . RINDEXOF PARA expression PARC
    (92) arraysExpression -> ID DOT . RJOIN PARA PARC
    (93) arraysExpression -> ID DOT . RLENGTH PARA PARC
    (66) interfaceContent -> ID DOT . RKEYS PARA PARC
    (67) interfaceContent -> ID DOT . RVALUES PARA PARC

    RPOP            shift and go to state 130
    RINDEXOF        shift and go to state 99
    RJOIN           shift and go to state 100
    RLENGTH         shift and go to state 101
    RKEYS           shift and go to state 102
    RVALUES         shift and go to state 103


state 90

    (22) declarevar -> RVAR ID DOUBLEDOT . type EQUAL expression
    (24) declarevar -> RVAR ID DOUBLEDOT . type
    (52) declareInterface -> RVAR ID DOUBLEDOT . ID EQUAL LLAVEA interfaceContent LLAVEC
    (96) type -> . RNUMBER
    (97) type -> . RFLOAT
    (98) type -> . RSTRING
    (99) type -> . RBOOLEAN

    ID              shift and go to state 131
    RNUMBER         shift and go to state 133
    RFLOAT          shift and go to state 134
    RSTRING         shift and go to state 135
    RBOOLEAN        shift and go to state 136

    type                           shift and go to state 132

state 91

    (23) declarevar -> RVAR ID EQUAL . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 137
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 92

    (28) assignVar -> ID EQUAL expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    SEMICOLON       reduce using rule 28 (assignVar -> ID EQUAL expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74


state 93

    (29) assignVar -> ID PLUS EQUAL . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 138
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 94

    (30) assignVar -> ID LESS EQUAL . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 139
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 95

    (34) assingArray -> ID BRACKETO expression . BRACKETC EQUAL expression
    (71) id_ -> ID BRACKETO expression . BRACKETC
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    BRACKETC        shift and go to state 140
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74


state 96

    (55) modifyInterface -> ID DOT ID . EQUAL expression

    EQUAL           shift and go to state 141


state 97

    (35) arrayFuncs -> ID DOT RPUSH . PARA expression PARC

    PARA            shift and go to state 142


state 98

    (36) arrayFuncs -> ID DOT RPOP . PARA PARC
    (90) arraysExpression -> ID DOT RPOP . PARA PARC

    PARA            shift and go to state 143


state 99

    (91) arraysExpression -> ID DOT RINDEXOF . PARA expression PARC

    PARA            shift and go to state 144


state 100

    (92) arraysExpression -> ID DOT RJOIN . PARA PARC

    PARA            shift and go to state 145


state 101

    (93) arraysExpression -> ID DOT RLENGTH . PARA PARC

    PARA            shift and go to state 146


state 102

    (66) interfaceContent -> ID DOT RKEYS . PARA PARC

    PARA            shift and go to state 147


state 103

    (67) interfaceContent -> ID DOT RVALUES . PARA PARC

    PARA            shift and go to state 148


state 104

    (54) interfaceContent -> ID DOUBLEDOT expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for BY resolved as shift
  ! shift/reduce conflict for DIVIDED resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for MODUL resolved as shift
  ! shift/reduce conflict for DEQUAL resolved as shift
  ! shift/reduce conflict for DIFERENT resolved as shift
  ! shift/reduce conflict for MINOR resolved as shift
  ! shift/reduce conflict for MINOREQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    COMMA           reduce using rule 54 (interfaceContent -> ID DOUBLEDOT expression .)
    QUESTIONM       reduce using rule 54 (interfaceContent -> ID DOUBLEDOT expression .)
    PARC            reduce using rule 54 (interfaceContent -> ID DOUBLEDOT expression .)
    SEMICOLON       reduce using rule 54 (interfaceContent -> ID DOUBLEDOT expression .)
    BRACKETC        reduce using rule 54 (interfaceContent -> ID DOUBLEDOT expression .)
    DOUBLEDOT       reduce using rule 54 (interfaceContent -> ID DOUBLEDOT expression .)
    LLAVEC          reduce using rule 54 (interfaceContent -> ID DOUBLEDOT expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74

  ! PLUS            [ reduce using rule 54 (interfaceContent -> ID DOUBLEDOT expression .) ]
  ! BY              [ reduce using rule 54 (interfaceContent -> ID DOUBLEDOT expression .) ]
  ! DIVIDED         [ reduce using rule 54 (interfaceContent -> ID DOUBLEDOT expression .) ]
  ! LESS            [ reduce using rule 54 (interfaceContent -> ID DOUBLEDOT expression .) ]
  ! MODUL           [ reduce using rule 54 (interfaceContent -> ID DOUBLEDOT expression .) ]
  ! DEQUAL          [ reduce using rule 54 (interfaceContent -> ID DOUBLEDOT expression .) ]
  ! DIFERENT        [ reduce using rule 54 (interfaceContent -> ID DOUBLEDOT expression .) ]
  ! MINOR           [ reduce using rule 54 (interfaceContent -> ID DOUBLEDOT expression .) ]
  ! MINOREQUAL      [ reduce using rule 54 (interfaceContent -> ID DOUBLEDOT expression .) ]
  ! GREATER         [ reduce using rule 54 (interfaceContent -> ID DOUBLEDOT expression .) ]
  ! GREATEREQUAL    [ reduce using rule 54 (interfaceContent -> ID DOUBLEDOT expression .) ]
  ! AND             [ reduce using rule 54 (interfaceContent -> ID DOUBLEDOT expression .) ]
  ! OR              [ reduce using rule 54 (interfaceContent -> ID DOUBLEDOT expression .) ]


state 105

    (41) ternario -> expression QUESTIONM expression . DOUBLEDOT expression
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    DOUBLEDOT       shift and go to state 149
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74


state 106

    (72) aritmetica -> expression PLUS expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    QUESTIONM       reduce using rule 72 (aritmetica -> expression PLUS expression .)
    PLUS            reduce using rule 72 (aritmetica -> expression PLUS expression .)
    LESS            reduce using rule 72 (aritmetica -> expression PLUS expression .)
    DEQUAL          reduce using rule 72 (aritmetica -> expression PLUS expression .)
    DIFERENT        reduce using rule 72 (aritmetica -> expression PLUS expression .)
    MINOR           reduce using rule 72 (aritmetica -> expression PLUS expression .)
    MINOREQUAL      reduce using rule 72 (aritmetica -> expression PLUS expression .)
    GREATER         reduce using rule 72 (aritmetica -> expression PLUS expression .)
    GREATEREQUAL    reduce using rule 72 (aritmetica -> expression PLUS expression .)
    AND             reduce using rule 72 (aritmetica -> expression PLUS expression .)
    OR              reduce using rule 72 (aritmetica -> expression PLUS expression .)
    PARC            reduce using rule 72 (aritmetica -> expression PLUS expression .)
    SEMICOLON       reduce using rule 72 (aritmetica -> expression PLUS expression .)
    BRACKETC        reduce using rule 72 (aritmetica -> expression PLUS expression .)
    COMMA           reduce using rule 72 (aritmetica -> expression PLUS expression .)
    DOUBLEDOT       reduce using rule 72 (aritmetica -> expression PLUS expression .)
    LLAVEC          reduce using rule 72 (aritmetica -> expression PLUS expression .)
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    MODUL           shift and go to state 66

  ! BY              [ reduce using rule 72 (aritmetica -> expression PLUS expression .) ]
  ! DIVIDED         [ reduce using rule 72 (aritmetica -> expression PLUS expression .) ]
  ! MODUL           [ reduce using rule 72 (aritmetica -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 62 ]
  ! LESS            [ shift and go to state 65 ]
  ! DEQUAL          [ shift and go to state 67 ]
  ! DIFERENT        [ shift and go to state 68 ]
  ! MINOR           [ shift and go to state 69 ]
  ! MINOREQUAL      [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! GREATEREQUAL    [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]


state 107

    (73) aritmetica -> expression BY expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    QUESTIONM       reduce using rule 73 (aritmetica -> expression BY expression .)
    PLUS            reduce using rule 73 (aritmetica -> expression BY expression .)
    BY              reduce using rule 73 (aritmetica -> expression BY expression .)
    DIVIDED         reduce using rule 73 (aritmetica -> expression BY expression .)
    LESS            reduce using rule 73 (aritmetica -> expression BY expression .)
    MODUL           reduce using rule 73 (aritmetica -> expression BY expression .)
    DEQUAL          reduce using rule 73 (aritmetica -> expression BY expression .)
    DIFERENT        reduce using rule 73 (aritmetica -> expression BY expression .)
    MINOR           reduce using rule 73 (aritmetica -> expression BY expression .)
    MINOREQUAL      reduce using rule 73 (aritmetica -> expression BY expression .)
    GREATER         reduce using rule 73 (aritmetica -> expression BY expression .)
    GREATEREQUAL    reduce using rule 73 (aritmetica -> expression BY expression .)
    AND             reduce using rule 73 (aritmetica -> expression BY expression .)
    OR              reduce using rule 73 (aritmetica -> expression BY expression .)
    PARC            reduce using rule 73 (aritmetica -> expression BY expression .)
    SEMICOLON       reduce using rule 73 (aritmetica -> expression BY expression .)
    BRACKETC        reduce using rule 73 (aritmetica -> expression BY expression .)
    COMMA           reduce using rule 73 (aritmetica -> expression BY expression .)
    DOUBLEDOT       reduce using rule 73 (aritmetica -> expression BY expression .)
    LLAVEC          reduce using rule 73 (aritmetica -> expression BY expression .)

  ! PLUS            [ shift and go to state 62 ]
  ! BY              [ shift and go to state 63 ]
  ! DIVIDED         [ shift and go to state 64 ]
  ! LESS            [ shift and go to state 65 ]
  ! MODUL           [ shift and go to state 66 ]
  ! DEQUAL          [ shift and go to state 67 ]
  ! DIFERENT        [ shift and go to state 68 ]
  ! MINOR           [ shift and go to state 69 ]
  ! MINOREQUAL      [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! GREATEREQUAL    [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]


state 108

    (74) aritmetica -> expression DIVIDED expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    QUESTIONM       reduce using rule 74 (aritmetica -> expression DIVIDED expression .)
    PLUS            reduce using rule 74 (aritmetica -> expression DIVIDED expression .)
    BY              reduce using rule 74 (aritmetica -> expression DIVIDED expression .)
    DIVIDED         reduce using rule 74 (aritmetica -> expression DIVIDED expression .)
    LESS            reduce using rule 74 (aritmetica -> expression DIVIDED expression .)
    MODUL           reduce using rule 74 (aritmetica -> expression DIVIDED expression .)
    DEQUAL          reduce using rule 74 (aritmetica -> expression DIVIDED expression .)
    DIFERENT        reduce using rule 74 (aritmetica -> expression DIVIDED expression .)
    MINOR           reduce using rule 74 (aritmetica -> expression DIVIDED expression .)
    MINOREQUAL      reduce using rule 74 (aritmetica -> expression DIVIDED expression .)
    GREATER         reduce using rule 74 (aritmetica -> expression DIVIDED expression .)
    GREATEREQUAL    reduce using rule 74 (aritmetica -> expression DIVIDED expression .)
    AND             reduce using rule 74 (aritmetica -> expression DIVIDED expression .)
    OR              reduce using rule 74 (aritmetica -> expression DIVIDED expression .)
    PARC            reduce using rule 74 (aritmetica -> expression DIVIDED expression .)
    SEMICOLON       reduce using rule 74 (aritmetica -> expression DIVIDED expression .)
    BRACKETC        reduce using rule 74 (aritmetica -> expression DIVIDED expression .)
    COMMA           reduce using rule 74 (aritmetica -> expression DIVIDED expression .)
    DOUBLEDOT       reduce using rule 74 (aritmetica -> expression DIVIDED expression .)
    LLAVEC          reduce using rule 74 (aritmetica -> expression DIVIDED expression .)

  ! PLUS            [ shift and go to state 62 ]
  ! BY              [ shift and go to state 63 ]
  ! DIVIDED         [ shift and go to state 64 ]
  ! LESS            [ shift and go to state 65 ]
  ! MODUL           [ shift and go to state 66 ]
  ! DEQUAL          [ shift and go to state 67 ]
  ! DIFERENT        [ shift and go to state 68 ]
  ! MINOR           [ shift and go to state 69 ]
  ! MINOREQUAL      [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! GREATEREQUAL    [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]


state 109

    (75) aritmetica -> expression LESS expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    QUESTIONM       reduce using rule 75 (aritmetica -> expression LESS expression .)
    PLUS            reduce using rule 75 (aritmetica -> expression LESS expression .)
    LESS            reduce using rule 75 (aritmetica -> expression LESS expression .)
    DEQUAL          reduce using rule 75 (aritmetica -> expression LESS expression .)
    DIFERENT        reduce using rule 75 (aritmetica -> expression LESS expression .)
    MINOR           reduce using rule 75 (aritmetica -> expression LESS expression .)
    MINOREQUAL      reduce using rule 75 (aritmetica -> expression LESS expression .)
    GREATER         reduce using rule 75 (aritmetica -> expression LESS expression .)
    GREATEREQUAL    reduce using rule 75 (aritmetica -> expression LESS expression .)
    AND             reduce using rule 75 (aritmetica -> expression LESS expression .)
    OR              reduce using rule 75 (aritmetica -> expression LESS expression .)
    PARC            reduce using rule 75 (aritmetica -> expression LESS expression .)
    SEMICOLON       reduce using rule 75 (aritmetica -> expression LESS expression .)
    BRACKETC        reduce using rule 75 (aritmetica -> expression LESS expression .)
    COMMA           reduce using rule 75 (aritmetica -> expression LESS expression .)
    DOUBLEDOT       reduce using rule 75 (aritmetica -> expression LESS expression .)
    LLAVEC          reduce using rule 75 (aritmetica -> expression LESS expression .)
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    MODUL           shift and go to state 66

  ! BY              [ reduce using rule 75 (aritmetica -> expression LESS expression .) ]
  ! DIVIDED         [ reduce using rule 75 (aritmetica -> expression LESS expression .) ]
  ! MODUL           [ reduce using rule 75 (aritmetica -> expression LESS expression .) ]
  ! PLUS            [ shift and go to state 62 ]
  ! LESS            [ shift and go to state 65 ]
  ! DEQUAL          [ shift and go to state 67 ]
  ! DIFERENT        [ shift and go to state 68 ]
  ! MINOR           [ shift and go to state 69 ]
  ! MINOREQUAL      [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! GREATEREQUAL    [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]


state 110

    (76) aritmetica -> expression MODUL expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    QUESTIONM       reduce using rule 76 (aritmetica -> expression MODUL expression .)
    PLUS            reduce using rule 76 (aritmetica -> expression MODUL expression .)
    BY              reduce using rule 76 (aritmetica -> expression MODUL expression .)
    DIVIDED         reduce using rule 76 (aritmetica -> expression MODUL expression .)
    LESS            reduce using rule 76 (aritmetica -> expression MODUL expression .)
    MODUL           reduce using rule 76 (aritmetica -> expression MODUL expression .)
    DEQUAL          reduce using rule 76 (aritmetica -> expression MODUL expression .)
    DIFERENT        reduce using rule 76 (aritmetica -> expression MODUL expression .)
    MINOR           reduce using rule 76 (aritmetica -> expression MODUL expression .)
    MINOREQUAL      reduce using rule 76 (aritmetica -> expression MODUL expression .)
    GREATER         reduce using rule 76 (aritmetica -> expression MODUL expression .)
    GREATEREQUAL    reduce using rule 76 (aritmetica -> expression MODUL expression .)
    AND             reduce using rule 76 (aritmetica -> expression MODUL expression .)
    OR              reduce using rule 76 (aritmetica -> expression MODUL expression .)
    PARC            reduce using rule 76 (aritmetica -> expression MODUL expression .)
    SEMICOLON       reduce using rule 76 (aritmetica -> expression MODUL expression .)
    BRACKETC        reduce using rule 76 (aritmetica -> expression MODUL expression .)
    COMMA           reduce using rule 76 (aritmetica -> expression MODUL expression .)
    DOUBLEDOT       reduce using rule 76 (aritmetica -> expression MODUL expression .)
    LLAVEC          reduce using rule 76 (aritmetica -> expression MODUL expression .)

  ! PLUS            [ shift and go to state 62 ]
  ! BY              [ shift and go to state 63 ]
  ! DIVIDED         [ shift and go to state 64 ]
  ! LESS            [ shift and go to state 65 ]
  ! MODUL           [ shift and go to state 66 ]
  ! DEQUAL          [ shift and go to state 67 ]
  ! DIFERENT        [ shift and go to state 68 ]
  ! MINOR           [ shift and go to state 69 ]
  ! MINOREQUAL      [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! GREATEREQUAL    [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]


state 111

    (78) relacional -> expression DEQUAL expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    QUESTIONM       reduce using rule 78 (relacional -> expression DEQUAL expression .)
    DEQUAL          reduce using rule 78 (relacional -> expression DEQUAL expression .)
    DIFERENT        reduce using rule 78 (relacional -> expression DEQUAL expression .)
    MINOR           reduce using rule 78 (relacional -> expression DEQUAL expression .)
    MINOREQUAL      reduce using rule 78 (relacional -> expression DEQUAL expression .)
    GREATER         reduce using rule 78 (relacional -> expression DEQUAL expression .)
    GREATEREQUAL    reduce using rule 78 (relacional -> expression DEQUAL expression .)
    AND             reduce using rule 78 (relacional -> expression DEQUAL expression .)
    OR              reduce using rule 78 (relacional -> expression DEQUAL expression .)
    PARC            reduce using rule 78 (relacional -> expression DEQUAL expression .)
    SEMICOLON       reduce using rule 78 (relacional -> expression DEQUAL expression .)
    BRACKETC        reduce using rule 78 (relacional -> expression DEQUAL expression .)
    COMMA           reduce using rule 78 (relacional -> expression DEQUAL expression .)
    DOUBLEDOT       reduce using rule 78 (relacional -> expression DEQUAL expression .)
    LLAVEC          reduce using rule 78 (relacional -> expression DEQUAL expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66

  ! PLUS            [ reduce using rule 78 (relacional -> expression DEQUAL expression .) ]
  ! BY              [ reduce using rule 78 (relacional -> expression DEQUAL expression .) ]
  ! DIVIDED         [ reduce using rule 78 (relacional -> expression DEQUAL expression .) ]
  ! LESS            [ reduce using rule 78 (relacional -> expression DEQUAL expression .) ]
  ! MODUL           [ reduce using rule 78 (relacional -> expression DEQUAL expression .) ]
  ! DEQUAL          [ shift and go to state 67 ]
  ! DIFERENT        [ shift and go to state 68 ]
  ! MINOR           [ shift and go to state 69 ]
  ! MINOREQUAL      [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! GREATEREQUAL    [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]


state 112

    (79) relacional -> expression DIFERENT expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    QUESTIONM       reduce using rule 79 (relacional -> expression DIFERENT expression .)
    DEQUAL          reduce using rule 79 (relacional -> expression DIFERENT expression .)
    DIFERENT        reduce using rule 79 (relacional -> expression DIFERENT expression .)
    MINOR           reduce using rule 79 (relacional -> expression DIFERENT expression .)
    MINOREQUAL      reduce using rule 79 (relacional -> expression DIFERENT expression .)
    GREATER         reduce using rule 79 (relacional -> expression DIFERENT expression .)
    GREATEREQUAL    reduce using rule 79 (relacional -> expression DIFERENT expression .)
    AND             reduce using rule 79 (relacional -> expression DIFERENT expression .)
    OR              reduce using rule 79 (relacional -> expression DIFERENT expression .)
    PARC            reduce using rule 79 (relacional -> expression DIFERENT expression .)
    SEMICOLON       reduce using rule 79 (relacional -> expression DIFERENT expression .)
    BRACKETC        reduce using rule 79 (relacional -> expression DIFERENT expression .)
    COMMA           reduce using rule 79 (relacional -> expression DIFERENT expression .)
    DOUBLEDOT       reduce using rule 79 (relacional -> expression DIFERENT expression .)
    LLAVEC          reduce using rule 79 (relacional -> expression DIFERENT expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66

  ! PLUS            [ reduce using rule 79 (relacional -> expression DIFERENT expression .) ]
  ! BY              [ reduce using rule 79 (relacional -> expression DIFERENT expression .) ]
  ! DIVIDED         [ reduce using rule 79 (relacional -> expression DIFERENT expression .) ]
  ! LESS            [ reduce using rule 79 (relacional -> expression DIFERENT expression .) ]
  ! MODUL           [ reduce using rule 79 (relacional -> expression DIFERENT expression .) ]
  ! DEQUAL          [ shift and go to state 67 ]
  ! DIFERENT        [ shift and go to state 68 ]
  ! MINOR           [ shift and go to state 69 ]
  ! MINOREQUAL      [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! GREATEREQUAL    [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]


state 113

    (80) relacional -> expression MINOR expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    QUESTIONM       reduce using rule 80 (relacional -> expression MINOR expression .)
    DEQUAL          reduce using rule 80 (relacional -> expression MINOR expression .)
    DIFERENT        reduce using rule 80 (relacional -> expression MINOR expression .)
    MINOR           reduce using rule 80 (relacional -> expression MINOR expression .)
    MINOREQUAL      reduce using rule 80 (relacional -> expression MINOR expression .)
    GREATER         reduce using rule 80 (relacional -> expression MINOR expression .)
    GREATEREQUAL    reduce using rule 80 (relacional -> expression MINOR expression .)
    AND             reduce using rule 80 (relacional -> expression MINOR expression .)
    OR              reduce using rule 80 (relacional -> expression MINOR expression .)
    PARC            reduce using rule 80 (relacional -> expression MINOR expression .)
    SEMICOLON       reduce using rule 80 (relacional -> expression MINOR expression .)
    BRACKETC        reduce using rule 80 (relacional -> expression MINOR expression .)
    COMMA           reduce using rule 80 (relacional -> expression MINOR expression .)
    DOUBLEDOT       reduce using rule 80 (relacional -> expression MINOR expression .)
    LLAVEC          reduce using rule 80 (relacional -> expression MINOR expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66

  ! PLUS            [ reduce using rule 80 (relacional -> expression MINOR expression .) ]
  ! BY              [ reduce using rule 80 (relacional -> expression MINOR expression .) ]
  ! DIVIDED         [ reduce using rule 80 (relacional -> expression MINOR expression .) ]
  ! LESS            [ reduce using rule 80 (relacional -> expression MINOR expression .) ]
  ! MODUL           [ reduce using rule 80 (relacional -> expression MINOR expression .) ]
  ! DEQUAL          [ shift and go to state 67 ]
  ! DIFERENT        [ shift and go to state 68 ]
  ! MINOR           [ shift and go to state 69 ]
  ! MINOREQUAL      [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! GREATEREQUAL    [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]


state 114

    (81) relacional -> expression MINOREQUAL expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    QUESTIONM       reduce using rule 81 (relacional -> expression MINOREQUAL expression .)
    DEQUAL          reduce using rule 81 (relacional -> expression MINOREQUAL expression .)
    DIFERENT        reduce using rule 81 (relacional -> expression MINOREQUAL expression .)
    MINOR           reduce using rule 81 (relacional -> expression MINOREQUAL expression .)
    MINOREQUAL      reduce using rule 81 (relacional -> expression MINOREQUAL expression .)
    GREATER         reduce using rule 81 (relacional -> expression MINOREQUAL expression .)
    GREATEREQUAL    reduce using rule 81 (relacional -> expression MINOREQUAL expression .)
    AND             reduce using rule 81 (relacional -> expression MINOREQUAL expression .)
    OR              reduce using rule 81 (relacional -> expression MINOREQUAL expression .)
    PARC            reduce using rule 81 (relacional -> expression MINOREQUAL expression .)
    SEMICOLON       reduce using rule 81 (relacional -> expression MINOREQUAL expression .)
    BRACKETC        reduce using rule 81 (relacional -> expression MINOREQUAL expression .)
    COMMA           reduce using rule 81 (relacional -> expression MINOREQUAL expression .)
    DOUBLEDOT       reduce using rule 81 (relacional -> expression MINOREQUAL expression .)
    LLAVEC          reduce using rule 81 (relacional -> expression MINOREQUAL expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66

  ! PLUS            [ reduce using rule 81 (relacional -> expression MINOREQUAL expression .) ]
  ! BY              [ reduce using rule 81 (relacional -> expression MINOREQUAL expression .) ]
  ! DIVIDED         [ reduce using rule 81 (relacional -> expression MINOREQUAL expression .) ]
  ! LESS            [ reduce using rule 81 (relacional -> expression MINOREQUAL expression .) ]
  ! MODUL           [ reduce using rule 81 (relacional -> expression MINOREQUAL expression .) ]
  ! DEQUAL          [ shift and go to state 67 ]
  ! DIFERENT        [ shift and go to state 68 ]
  ! MINOR           [ shift and go to state 69 ]
  ! MINOREQUAL      [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! GREATEREQUAL    [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]


state 115

    (82) relacional -> expression GREATER expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    QUESTIONM       reduce using rule 82 (relacional -> expression GREATER expression .)
    DEQUAL          reduce using rule 82 (relacional -> expression GREATER expression .)
    DIFERENT        reduce using rule 82 (relacional -> expression GREATER expression .)
    MINOR           reduce using rule 82 (relacional -> expression GREATER expression .)
    MINOREQUAL      reduce using rule 82 (relacional -> expression GREATER expression .)
    GREATER         reduce using rule 82 (relacional -> expression GREATER expression .)
    GREATEREQUAL    reduce using rule 82 (relacional -> expression GREATER expression .)
    AND             reduce using rule 82 (relacional -> expression GREATER expression .)
    OR              reduce using rule 82 (relacional -> expression GREATER expression .)
    PARC            reduce using rule 82 (relacional -> expression GREATER expression .)
    SEMICOLON       reduce using rule 82 (relacional -> expression GREATER expression .)
    BRACKETC        reduce using rule 82 (relacional -> expression GREATER expression .)
    COMMA           reduce using rule 82 (relacional -> expression GREATER expression .)
    DOUBLEDOT       reduce using rule 82 (relacional -> expression GREATER expression .)
    LLAVEC          reduce using rule 82 (relacional -> expression GREATER expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66

  ! PLUS            [ reduce using rule 82 (relacional -> expression GREATER expression .) ]
  ! BY              [ reduce using rule 82 (relacional -> expression GREATER expression .) ]
  ! DIVIDED         [ reduce using rule 82 (relacional -> expression GREATER expression .) ]
  ! LESS            [ reduce using rule 82 (relacional -> expression GREATER expression .) ]
  ! MODUL           [ reduce using rule 82 (relacional -> expression GREATER expression .) ]
  ! DEQUAL          [ shift and go to state 67 ]
  ! DIFERENT        [ shift and go to state 68 ]
  ! MINOR           [ shift and go to state 69 ]
  ! MINOREQUAL      [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! GREATEREQUAL    [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]


state 116

    (83) relacional -> expression GREATEREQUAL expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    QUESTIONM       reduce using rule 83 (relacional -> expression GREATEREQUAL expression .)
    DEQUAL          reduce using rule 83 (relacional -> expression GREATEREQUAL expression .)
    DIFERENT        reduce using rule 83 (relacional -> expression GREATEREQUAL expression .)
    MINOR           reduce using rule 83 (relacional -> expression GREATEREQUAL expression .)
    MINOREQUAL      reduce using rule 83 (relacional -> expression GREATEREQUAL expression .)
    GREATER         reduce using rule 83 (relacional -> expression GREATEREQUAL expression .)
    GREATEREQUAL    reduce using rule 83 (relacional -> expression GREATEREQUAL expression .)
    AND             reduce using rule 83 (relacional -> expression GREATEREQUAL expression .)
    OR              reduce using rule 83 (relacional -> expression GREATEREQUAL expression .)
    PARC            reduce using rule 83 (relacional -> expression GREATEREQUAL expression .)
    SEMICOLON       reduce using rule 83 (relacional -> expression GREATEREQUAL expression .)
    BRACKETC        reduce using rule 83 (relacional -> expression GREATEREQUAL expression .)
    COMMA           reduce using rule 83 (relacional -> expression GREATEREQUAL expression .)
    DOUBLEDOT       reduce using rule 83 (relacional -> expression GREATEREQUAL expression .)
    LLAVEC          reduce using rule 83 (relacional -> expression GREATEREQUAL expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66

  ! PLUS            [ reduce using rule 83 (relacional -> expression GREATEREQUAL expression .) ]
  ! BY              [ reduce using rule 83 (relacional -> expression GREATEREQUAL expression .) ]
  ! DIVIDED         [ reduce using rule 83 (relacional -> expression GREATEREQUAL expression .) ]
  ! LESS            [ reduce using rule 83 (relacional -> expression GREATEREQUAL expression .) ]
  ! MODUL           [ reduce using rule 83 (relacional -> expression GREATEREQUAL expression .) ]
  ! DEQUAL          [ shift and go to state 67 ]
  ! DIFERENT        [ shift and go to state 68 ]
  ! MINOR           [ shift and go to state 69 ]
  ! MINOREQUAL      [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! GREATEREQUAL    [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]


state 117

    (84) logica -> expression AND expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    QUESTIONM       reduce using rule 84 (logica -> expression AND expression .)
    AND             reduce using rule 84 (logica -> expression AND expression .)
    OR              reduce using rule 84 (logica -> expression AND expression .)
    PARC            reduce using rule 84 (logica -> expression AND expression .)
    SEMICOLON       reduce using rule 84 (logica -> expression AND expression .)
    BRACKETC        reduce using rule 84 (logica -> expression AND expression .)
    COMMA           reduce using rule 84 (logica -> expression AND expression .)
    DOUBLEDOT       reduce using rule 84 (logica -> expression AND expression .)
    LLAVEC          reduce using rule 84 (logica -> expression AND expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72

  ! PLUS            [ reduce using rule 84 (logica -> expression AND expression .) ]
  ! BY              [ reduce using rule 84 (logica -> expression AND expression .) ]
  ! DIVIDED         [ reduce using rule 84 (logica -> expression AND expression .) ]
  ! LESS            [ reduce using rule 84 (logica -> expression AND expression .) ]
  ! MODUL           [ reduce using rule 84 (logica -> expression AND expression .) ]
  ! DEQUAL          [ reduce using rule 84 (logica -> expression AND expression .) ]
  ! DIFERENT        [ reduce using rule 84 (logica -> expression AND expression .) ]
  ! MINOR           [ reduce using rule 84 (logica -> expression AND expression .) ]
  ! MINOREQUAL      [ reduce using rule 84 (logica -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 84 (logica -> expression AND expression .) ]
  ! GREATEREQUAL    [ reduce using rule 84 (logica -> expression AND expression .) ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]


state 118

    (85) logica -> expression OR expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    QUESTIONM       reduce using rule 85 (logica -> expression OR expression .)
    OR              reduce using rule 85 (logica -> expression OR expression .)
    PARC            reduce using rule 85 (logica -> expression OR expression .)
    SEMICOLON       reduce using rule 85 (logica -> expression OR expression .)
    BRACKETC        reduce using rule 85 (logica -> expression OR expression .)
    COMMA           reduce using rule 85 (logica -> expression OR expression .)
    DOUBLEDOT       reduce using rule 85 (logica -> expression OR expression .)
    LLAVEC          reduce using rule 85 (logica -> expression OR expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73

  ! PLUS            [ reduce using rule 85 (logica -> expression OR expression .) ]
  ! BY              [ reduce using rule 85 (logica -> expression OR expression .) ]
  ! DIVIDED         [ reduce using rule 85 (logica -> expression OR expression .) ]
  ! LESS            [ reduce using rule 85 (logica -> expression OR expression .) ]
  ! MODUL           [ reduce using rule 85 (logica -> expression OR expression .) ]
  ! DEQUAL          [ reduce using rule 85 (logica -> expression OR expression .) ]
  ! DIFERENT        [ reduce using rule 85 (logica -> expression OR expression .) ]
  ! MINOR           [ reduce using rule 85 (logica -> expression OR expression .) ]
  ! MINOREQUAL      [ reduce using rule 85 (logica -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 85 (logica -> expression OR expression .) ]
  ! GREATEREQUAL    [ reduce using rule 85 (logica -> expression OR expression .) ]
  ! AND             [ reduce using rule 85 (logica -> expression OR expression .) ]
  ! OR              [ shift and go to state 74 ]


state 119

    (25) declareConst -> RCONST ID DOUBLEDOT . type EQUAL expression
    (27) declareConst -> RCONST ID DOUBLEDOT . type
    (96) type -> . RNUMBER
    (97) type -> . RFLOAT
    (98) type -> . RSTRING
    (99) type -> . RBOOLEAN

    RNUMBER         shift and go to state 133
    RFLOAT          shift and go to state 134
    RSTRING         shift and go to state 135
    RBOOLEAN        shift and go to state 136

    type                           shift and go to state 150

state 120

    (26) declareConst -> RCONST ID EQUAL . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 151
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 121

    (31) declareArray -> declaration_type ID DOUBLEDOT . type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (32) declareArray -> declaration_type ID DOUBLEDOT . type BRACKETO BRACKETC EQUAL expression
    (33) declareArray -> declaration_type ID DOUBLEDOT . type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (96) type -> . RNUMBER
    (97) type -> . RFLOAT
    (98) type -> . RSTRING
    (99) type -> . RBOOLEAN

    RNUMBER         shift and go to state 133
    RFLOAT          shift and go to state 134
    RSTRING         shift and go to state 135
    RBOOLEAN        shift and go to state 136

    type                           shift and go to state 152

state 122

    (37) if_else -> RIF PARA expression . PARC LLAVEA instrucciones LLAVEC else
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    PARC            shift and go to state 153
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74


state 123

    (42) while_ -> RWHILE PARA expression . PARC LLAVEA instrucciones LLAVEC
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    PARC            shift and go to state 154
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74


state 124

    (43) for_ -> RFOR PARA declarevar . SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (44) for_ -> RFOR PARA declarevar . SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC

    SEMICOLON       shift and go to state 155


state 125

    (22) declarevar -> RVAR . ID DOUBLEDOT type EQUAL expression
    (23) declarevar -> RVAR . ID EQUAL expression
    (24) declarevar -> RVAR . ID DOUBLEDOT type

    ID              shift and go to state 156


state 126

    (49) createInterface -> RINTERFACE ID LLAVEA . attributesList LLAVEC
    (50) attributesList -> . attributesList ID DOUBLEDOT type
    (51) attributesList -> . ID DOUBLEDOT type

    ID              shift and go to state 157

    attributesList                 shift and go to state 158

state 127

    (53) interfaceContent -> interfaceContent COMMA ID . DOUBLEDOT expression

    DOUBLEDOT       shift and go to state 159


state 128

    (19) print -> CONSOLE DOT LOG PARA . expression_list PARC
    (68) expression_list -> . expression_list COMMA expression
    (69) expression_list -> . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression_list                shift and go to state 160
    expression                     shift and go to state 161
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 129

    (71) id_ -> ID BRACKETO expression . BRACKETC
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    BRACKETC        shift and go to state 162
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74


state 130

    (90) arraysExpression -> ID DOT RPOP . PARA PARC

    PARA            shift and go to state 163


state 131

    (52) declareInterface -> RVAR ID DOUBLEDOT ID . EQUAL LLAVEA interfaceContent LLAVEC

    EQUAL           shift and go to state 164


state 132

    (22) declarevar -> RVAR ID DOUBLEDOT type . EQUAL expression
    (24) declarevar -> RVAR ID DOUBLEDOT type .

    EQUAL           shift and go to state 165
    SEMICOLON       reduce using rule 24 (declarevar -> RVAR ID DOUBLEDOT type .)


state 133

    (96) type -> RNUMBER .

    EQUAL           reduce using rule 96 (type -> RNUMBER .)
    SEMICOLON       reduce using rule 96 (type -> RNUMBER .)
    BRACKETO        reduce using rule 96 (type -> RNUMBER .)
    LLAVEC          reduce using rule 96 (type -> RNUMBER .)
    ID              reduce using rule 96 (type -> RNUMBER .)


state 134

    (97) type -> RFLOAT .

    EQUAL           reduce using rule 97 (type -> RFLOAT .)
    SEMICOLON       reduce using rule 97 (type -> RFLOAT .)
    BRACKETO        reduce using rule 97 (type -> RFLOAT .)
    LLAVEC          reduce using rule 97 (type -> RFLOAT .)
    ID              reduce using rule 97 (type -> RFLOAT .)


state 135

    (98) type -> RSTRING .

    EQUAL           reduce using rule 98 (type -> RSTRING .)
    SEMICOLON       reduce using rule 98 (type -> RSTRING .)
    BRACKETO        reduce using rule 98 (type -> RSTRING .)
    LLAVEC          reduce using rule 98 (type -> RSTRING .)
    ID              reduce using rule 98 (type -> RSTRING .)


state 136

    (99) type -> RBOOLEAN .

    EQUAL           reduce using rule 99 (type -> RBOOLEAN .)
    SEMICOLON       reduce using rule 99 (type -> RBOOLEAN .)
    BRACKETO        reduce using rule 99 (type -> RBOOLEAN .)
    LLAVEC          reduce using rule 99 (type -> RBOOLEAN .)
    ID              reduce using rule 99 (type -> RBOOLEAN .)


state 137

    (23) declarevar -> RVAR ID EQUAL expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    SEMICOLON       reduce using rule 23 (declarevar -> RVAR ID EQUAL expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74


state 138

    (29) assignVar -> ID PLUS EQUAL expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    SEMICOLON       reduce using rule 29 (assignVar -> ID PLUS EQUAL expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74


state 139

    (30) assignVar -> ID LESS EQUAL expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    SEMICOLON       reduce using rule 30 (assignVar -> ID LESS EQUAL expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74


state 140

    (34) assingArray -> ID BRACKETO expression BRACKETC . EQUAL expression
    (71) id_ -> ID BRACKETO expression BRACKETC .

    EQUAL           shift and go to state 166
    QUESTIONM       reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    PLUS            reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    BY              reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    DIVIDED         reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    LESS            reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    MODUL           reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    DEQUAL          reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    DIFERENT        reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    MINOR           reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    MINOREQUAL      reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    GREATER         reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    GREATEREQUAL    reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    AND             reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    OR              reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)


state 141

    (55) modifyInterface -> ID DOT ID EQUAL . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 167
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 142

    (35) arrayFuncs -> ID DOT RPUSH PARA . expression PARC
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 168
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 143

    (36) arrayFuncs -> ID DOT RPOP PARA . PARC
    (90) arraysExpression -> ID DOT RPOP PARA . PARC

    PARC            shift and go to state 169


state 144

    (91) arraysExpression -> ID DOT RINDEXOF PARA . expression PARC
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 170
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 145

    (92) arraysExpression -> ID DOT RJOIN PARA . PARC

    PARC            shift and go to state 171


state 146

    (93) arraysExpression -> ID DOT RLENGTH PARA . PARC

    PARC            shift and go to state 172


state 147

    (66) interfaceContent -> ID DOT RKEYS PARA . PARC

    PARC            shift and go to state 173


state 148

    (67) interfaceContent -> ID DOT RVALUES PARA . PARC

    PARC            shift and go to state 174


state 149

    (41) ternario -> expression QUESTIONM expression DOUBLEDOT . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 175
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 150

    (25) declareConst -> RCONST ID DOUBLEDOT type . EQUAL expression
    (27) declareConst -> RCONST ID DOUBLEDOT type .

    EQUAL           shift and go to state 176
    SEMICOLON       reduce using rule 27 (declareConst -> RCONST ID DOUBLEDOT type .)


state 151

    (26) declareConst -> RCONST ID EQUAL expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    SEMICOLON       reduce using rule 26 (declareConst -> RCONST ID EQUAL expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74


state 152

    (31) declareArray -> declaration_type ID DOUBLEDOT type . BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (32) declareArray -> declaration_type ID DOUBLEDOT type . BRACKETO BRACKETC EQUAL expression
    (33) declareArray -> declaration_type ID DOUBLEDOT type . BRACKETO BRACKETC EQUAL BRACKETO BRACKETC

    BRACKETO        shift and go to state 177


state 153

    (37) if_else -> RIF PARA expression PARC . LLAVEA instrucciones LLAVEC else

    LLAVEA          shift and go to state 178


state 154

    (42) while_ -> RWHILE PARA expression PARC . LLAVEA instrucciones LLAVEC

    LLAVEA          shift and go to state 179


state 155

    (43) for_ -> RFOR PARA declarevar SEMICOLON . relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (44) for_ -> RFOR PARA declarevar SEMICOLON . relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    relacional                     shift and go to state 180
    id_                            shift and go to state 31
    expression                     shift and go to state 181
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 156

    (22) declarevar -> RVAR ID . DOUBLEDOT type EQUAL expression
    (23) declarevar -> RVAR ID . EQUAL expression
    (24) declarevar -> RVAR ID . DOUBLEDOT type

    DOUBLEDOT       shift and go to state 182
    EQUAL           shift and go to state 91


state 157

    (51) attributesList -> ID . DOUBLEDOT type

    DOUBLEDOT       shift and go to state 183


state 158

    (49) createInterface -> RINTERFACE ID LLAVEA attributesList . LLAVEC
    (50) attributesList -> attributesList . ID DOUBLEDOT type

    LLAVEC          shift and go to state 185
    ID              shift and go to state 184


state 159

    (53) interfaceContent -> interfaceContent COMMA ID DOUBLEDOT . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    interfaceContent               shift and go to state 36
    expression                     shift and go to state 186
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    boolean                        shift and go to state 42

state 160

    (19) print -> CONSOLE DOT LOG PARA expression_list . PARC
    (68) expression_list -> expression_list . COMMA expression

    PARC            shift and go to state 187
    COMMA           shift and go to state 188


state 161

    (69) expression_list -> expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    PARC            reduce using rule 69 (expression_list -> expression .)
    COMMA           reduce using rule 69 (expression_list -> expression .)
    BRACKETC        reduce using rule 69 (expression_list -> expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74


state 162

    (71) id_ -> ID BRACKETO expression BRACKETC .

    PARC            reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    PLUS            reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    BY              reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    DIVIDED         reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    LESS            reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    MODUL           reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    DEQUAL          reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    DIFERENT        reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    MINOR           reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    MINOREQUAL      reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    GREATER         reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    GREATEREQUAL    reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    AND             reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    OR              reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    QUESTIONM       reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    SEMICOLON       reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    BRACKETC        reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    COMMA           reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    DOUBLEDOT       reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)
    LLAVEC          reduce using rule 71 (id_ -> ID BRACKETO expression BRACKETC .)


state 163

    (90) arraysExpression -> ID DOT RPOP PARA . PARC

    PARC            shift and go to state 189


state 164

    (52) declareInterface -> RVAR ID DOUBLEDOT ID EQUAL . LLAVEA interfaceContent LLAVEC

    LLAVEA          shift and go to state 190


state 165

    (22) declarevar -> RVAR ID DOUBLEDOT type EQUAL . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 191
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 166

    (34) assingArray -> ID BRACKETO expression BRACKETC EQUAL . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 192
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 167

    (55) modifyInterface -> ID DOT ID EQUAL expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    SEMICOLON       reduce using rule 55 (modifyInterface -> ID DOT ID EQUAL expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74


state 168

    (35) arrayFuncs -> ID DOT RPUSH PARA expression . PARC
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    PARC            shift and go to state 193
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74


state 169

    (36) arrayFuncs -> ID DOT RPOP PARA PARC .
    (90) arraysExpression -> ID DOT RPOP PARA PARC .

    SEMICOLON       reduce using rule 36 (arrayFuncs -> ID DOT RPOP PARA PARC .)
    QUESTIONM       reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    PLUS            reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    BY              reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    DIVIDED         reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    LESS            reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    MODUL           reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    DEQUAL          reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    DIFERENT        reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    MINOR           reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    MINOREQUAL      reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    GREATER         reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    GREATEREQUAL    reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    AND             reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    OR              reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)


state 170

    (91) arraysExpression -> ID DOT RINDEXOF PARA expression . PARC
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    PARC            shift and go to state 194
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74


state 171

    (92) arraysExpression -> ID DOT RJOIN PARA PARC .

    QUESTIONM       reduce using rule 92 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    PLUS            reduce using rule 92 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    BY              reduce using rule 92 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    DIVIDED         reduce using rule 92 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    LESS            reduce using rule 92 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    MODUL           reduce using rule 92 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    DEQUAL          reduce using rule 92 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    DIFERENT        reduce using rule 92 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    MINOR           reduce using rule 92 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    MINOREQUAL      reduce using rule 92 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    GREATER         reduce using rule 92 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    GREATEREQUAL    reduce using rule 92 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    AND             reduce using rule 92 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    OR              reduce using rule 92 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    PARC            reduce using rule 92 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    SEMICOLON       reduce using rule 92 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    BRACKETC        reduce using rule 92 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    COMMA           reduce using rule 92 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    DOUBLEDOT       reduce using rule 92 (arraysExpression -> ID DOT RJOIN PARA PARC .)
    LLAVEC          reduce using rule 92 (arraysExpression -> ID DOT RJOIN PARA PARC .)


state 172

    (93) arraysExpression -> ID DOT RLENGTH PARA PARC .

    QUESTIONM       reduce using rule 93 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    PLUS            reduce using rule 93 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    BY              reduce using rule 93 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    DIVIDED         reduce using rule 93 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    LESS            reduce using rule 93 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    MODUL           reduce using rule 93 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    DEQUAL          reduce using rule 93 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    DIFERENT        reduce using rule 93 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    MINOR           reduce using rule 93 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    MINOREQUAL      reduce using rule 93 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    GREATER         reduce using rule 93 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    GREATEREQUAL    reduce using rule 93 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    AND             reduce using rule 93 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    OR              reduce using rule 93 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    PARC            reduce using rule 93 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    SEMICOLON       reduce using rule 93 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    BRACKETC        reduce using rule 93 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    COMMA           reduce using rule 93 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    DOUBLEDOT       reduce using rule 93 (arraysExpression -> ID DOT RLENGTH PARA PARC .)
    LLAVEC          reduce using rule 93 (arraysExpression -> ID DOT RLENGTH PARA PARC .)


state 173

    (66) interfaceContent -> ID DOT RKEYS PARA PARC .

    COMMA           reduce using rule 66 (interfaceContent -> ID DOT RKEYS PARA PARC .)
    QUESTIONM       reduce using rule 66 (interfaceContent -> ID DOT RKEYS PARA PARC .)
    PLUS            reduce using rule 66 (interfaceContent -> ID DOT RKEYS PARA PARC .)
    BY              reduce using rule 66 (interfaceContent -> ID DOT RKEYS PARA PARC .)
    DIVIDED         reduce using rule 66 (interfaceContent -> ID DOT RKEYS PARA PARC .)
    LESS            reduce using rule 66 (interfaceContent -> ID DOT RKEYS PARA PARC .)
    MODUL           reduce using rule 66 (interfaceContent -> ID DOT RKEYS PARA PARC .)
    DEQUAL          reduce using rule 66 (interfaceContent -> ID DOT RKEYS PARA PARC .)
    DIFERENT        reduce using rule 66 (interfaceContent -> ID DOT RKEYS PARA PARC .)
    MINOR           reduce using rule 66 (interfaceContent -> ID DOT RKEYS PARA PARC .)
    MINOREQUAL      reduce using rule 66 (interfaceContent -> ID DOT RKEYS PARA PARC .)
    GREATER         reduce using rule 66 (interfaceContent -> ID DOT RKEYS PARA PARC .)
    GREATEREQUAL    reduce using rule 66 (interfaceContent -> ID DOT RKEYS PARA PARC .)
    AND             reduce using rule 66 (interfaceContent -> ID DOT RKEYS PARA PARC .)
    OR              reduce using rule 66 (interfaceContent -> ID DOT RKEYS PARA PARC .)
    PARC            reduce using rule 66 (interfaceContent -> ID DOT RKEYS PARA PARC .)
    SEMICOLON       reduce using rule 66 (interfaceContent -> ID DOT RKEYS PARA PARC .)
    BRACKETC        reduce using rule 66 (interfaceContent -> ID DOT RKEYS PARA PARC .)
    DOUBLEDOT       reduce using rule 66 (interfaceContent -> ID DOT RKEYS PARA PARC .)
    LLAVEC          reduce using rule 66 (interfaceContent -> ID DOT RKEYS PARA PARC .)


state 174

    (67) interfaceContent -> ID DOT RVALUES PARA PARC .

    COMMA           reduce using rule 67 (interfaceContent -> ID DOT RVALUES PARA PARC .)
    QUESTIONM       reduce using rule 67 (interfaceContent -> ID DOT RVALUES PARA PARC .)
    PLUS            reduce using rule 67 (interfaceContent -> ID DOT RVALUES PARA PARC .)
    BY              reduce using rule 67 (interfaceContent -> ID DOT RVALUES PARA PARC .)
    DIVIDED         reduce using rule 67 (interfaceContent -> ID DOT RVALUES PARA PARC .)
    LESS            reduce using rule 67 (interfaceContent -> ID DOT RVALUES PARA PARC .)
    MODUL           reduce using rule 67 (interfaceContent -> ID DOT RVALUES PARA PARC .)
    DEQUAL          reduce using rule 67 (interfaceContent -> ID DOT RVALUES PARA PARC .)
    DIFERENT        reduce using rule 67 (interfaceContent -> ID DOT RVALUES PARA PARC .)
    MINOR           reduce using rule 67 (interfaceContent -> ID DOT RVALUES PARA PARC .)
    MINOREQUAL      reduce using rule 67 (interfaceContent -> ID DOT RVALUES PARA PARC .)
    GREATER         reduce using rule 67 (interfaceContent -> ID DOT RVALUES PARA PARC .)
    GREATEREQUAL    reduce using rule 67 (interfaceContent -> ID DOT RVALUES PARA PARC .)
    AND             reduce using rule 67 (interfaceContent -> ID DOT RVALUES PARA PARC .)
    OR              reduce using rule 67 (interfaceContent -> ID DOT RVALUES PARA PARC .)
    PARC            reduce using rule 67 (interfaceContent -> ID DOT RVALUES PARA PARC .)
    SEMICOLON       reduce using rule 67 (interfaceContent -> ID DOT RVALUES PARA PARC .)
    BRACKETC        reduce using rule 67 (interfaceContent -> ID DOT RVALUES PARA PARC .)
    DOUBLEDOT       reduce using rule 67 (interfaceContent -> ID DOT RVALUES PARA PARC .)
    LLAVEC          reduce using rule 67 (interfaceContent -> ID DOT RVALUES PARA PARC .)


state 175

    (41) ternario -> expression QUESTIONM expression DOUBLEDOT expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    SEMICOLON       reduce using rule 41 (ternario -> expression QUESTIONM expression DOUBLEDOT expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74


state 176

    (25) declareConst -> RCONST ID DOUBLEDOT type EQUAL . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 195
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 177

    (31) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO . BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (32) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO . BRACKETC EQUAL expression
    (33) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO . BRACKETC EQUAL BRACKETO BRACKETC

    BRACKETC        shift and go to state 196


state 178

    (37) if_else -> RIF PARA expression PARC LLAVEA . instrucciones LLAVEC else
    (2) instrucciones -> . instrucciones instruccion SEMICOLON
    (3) instrucciones -> . instruccion SEMICOLON
    (4) instruccion -> . print
    (5) instruccion -> . declarevar
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . declareArray
    (9) instruccion -> . assingArray
    (10) instruccion -> . arrayFuncs
    (11) instruccion -> . if_else
    (12) instruccion -> . ternario
    (13) instruccion -> . while_
    (14) instruccion -> . for_
    (15) instruccion -> . transfer
    (16) instruccion -> . createInterface
    (17) instruccion -> . declareInterface
    (18) instruccion -> . modifyInterface
    (19) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (22) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (23) declarevar -> . RVAR ID EQUAL expression
    (24) declarevar -> . RVAR ID DOUBLEDOT type
    (25) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (26) declareConst -> . RCONST ID EQUAL expression
    (27) declareConst -> . RCONST ID DOUBLEDOT type
    (28) assignVar -> . ID EQUAL expression
    (29) assignVar -> . ID PLUS EQUAL expression
    (30) assignVar -> . ID LESS EQUAL expression
    (31) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (32) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (33) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (34) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (35) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (36) arrayFuncs -> . ID DOT RPOP PARA PARC
    (37) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (41) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (42) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (43) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (44) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (45) transfer -> . RBREAK
    (46) transfer -> . RCONTINUE
    (47) transfer -> . RRETURN
    (48) transfer -> . RRETURN expression
    (49) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (52) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (55) modifyInterface -> . ID DOT ID EQUAL expression
    (20) declaration_type -> . RCONST
    (21) declaration_type -> . RVAR
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    CONSOLE         shift and go to state 19
    RVAR            shift and go to state 21
    RCONST          shift and go to state 24
    ID              shift and go to state 22
    RIF             shift and go to state 27
    RWHILE          shift and go to state 28
    RFOR            shift and go to state 29
    RBREAK          shift and go to state 32
    RCONTINUE       shift and go to state 33
    RRETURN         shift and go to state 34
    RINTERFACE      shift and go to state 35
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 23
    instrucciones                  shift and go to state 197
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    assingArray                    shift and go to state 9
    arrayFuncs                     shift and go to state 10
    if_else                        shift and go to state 11
    ternario                       shift and go to state 12
    while_                         shift and go to state 13
    for_                           shift and go to state 14
    transfer                       shift and go to state 15
    createInterface                shift and go to state 16
    declareInterface               shift and go to state 17
    modifyInterface                shift and go to state 18
    declaration_type               shift and go to state 26
    relacional                     shift and go to state 30
    id_                            shift and go to state 31
    interfaceContent               shift and go to state 36
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    arraysExpression               shift and go to state 41
    boolean                        shift and go to state 42

state 179

    (42) while_ -> RWHILE PARA expression PARC LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion SEMICOLON
    (3) instrucciones -> . instruccion SEMICOLON
    (4) instruccion -> . print
    (5) instruccion -> . declarevar
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . declareArray
    (9) instruccion -> . assingArray
    (10) instruccion -> . arrayFuncs
    (11) instruccion -> . if_else
    (12) instruccion -> . ternario
    (13) instruccion -> . while_
    (14) instruccion -> . for_
    (15) instruccion -> . transfer
    (16) instruccion -> . createInterface
    (17) instruccion -> . declareInterface
    (18) instruccion -> . modifyInterface
    (19) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (22) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (23) declarevar -> . RVAR ID EQUAL expression
    (24) declarevar -> . RVAR ID DOUBLEDOT type
    (25) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (26) declareConst -> . RCONST ID EQUAL expression
    (27) declareConst -> . RCONST ID DOUBLEDOT type
    (28) assignVar -> . ID EQUAL expression
    (29) assignVar -> . ID PLUS EQUAL expression
    (30) assignVar -> . ID LESS EQUAL expression
    (31) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (32) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (33) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (34) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (35) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (36) arrayFuncs -> . ID DOT RPOP PARA PARC
    (37) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (41) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (42) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (43) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (44) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (45) transfer -> . RBREAK
    (46) transfer -> . RCONTINUE
    (47) transfer -> . RRETURN
    (48) transfer -> . RRETURN expression
    (49) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (52) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (55) modifyInterface -> . ID DOT ID EQUAL expression
    (20) declaration_type -> . RCONST
    (21) declaration_type -> . RVAR
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    CONSOLE         shift and go to state 19
    RVAR            shift and go to state 21
    RCONST          shift and go to state 24
    ID              shift and go to state 22
    RIF             shift and go to state 27
    RWHILE          shift and go to state 28
    RFOR            shift and go to state 29
    RBREAK          shift and go to state 32
    RCONTINUE       shift and go to state 33
    RRETURN         shift and go to state 34
    RINTERFACE      shift and go to state 35
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 23
    instrucciones                  shift and go to state 198
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    assingArray                    shift and go to state 9
    arrayFuncs                     shift and go to state 10
    if_else                        shift and go to state 11
    ternario                       shift and go to state 12
    while_                         shift and go to state 13
    for_                           shift and go to state 14
    transfer                       shift and go to state 15
    createInterface                shift and go to state 16
    declareInterface               shift and go to state 17
    modifyInterface                shift and go to state 18
    declaration_type               shift and go to state 26
    relacional                     shift and go to state 30
    id_                            shift and go to state 31
    interfaceContent               shift and go to state 36
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    arraysExpression               shift and go to state 41
    boolean                        shift and go to state 42

state 180

    (43) for_ -> RFOR PARA declarevar SEMICOLON relacional . SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (44) for_ -> RFOR PARA declarevar SEMICOLON relacional . SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (58) expression -> relacional .

    SEMICOLON       shift and go to state 199
    DEQUAL          reduce using rule 58 (expression -> relacional .)
    DIFERENT        reduce using rule 58 (expression -> relacional .)
    MINOR           reduce using rule 58 (expression -> relacional .)
    MINOREQUAL      reduce using rule 58 (expression -> relacional .)
    GREATER         reduce using rule 58 (expression -> relacional .)
    GREATEREQUAL    reduce using rule 58 (expression -> relacional .)
    PLUS            reduce using rule 58 (expression -> relacional .)
    BY              reduce using rule 58 (expression -> relacional .)
    DIVIDED         reduce using rule 58 (expression -> relacional .)
    LESS            reduce using rule 58 (expression -> relacional .)
    MODUL           reduce using rule 58 (expression -> relacional .)
    AND             reduce using rule 58 (expression -> relacional .)
    OR              reduce using rule 58 (expression -> relacional .)


state 181

    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    AND             shift and go to state 73
    OR              shift and go to state 74


state 182

    (22) declarevar -> RVAR ID DOUBLEDOT . type EQUAL expression
    (24) declarevar -> RVAR ID DOUBLEDOT . type
    (96) type -> . RNUMBER
    (97) type -> . RFLOAT
    (98) type -> . RSTRING
    (99) type -> . RBOOLEAN

    RNUMBER         shift and go to state 133
    RFLOAT          shift and go to state 134
    RSTRING         shift and go to state 135
    RBOOLEAN        shift and go to state 136

    type                           shift and go to state 132

state 183

    (51) attributesList -> ID DOUBLEDOT . type
    (96) type -> . RNUMBER
    (97) type -> . RFLOAT
    (98) type -> . RSTRING
    (99) type -> . RBOOLEAN

    RNUMBER         shift and go to state 133
    RFLOAT          shift and go to state 134
    RSTRING         shift and go to state 135
    RBOOLEAN        shift and go to state 136

    type                           shift and go to state 200

state 184

    (50) attributesList -> attributesList ID . DOUBLEDOT type

    DOUBLEDOT       shift and go to state 201


state 185

    (49) createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .

    SEMICOLON       reduce using rule 49 (createInterface -> RINTERFACE ID LLAVEA attributesList LLAVEC .)


state 186

    (53) interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for BY resolved as shift
  ! shift/reduce conflict for DIVIDED resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for MODUL resolved as shift
  ! shift/reduce conflict for DEQUAL resolved as shift
  ! shift/reduce conflict for DIFERENT resolved as shift
  ! shift/reduce conflict for MINOR resolved as shift
  ! shift/reduce conflict for MINOREQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    COMMA           reduce using rule 53 (interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression .)
    QUESTIONM       reduce using rule 53 (interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression .)
    PARC            reduce using rule 53 (interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression .)
    SEMICOLON       reduce using rule 53 (interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression .)
    BRACKETC        reduce using rule 53 (interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression .)
    DOUBLEDOT       reduce using rule 53 (interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression .)
    LLAVEC          reduce using rule 53 (interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74

  ! PLUS            [ reduce using rule 53 (interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression .) ]
  ! BY              [ reduce using rule 53 (interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression .) ]
  ! DIVIDED         [ reduce using rule 53 (interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression .) ]
  ! LESS            [ reduce using rule 53 (interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression .) ]
  ! MODUL           [ reduce using rule 53 (interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression .) ]
  ! DEQUAL          [ reduce using rule 53 (interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression .) ]
  ! DIFERENT        [ reduce using rule 53 (interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression .) ]
  ! MINOR           [ reduce using rule 53 (interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression .) ]
  ! MINOREQUAL      [ reduce using rule 53 (interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression .) ]
  ! GREATER         [ reduce using rule 53 (interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression .) ]
  ! GREATEREQUAL    [ reduce using rule 53 (interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression .) ]
  ! AND             [ reduce using rule 53 (interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression .) ]
  ! OR              [ reduce using rule 53 (interfaceContent -> interfaceContent COMMA ID DOUBLEDOT expression .) ]


state 187

    (19) print -> CONSOLE DOT LOG PARA expression_list PARC .

    SEMICOLON       reduce using rule 19 (print -> CONSOLE DOT LOG PARA expression_list PARC .)


state 188

    (68) expression_list -> expression_list COMMA . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 202
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 189

    (90) arraysExpression -> ID DOT RPOP PARA PARC .

    PARC            reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    PLUS            reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    BY              reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    DIVIDED         reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    LESS            reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    MODUL           reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    DEQUAL          reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    DIFERENT        reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    MINOR           reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    MINOREQUAL      reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    GREATER         reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    GREATEREQUAL    reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    AND             reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    OR              reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    QUESTIONM       reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    SEMICOLON       reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    BRACKETC        reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    COMMA           reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    DOUBLEDOT       reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)
    LLAVEC          reduce using rule 90 (arraysExpression -> ID DOT RPOP PARA PARC .)


state 190

    (52) declareInterface -> RVAR ID DOUBLEDOT ID EQUAL LLAVEA . interfaceContent LLAVEC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC

    ID              shift and go to state 203

    interfaceContent               shift and go to state 204

state 191

    (22) declarevar -> RVAR ID DOUBLEDOT type EQUAL expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    SEMICOLON       reduce using rule 22 (declarevar -> RVAR ID DOUBLEDOT type EQUAL expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74


state 192

    (34) assingArray -> ID BRACKETO expression BRACKETC EQUAL expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    SEMICOLON       reduce using rule 34 (assingArray -> ID BRACKETO expression BRACKETC EQUAL expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74


state 193

    (35) arrayFuncs -> ID DOT RPUSH PARA expression PARC .

    SEMICOLON       reduce using rule 35 (arrayFuncs -> ID DOT RPUSH PARA expression PARC .)


state 194

    (91) arraysExpression -> ID DOT RINDEXOF PARA expression PARC .

    QUESTIONM       reduce using rule 91 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    PLUS            reduce using rule 91 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    BY              reduce using rule 91 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    DIVIDED         reduce using rule 91 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    LESS            reduce using rule 91 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    MODUL           reduce using rule 91 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    DEQUAL          reduce using rule 91 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    DIFERENT        reduce using rule 91 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    MINOR           reduce using rule 91 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    MINOREQUAL      reduce using rule 91 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    GREATER         reduce using rule 91 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    GREATEREQUAL    reduce using rule 91 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    AND             reduce using rule 91 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    OR              reduce using rule 91 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    PARC            reduce using rule 91 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    SEMICOLON       reduce using rule 91 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    BRACKETC        reduce using rule 91 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    COMMA           reduce using rule 91 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    DOUBLEDOT       reduce using rule 91 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)
    LLAVEC          reduce using rule 91 (arraysExpression -> ID DOT RINDEXOF PARA expression PARC .)


state 195

    (25) declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    SEMICOLON       reduce using rule 25 (declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74


state 196

    (31) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC . EQUAL BRACKETO expression_list BRACKETC
    (32) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC . EQUAL expression
    (33) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC . EQUAL BRACKETO BRACKETC

    EQUAL           shift and go to state 205


state 197

    (37) if_else -> RIF PARA expression PARC LLAVEA instrucciones . LLAVEC else
    (2) instrucciones -> instrucciones . instruccion SEMICOLON
    (4) instruccion -> . print
    (5) instruccion -> . declarevar
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . declareArray
    (9) instruccion -> . assingArray
    (10) instruccion -> . arrayFuncs
    (11) instruccion -> . if_else
    (12) instruccion -> . ternario
    (13) instruccion -> . while_
    (14) instruccion -> . for_
    (15) instruccion -> . transfer
    (16) instruccion -> . createInterface
    (17) instruccion -> . declareInterface
    (18) instruccion -> . modifyInterface
    (19) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (22) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (23) declarevar -> . RVAR ID EQUAL expression
    (24) declarevar -> . RVAR ID DOUBLEDOT type
    (25) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (26) declareConst -> . RCONST ID EQUAL expression
    (27) declareConst -> . RCONST ID DOUBLEDOT type
    (28) assignVar -> . ID EQUAL expression
    (29) assignVar -> . ID PLUS EQUAL expression
    (30) assignVar -> . ID LESS EQUAL expression
    (31) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (32) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (33) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (34) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (35) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (36) arrayFuncs -> . ID DOT RPOP PARA PARC
    (37) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (41) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (42) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (43) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (44) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (45) transfer -> . RBREAK
    (46) transfer -> . RCONTINUE
    (47) transfer -> . RRETURN
    (48) transfer -> . RRETURN expression
    (49) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (52) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (55) modifyInterface -> . ID DOT ID EQUAL expression
    (20) declaration_type -> . RCONST
    (21) declaration_type -> . RVAR
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    LLAVEC          shift and go to state 206
    CONSOLE         shift and go to state 19
    RVAR            shift and go to state 21
    RCONST          shift and go to state 24
    ID              shift and go to state 22
    RIF             shift and go to state 27
    RWHILE          shift and go to state 28
    RFOR            shift and go to state 29
    RBREAK          shift and go to state 32
    RCONTINUE       shift and go to state 33
    RRETURN         shift and go to state 34
    RINTERFACE      shift and go to state 35
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 23
    instruccion                    shift and go to state 49
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    assingArray                    shift and go to state 9
    arrayFuncs                     shift and go to state 10
    if_else                        shift and go to state 11
    ternario                       shift and go to state 12
    while_                         shift and go to state 13
    for_                           shift and go to state 14
    transfer                       shift and go to state 15
    createInterface                shift and go to state 16
    declareInterface               shift and go to state 17
    modifyInterface                shift and go to state 18
    declaration_type               shift and go to state 26
    relacional                     shift and go to state 30
    id_                            shift and go to state 31
    interfaceContent               shift and go to state 36
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    arraysExpression               shift and go to state 41
    boolean                        shift and go to state 42

state 198

    (42) while_ -> RWHILE PARA expression PARC LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion SEMICOLON
    (4) instruccion -> . print
    (5) instruccion -> . declarevar
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . declareArray
    (9) instruccion -> . assingArray
    (10) instruccion -> . arrayFuncs
    (11) instruccion -> . if_else
    (12) instruccion -> . ternario
    (13) instruccion -> . while_
    (14) instruccion -> . for_
    (15) instruccion -> . transfer
    (16) instruccion -> . createInterface
    (17) instruccion -> . declareInterface
    (18) instruccion -> . modifyInterface
    (19) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (22) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (23) declarevar -> . RVAR ID EQUAL expression
    (24) declarevar -> . RVAR ID DOUBLEDOT type
    (25) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (26) declareConst -> . RCONST ID EQUAL expression
    (27) declareConst -> . RCONST ID DOUBLEDOT type
    (28) assignVar -> . ID EQUAL expression
    (29) assignVar -> . ID PLUS EQUAL expression
    (30) assignVar -> . ID LESS EQUAL expression
    (31) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (32) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (33) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (34) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (35) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (36) arrayFuncs -> . ID DOT RPOP PARA PARC
    (37) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (41) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (42) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (43) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (44) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (45) transfer -> . RBREAK
    (46) transfer -> . RCONTINUE
    (47) transfer -> . RRETURN
    (48) transfer -> . RRETURN expression
    (49) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (52) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (55) modifyInterface -> . ID DOT ID EQUAL expression
    (20) declaration_type -> . RCONST
    (21) declaration_type -> . RVAR
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    LLAVEC          shift and go to state 207
    CONSOLE         shift and go to state 19
    RVAR            shift and go to state 21
    RCONST          shift and go to state 24
    ID              shift and go to state 22
    RIF             shift and go to state 27
    RWHILE          shift and go to state 28
    RFOR            shift and go to state 29
    RBREAK          shift and go to state 32
    RCONTINUE       shift and go to state 33
    RRETURN         shift and go to state 34
    RINTERFACE      shift and go to state 35
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 23
    instruccion                    shift and go to state 49
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    assingArray                    shift and go to state 9
    arrayFuncs                     shift and go to state 10
    if_else                        shift and go to state 11
    ternario                       shift and go to state 12
    while_                         shift and go to state 13
    for_                           shift and go to state 14
    transfer                       shift and go to state 15
    createInterface                shift and go to state 16
    declareInterface               shift and go to state 17
    modifyInterface                shift and go to state 18
    declaration_type               shift and go to state 26
    relacional                     shift and go to state 30
    id_                            shift and go to state 31
    interfaceContent               shift and go to state 36
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    arraysExpression               shift and go to state 41
    boolean                        shift and go to state 42

state 199

    (43) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON . id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (44) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON . id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC

    ID              shift and go to state 209

    id_                            shift and go to state 208

state 200

    (51) attributesList -> ID DOUBLEDOT type .

    LLAVEC          reduce using rule 51 (attributesList -> ID DOUBLEDOT type .)
    ID              reduce using rule 51 (attributesList -> ID DOUBLEDOT type .)


state 201

    (50) attributesList -> attributesList ID DOUBLEDOT . type
    (96) type -> . RNUMBER
    (97) type -> . RFLOAT
    (98) type -> . RSTRING
    (99) type -> . RBOOLEAN

    RNUMBER         shift and go to state 133
    RFLOAT          shift and go to state 134
    RSTRING         shift and go to state 135
    RBOOLEAN        shift and go to state 136

    type                           shift and go to state 210

state 202

    (68) expression_list -> expression_list COMMA expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    PARC            reduce using rule 68 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 68 (expression_list -> expression_list COMMA expression .)
    BRACKETC        reduce using rule 68 (expression_list -> expression_list COMMA expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74


state 203

    (54) interfaceContent -> ID . DOUBLEDOT expression
    (66) interfaceContent -> ID . DOT RKEYS PARA PARC
    (67) interfaceContent -> ID . DOT RVALUES PARA PARC

    DOUBLEDOT       shift and go to state 60
    DOT             shift and go to state 211


state 204

    (52) declareInterface -> RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent . LLAVEC
    (53) interfaceContent -> interfaceContent . COMMA ID DOUBLEDOT expression

    LLAVEC          shift and go to state 212
    COMMA           shift and go to state 83


state 205

    (31) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL . BRACKETO expression_list BRACKETC
    (32) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL . expression
    (33) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL . BRACKETO BRACKETC
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    BRACKETO        shift and go to state 213
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 214
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 206

    (37) if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC . else
    (38) else -> . RELSE LLAVEA instrucciones LLAVEC
    (39) else -> . RELSE if_else
    (40) else -> .

    RELSE           shift and go to state 216
    SEMICOLON       reduce using rule 40 (else -> .)

    else                           shift and go to state 215

state 207

    (42) while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .

    SEMICOLON       reduce using rule 42 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)


state 208

    (43) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ . PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (44) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ . LESS LESS PARC LLAVEA instrucciones LLAVEC

    PLUS            shift and go to state 217
    LESS            shift and go to state 218


state 209

    (70) id_ -> ID .
    (71) id_ -> ID . BRACKETO expression BRACKETC

    PLUS            reduce using rule 70 (id_ -> ID .)
    LESS            reduce using rule 70 (id_ -> ID .)
    BRACKETO        shift and go to state 88


state 210

    (50) attributesList -> attributesList ID DOUBLEDOT type .

    LLAVEC          reduce using rule 50 (attributesList -> attributesList ID DOUBLEDOT type .)
    ID              reduce using rule 50 (attributesList -> attributesList ID DOUBLEDOT type .)


state 211

    (66) interfaceContent -> ID DOT . RKEYS PARA PARC
    (67) interfaceContent -> ID DOT . RVALUES PARA PARC

    RKEYS           shift and go to state 102
    RVALUES         shift and go to state 103


state 212

    (52) declareInterface -> RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC .

    SEMICOLON       reduce using rule 52 (declareInterface -> RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC .)


state 213

    (31) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO . expression_list BRACKETC
    (33) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO . BRACKETC
    (68) expression_list -> . expression_list COMMA expression
    (69) expression_list -> . expression
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    BRACKETC        shift and go to state 219
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    ID              shift and go to state 53
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression_list                shift and go to state 220
    expression                     shift and go to state 161
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    relacional                     shift and go to state 30
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    id_                            shift and go to state 31
    arraysExpression               shift and go to state 41
    interfaceContent               shift and go to state 36
    boolean                        shift and go to state 42

state 214

    (32) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .
    (72) aritmetica -> expression . PLUS expression
    (73) aritmetica -> expression . BY expression
    (74) aritmetica -> expression . DIVIDED expression
    (75) aritmetica -> expression . LESS expression
    (76) aritmetica -> expression . MODUL expression
    (78) relacional -> expression . DEQUAL expression
    (79) relacional -> expression . DIFERENT expression
    (80) relacional -> expression . MINOR expression
    (81) relacional -> expression . MINOREQUAL expression
    (82) relacional -> expression . GREATER expression
    (83) relacional -> expression . GREATEREQUAL expression
    (84) logica -> expression . AND expression
    (85) logica -> expression . OR expression

    SEMICOLON       reduce using rule 32 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression .)
    PLUS            shift and go to state 62
    BY              shift and go to state 63
    DIVIDED         shift and go to state 64
    LESS            shift and go to state 65
    MODUL           shift and go to state 66
    DEQUAL          shift and go to state 67
    DIFERENT        shift and go to state 68
    MINOR           shift and go to state 69
    MINOREQUAL      shift and go to state 70
    GREATER         shift and go to state 71
    GREATEREQUAL    shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74


state 215

    (37) if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .

    SEMICOLON       reduce using rule 37 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)


state 216

    (38) else -> RELSE . LLAVEA instrucciones LLAVEC
    (39) else -> RELSE . if_else
    (37) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else

    LLAVEA          shift and go to state 221
    RIF             shift and go to state 27

    if_else                        shift and go to state 222

state 217

    (43) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS . PLUS PARC LLAVEA instrucciones LLAVEC

    PLUS            shift and go to state 223


state 218

    (44) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS . LESS PARC LLAVEA instrucciones LLAVEC

    LESS            shift and go to state 224


state 219

    (33) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .

    SEMICOLON       reduce using rule 33 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC .)


state 220

    (31) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list . BRACKETC
    (68) expression_list -> expression_list . COMMA expression

    BRACKETC        shift and go to state 225
    COMMA           shift and go to state 188


state 221

    (38) else -> RELSE LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion SEMICOLON
    (3) instrucciones -> . instruccion SEMICOLON
    (4) instruccion -> . print
    (5) instruccion -> . declarevar
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . declareArray
    (9) instruccion -> . assingArray
    (10) instruccion -> . arrayFuncs
    (11) instruccion -> . if_else
    (12) instruccion -> . ternario
    (13) instruccion -> . while_
    (14) instruccion -> . for_
    (15) instruccion -> . transfer
    (16) instruccion -> . createInterface
    (17) instruccion -> . declareInterface
    (18) instruccion -> . modifyInterface
    (19) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (22) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (23) declarevar -> . RVAR ID EQUAL expression
    (24) declarevar -> . RVAR ID DOUBLEDOT type
    (25) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (26) declareConst -> . RCONST ID EQUAL expression
    (27) declareConst -> . RCONST ID DOUBLEDOT type
    (28) assignVar -> . ID EQUAL expression
    (29) assignVar -> . ID PLUS EQUAL expression
    (30) assignVar -> . ID LESS EQUAL expression
    (31) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (32) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (33) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (34) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (35) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (36) arrayFuncs -> . ID DOT RPOP PARA PARC
    (37) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (41) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (42) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (43) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (44) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (45) transfer -> . RBREAK
    (46) transfer -> . RCONTINUE
    (47) transfer -> . RRETURN
    (48) transfer -> . RRETURN expression
    (49) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (52) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (55) modifyInterface -> . ID DOT ID EQUAL expression
    (20) declaration_type -> . RCONST
    (21) declaration_type -> . RVAR
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    CONSOLE         shift and go to state 19
    RVAR            shift and go to state 21
    RCONST          shift and go to state 24
    ID              shift and go to state 22
    RIF             shift and go to state 27
    RWHILE          shift and go to state 28
    RFOR            shift and go to state 29
    RBREAK          shift and go to state 32
    RCONTINUE       shift and go to state 33
    RRETURN         shift and go to state 34
    RINTERFACE      shift and go to state 35
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    instrucciones                  shift and go to state 226
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    assingArray                    shift and go to state 9
    arrayFuncs                     shift and go to state 10
    if_else                        shift and go to state 11
    ternario                       shift and go to state 12
    while_                         shift and go to state 13
    for_                           shift and go to state 14
    transfer                       shift and go to state 15
    createInterface                shift and go to state 16
    declareInterface               shift and go to state 17
    modifyInterface                shift and go to state 18
    expression                     shift and go to state 23
    declaration_type               shift and go to state 26
    relacional                     shift and go to state 30
    id_                            shift and go to state 31
    interfaceContent               shift and go to state 36
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    arraysExpression               shift and go to state 41
    boolean                        shift and go to state 42

state 222

    (39) else -> RELSE if_else .

    SEMICOLON       reduce using rule 39 (else -> RELSE if_else .)


state 223

    (43) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS . PARC LLAVEA instrucciones LLAVEC

    PARC            shift and go to state 227


state 224

    (44) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS . PARC LLAVEA instrucciones LLAVEC

    PARC            shift and go to state 228


state 225

    (31) declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .

    SEMICOLON       reduce using rule 31 (declareArray -> declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC .)


state 226

    (38) else -> RELSE LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion SEMICOLON
    (4) instruccion -> . print
    (5) instruccion -> . declarevar
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . declareArray
    (9) instruccion -> . assingArray
    (10) instruccion -> . arrayFuncs
    (11) instruccion -> . if_else
    (12) instruccion -> . ternario
    (13) instruccion -> . while_
    (14) instruccion -> . for_
    (15) instruccion -> . transfer
    (16) instruccion -> . createInterface
    (17) instruccion -> . declareInterface
    (18) instruccion -> . modifyInterface
    (19) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (22) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (23) declarevar -> . RVAR ID EQUAL expression
    (24) declarevar -> . RVAR ID DOUBLEDOT type
    (25) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (26) declareConst -> . RCONST ID EQUAL expression
    (27) declareConst -> . RCONST ID DOUBLEDOT type
    (28) assignVar -> . ID EQUAL expression
    (29) assignVar -> . ID PLUS EQUAL expression
    (30) assignVar -> . ID LESS EQUAL expression
    (31) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (32) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (33) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (34) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (35) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (36) arrayFuncs -> . ID DOT RPOP PARA PARC
    (37) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (41) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (42) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (43) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (44) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (45) transfer -> . RBREAK
    (46) transfer -> . RCONTINUE
    (47) transfer -> . RRETURN
    (48) transfer -> . RRETURN expression
    (49) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (52) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (55) modifyInterface -> . ID DOT ID EQUAL expression
    (20) declaration_type -> . RCONST
    (21) declaration_type -> . RVAR
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    LLAVEC          shift and go to state 229
    CONSOLE         shift and go to state 19
    RVAR            shift and go to state 21
    RCONST          shift and go to state 24
    ID              shift and go to state 22
    RIF             shift and go to state 27
    RWHILE          shift and go to state 28
    RFOR            shift and go to state 29
    RBREAK          shift and go to state 32
    RCONTINUE       shift and go to state 33
    RRETURN         shift and go to state 34
    RINTERFACE      shift and go to state 35
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    instruccion                    shift and go to state 49
    print                          shift and go to state 4
    declarevar                     shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    assingArray                    shift and go to state 9
    arrayFuncs                     shift and go to state 10
    if_else                        shift and go to state 11
    ternario                       shift and go to state 12
    while_                         shift and go to state 13
    for_                           shift and go to state 14
    transfer                       shift and go to state 15
    createInterface                shift and go to state 16
    declareInterface               shift and go to state 17
    modifyInterface                shift and go to state 18
    expression                     shift and go to state 23
    declaration_type               shift and go to state 26
    relacional                     shift and go to state 30
    id_                            shift and go to state 31
    interfaceContent               shift and go to state 36
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    arraysExpression               shift and go to state 41
    boolean                        shift and go to state 42

state 227

    (43) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC . LLAVEA instrucciones LLAVEC

    LLAVEA          shift and go to state 230


state 228

    (44) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC . LLAVEA instrucciones LLAVEC

    LLAVEA          shift and go to state 231


state 229

    (38) else -> RELSE LLAVEA instrucciones LLAVEC .

    SEMICOLON       reduce using rule 38 (else -> RELSE LLAVEA instrucciones LLAVEC .)


state 230

    (43) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion SEMICOLON
    (3) instrucciones -> . instruccion SEMICOLON
    (4) instruccion -> . print
    (5) instruccion -> . declarevar
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . declareArray
    (9) instruccion -> . assingArray
    (10) instruccion -> . arrayFuncs
    (11) instruccion -> . if_else
    (12) instruccion -> . ternario
    (13) instruccion -> . while_
    (14) instruccion -> . for_
    (15) instruccion -> . transfer
    (16) instruccion -> . createInterface
    (17) instruccion -> . declareInterface
    (18) instruccion -> . modifyInterface
    (19) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (22) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (23) declarevar -> . RVAR ID EQUAL expression
    (24) declarevar -> . RVAR ID DOUBLEDOT type
    (25) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (26) declareConst -> . RCONST ID EQUAL expression
    (27) declareConst -> . RCONST ID DOUBLEDOT type
    (28) assignVar -> . ID EQUAL expression
    (29) assignVar -> . ID PLUS EQUAL expression
    (30) assignVar -> . ID LESS EQUAL expression
    (31) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (32) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (33) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (34) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (35) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (36) arrayFuncs -> . ID DOT RPOP PARA PARC
    (37) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (41) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (42) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (43) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (44) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (45) transfer -> . RBREAK
    (46) transfer -> . RCONTINUE
    (47) transfer -> . RRETURN
    (48) transfer -> . RRETURN expression
    (49) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (52) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (55) modifyInterface -> . ID DOT ID EQUAL expression
    (20) declaration_type -> . RCONST
    (21) declaration_type -> . RVAR
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    CONSOLE         shift and go to state 19
    RVAR            shift and go to state 21
    RCONST          shift and go to state 24
    ID              shift and go to state 22
    RIF             shift and go to state 27
    RWHILE          shift and go to state 28
    RFOR            shift and go to state 29
    RBREAK          shift and go to state 32
    RCONTINUE       shift and go to state 33
    RRETURN         shift and go to state 34
    RINTERFACE      shift and go to state 35
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    declarevar                     shift and go to state 5
    relacional                     shift and go to state 30
    id_                            shift and go to state 31
    instrucciones                  shift and go to state 232
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    assingArray                    shift and go to state 9
    arrayFuncs                     shift and go to state 10
    if_else                        shift and go to state 11
    ternario                       shift and go to state 12
    while_                         shift and go to state 13
    for_                           shift and go to state 14
    transfer                       shift and go to state 15
    createInterface                shift and go to state 16
    declareInterface               shift and go to state 17
    modifyInterface                shift and go to state 18
    expression                     shift and go to state 23
    declaration_type               shift and go to state 26
    interfaceContent               shift and go to state 36
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    arraysExpression               shift and go to state 41
    boolean                        shift and go to state 42

state 231

    (44) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion SEMICOLON
    (3) instrucciones -> . instruccion SEMICOLON
    (4) instruccion -> . print
    (5) instruccion -> . declarevar
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . declareArray
    (9) instruccion -> . assingArray
    (10) instruccion -> . arrayFuncs
    (11) instruccion -> . if_else
    (12) instruccion -> . ternario
    (13) instruccion -> . while_
    (14) instruccion -> . for_
    (15) instruccion -> . transfer
    (16) instruccion -> . createInterface
    (17) instruccion -> . declareInterface
    (18) instruccion -> . modifyInterface
    (19) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (22) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (23) declarevar -> . RVAR ID EQUAL expression
    (24) declarevar -> . RVAR ID DOUBLEDOT type
    (25) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (26) declareConst -> . RCONST ID EQUAL expression
    (27) declareConst -> . RCONST ID DOUBLEDOT type
    (28) assignVar -> . ID EQUAL expression
    (29) assignVar -> . ID PLUS EQUAL expression
    (30) assignVar -> . ID LESS EQUAL expression
    (31) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (32) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (33) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (34) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (35) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (36) arrayFuncs -> . ID DOT RPOP PARA PARC
    (37) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (41) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (42) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (43) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (44) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (45) transfer -> . RBREAK
    (46) transfer -> . RCONTINUE
    (47) transfer -> . RRETURN
    (48) transfer -> . RRETURN expression
    (49) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (52) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (55) modifyInterface -> . ID DOT ID EQUAL expression
    (20) declaration_type -> . RCONST
    (21) declaration_type -> . RVAR
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    CONSOLE         shift and go to state 19
    RVAR            shift and go to state 21
    RCONST          shift and go to state 24
    ID              shift and go to state 22
    RIF             shift and go to state 27
    RWHILE          shift and go to state 28
    RFOR            shift and go to state 29
    RBREAK          shift and go to state 32
    RCONTINUE       shift and go to state 33
    RRETURN         shift and go to state 34
    RINTERFACE      shift and go to state 35
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    declarevar                     shift and go to state 5
    relacional                     shift and go to state 30
    id_                            shift and go to state 31
    instrucciones                  shift and go to state 233
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    assingArray                    shift and go to state 9
    arrayFuncs                     shift and go to state 10
    if_else                        shift and go to state 11
    ternario                       shift and go to state 12
    while_                         shift and go to state 13
    for_                           shift and go to state 14
    transfer                       shift and go to state 15
    createInterface                shift and go to state 16
    declareInterface               shift and go to state 17
    modifyInterface                shift and go to state 18
    expression                     shift and go to state 23
    declaration_type               shift and go to state 26
    interfaceContent               shift and go to state 36
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    arraysExpression               shift and go to state 41
    boolean                        shift and go to state 42

state 232

    (43) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion SEMICOLON
    (4) instruccion -> . print
    (5) instruccion -> . declarevar
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . declareArray
    (9) instruccion -> . assingArray
    (10) instruccion -> . arrayFuncs
    (11) instruccion -> . if_else
    (12) instruccion -> . ternario
    (13) instruccion -> . while_
    (14) instruccion -> . for_
    (15) instruccion -> . transfer
    (16) instruccion -> . createInterface
    (17) instruccion -> . declareInterface
    (18) instruccion -> . modifyInterface
    (19) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (22) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (23) declarevar -> . RVAR ID EQUAL expression
    (24) declarevar -> . RVAR ID DOUBLEDOT type
    (25) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (26) declareConst -> . RCONST ID EQUAL expression
    (27) declareConst -> . RCONST ID DOUBLEDOT type
    (28) assignVar -> . ID EQUAL expression
    (29) assignVar -> . ID PLUS EQUAL expression
    (30) assignVar -> . ID LESS EQUAL expression
    (31) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (32) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (33) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (34) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (35) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (36) arrayFuncs -> . ID DOT RPOP PARA PARC
    (37) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (41) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (42) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (43) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (44) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (45) transfer -> . RBREAK
    (46) transfer -> . RCONTINUE
    (47) transfer -> . RRETURN
    (48) transfer -> . RRETURN expression
    (49) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (52) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (55) modifyInterface -> . ID DOT ID EQUAL expression
    (20) declaration_type -> . RCONST
    (21) declaration_type -> . RVAR
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    LLAVEC          shift and go to state 234
    CONSOLE         shift and go to state 19
    RVAR            shift and go to state 21
    RCONST          shift and go to state 24
    ID              shift and go to state 22
    RIF             shift and go to state 27
    RWHILE          shift and go to state 28
    RFOR            shift and go to state 29
    RBREAK          shift and go to state 32
    RCONTINUE       shift and go to state 33
    RRETURN         shift and go to state 34
    RINTERFACE      shift and go to state 35
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    declarevar                     shift and go to state 5
    relacional                     shift and go to state 30
    id_                            shift and go to state 31
    instruccion                    shift and go to state 49
    print                          shift and go to state 4
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    assingArray                    shift and go to state 9
    arrayFuncs                     shift and go to state 10
    if_else                        shift and go to state 11
    ternario                       shift and go to state 12
    while_                         shift and go to state 13
    for_                           shift and go to state 14
    transfer                       shift and go to state 15
    createInterface                shift and go to state 16
    declareInterface               shift and go to state 17
    modifyInterface                shift and go to state 18
    expression                     shift and go to state 23
    declaration_type               shift and go to state 26
    interfaceContent               shift and go to state 36
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    arraysExpression               shift and go to state 41
    boolean                        shift and go to state 42

state 233

    (44) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion SEMICOLON
    (4) instruccion -> . print
    (5) instruccion -> . declarevar
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . declareArray
    (9) instruccion -> . assingArray
    (10) instruccion -> . arrayFuncs
    (11) instruccion -> . if_else
    (12) instruccion -> . ternario
    (13) instruccion -> . while_
    (14) instruccion -> . for_
    (15) instruccion -> . transfer
    (16) instruccion -> . createInterface
    (17) instruccion -> . declareInterface
    (18) instruccion -> . modifyInterface
    (19) print -> . CONSOLE DOT LOG PARA expression_list PARC
    (22) declarevar -> . RVAR ID DOUBLEDOT type EQUAL expression
    (23) declarevar -> . RVAR ID EQUAL expression
    (24) declarevar -> . RVAR ID DOUBLEDOT type
    (25) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (26) declareConst -> . RCONST ID EQUAL expression
    (27) declareConst -> . RCONST ID DOUBLEDOT type
    (28) assignVar -> . ID EQUAL expression
    (29) assignVar -> . ID PLUS EQUAL expression
    (30) assignVar -> . ID LESS EQUAL expression
    (31) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO expression_list BRACKETC
    (32) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL expression
    (33) declareArray -> . declaration_type ID DOUBLEDOT type BRACKETO BRACKETC EQUAL BRACKETO BRACKETC
    (34) assingArray -> . ID BRACKETO expression BRACKETC EQUAL expression
    (35) arrayFuncs -> . ID DOT RPUSH PARA expression PARC
    (36) arrayFuncs -> . ID DOT RPOP PARA PARC
    (37) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (41) ternario -> . expression QUESTIONM expression DOUBLEDOT expression
    (42) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (43) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (44) for_ -> . RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (45) transfer -> . RBREAK
    (46) transfer -> . RCONTINUE
    (47) transfer -> . RRETURN
    (48) transfer -> . RRETURN expression
    (49) createInterface -> . RINTERFACE ID LLAVEA attributesList LLAVEC
    (52) declareInterface -> . RVAR ID DOUBLEDOT ID EQUAL LLAVEA interfaceContent LLAVEC
    (55) modifyInterface -> . ID DOT ID EQUAL expression
    (20) declaration_type -> . RCONST
    (21) declaration_type -> . RVAR
    (56) expression -> . primitivo
    (57) expression -> . aritmetica
    (58) expression -> . relacional
    (59) expression -> . logica
    (60) expression -> . expression_group
    (61) expression -> . id_
    (62) expression -> . arraysExpression
    (63) expression -> . interfaceContent
    (64) expression -> . boolean
    (87) primitivo -> . NUMBER
    (88) primitivo -> . FLOAT
    (89) primitivo -> . STRING
    (72) aritmetica -> . expression PLUS expression
    (73) aritmetica -> . expression BY expression
    (74) aritmetica -> . expression DIVIDED expression
    (75) aritmetica -> . expression LESS expression
    (76) aritmetica -> . expression MODUL expression
    (77) aritmetica -> . LESS expression
    (78) relacional -> . expression DEQUAL expression
    (79) relacional -> . expression DIFERENT expression
    (80) relacional -> . expression MINOR expression
    (81) relacional -> . expression MINOREQUAL expression
    (82) relacional -> . expression GREATER expression
    (83) relacional -> . expression GREATEREQUAL expression
    (84) logica -> . expression AND expression
    (85) logica -> . expression OR expression
    (86) logica -> . NOT expression
    (65) expression_group -> . PARA expression PARC
    (70) id_ -> . ID
    (71) id_ -> . ID BRACKETO expression BRACKETC
    (90) arraysExpression -> . ID DOT RPOP PARA PARC
    (91) arraysExpression -> . ID DOT RINDEXOF PARA expression PARC
    (92) arraysExpression -> . ID DOT RJOIN PARA PARC
    (93) arraysExpression -> . ID DOT RLENGTH PARA PARC
    (53) interfaceContent -> . interfaceContent COMMA ID DOUBLEDOT expression
    (54) interfaceContent -> . ID DOUBLEDOT expression
    (66) interfaceContent -> . ID DOT RKEYS PARA PARC
    (67) interfaceContent -> . ID DOT RVALUES PARA PARC
    (94) boolean -> . TRUE
    (95) boolean -> . FALSE

    LLAVEC          shift and go to state 235
    CONSOLE         shift and go to state 19
    RVAR            shift and go to state 21
    RCONST          shift and go to state 24
    ID              shift and go to state 22
    RIF             shift and go to state 27
    RWHILE          shift and go to state 28
    RFOR            shift and go to state 29
    RBREAK          shift and go to state 32
    RCONTINUE       shift and go to state 33
    RRETURN         shift and go to state 34
    RINTERFACE      shift and go to state 35
    NUMBER          shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    LESS            shift and go to state 25
    NOT             shift and go to state 46
    PARA            shift and go to state 20
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    declarevar                     shift and go to state 5
    relacional                     shift and go to state 30
    id_                            shift and go to state 31
    instruccion                    shift and go to state 49
    print                          shift and go to state 4
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    declareArray                   shift and go to state 8
    assingArray                    shift and go to state 9
    arrayFuncs                     shift and go to state 10
    if_else                        shift and go to state 11
    ternario                       shift and go to state 12
    while_                         shift and go to state 13
    for_                           shift and go to state 14
    transfer                       shift and go to state 15
    createInterface                shift and go to state 16
    declareInterface               shift and go to state 17
    modifyInterface                shift and go to state 18
    expression                     shift and go to state 23
    declaration_type               shift and go to state 26
    interfaceContent               shift and go to state 36
    primitivo                      shift and go to state 37
    aritmetica                     shift and go to state 38
    logica                         shift and go to state 39
    expression_group               shift and go to state 40
    arraysExpression               shift and go to state 41
    boolean                        shift and go to state 42

state 234

    (43) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .

    SEMICOLON       reduce using rule 43 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)


state 235

    (44) for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .

    SEMICOLON       reduce using rule 44 (for_ -> RFOR PARA declarevar SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 21 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 22 resolved as shift
WARNING: shift/reduce conflict for LESS in state 22 resolved as shift
WARNING: shift/reduce conflict for ID in state 24 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 36 resolved as shift
WARNING: shift/reduce conflict for DOUBLEDOT in state 53 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 104 resolved as shift
WARNING: shift/reduce conflict for BY in state 104 resolved as shift
WARNING: shift/reduce conflict for DIVIDED in state 104 resolved as shift
WARNING: shift/reduce conflict for LESS in state 104 resolved as shift
WARNING: shift/reduce conflict for MODUL in state 104 resolved as shift
WARNING: shift/reduce conflict for DEQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for DIFERENT in state 104 resolved as shift
WARNING: shift/reduce conflict for MINOR in state 104 resolved as shift
WARNING: shift/reduce conflict for MINOREQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 104 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for AND in state 104 resolved as shift
WARNING: shift/reduce conflict for OR in state 104 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 186 resolved as shift
WARNING: shift/reduce conflict for BY in state 186 resolved as shift
WARNING: shift/reduce conflict for DIVIDED in state 186 resolved as shift
WARNING: shift/reduce conflict for LESS in state 186 resolved as shift
WARNING: shift/reduce conflict for MODUL in state 186 resolved as shift
WARNING: shift/reduce conflict for DEQUAL in state 186 resolved as shift
WARNING: shift/reduce conflict for DIFERENT in state 186 resolved as shift
WARNING: shift/reduce conflict for MINOR in state 186 resolved as shift
WARNING: shift/reduce conflict for MINOREQUAL in state 186 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 186 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 186 resolved as shift
WARNING: shift/reduce conflict for AND in state 186 resolved as shift
WARNING: shift/reduce conflict for OR in state 186 resolved as shift
