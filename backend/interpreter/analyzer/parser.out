Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> print
Rule 5     print -> CONSOLE DOT LOG PARA expression PARC
Rule 6     expression -> primitivo
Rule 7     expression -> aritmetica
Rule 8     aritmetica -> expression PLUS expression
Rule 9     aritmetica -> expression LESS expression
Rule 10    aritmetica -> expression BY expression
Rule 11    aritmetica -> expression DIVIDED expression
Rule 12    aritmetica -> expression MODUL expression
Rule 13    aritmetica -> LESS expression
Rule 14    primitivo -> NUMBER
Rule 15    primitivo -> FLOAT
Rule 16    primitivo -> STRING
Rule 17    primitivo -> boolean
Rule 18    boolean -> TRUE
Rule 19    boolean -> FALSE

Terminals, with rules where they appear

BY                   : 10
CONSOLE              : 5
DIVIDED              : 11
DOT                  : 5
FALSE                : 19
FLOAT                : 15
LESS                 : 9 13
LOG                  : 5
MODUL                : 12
NUMBER               : 14
PARA                 : 5
PARC                 : 5
PLUS                 : 8
STRING               : 16
TRUE                 : 18
error                : 

Nonterminals, with rules where they appear

aritmetica           : 7
boolean              : 17
expression           : 5 8 8 9 9 10 10 11 11 12 12 13
instruccion          : 2 3
instrucciones        : 1 2
primitivo            : 6
print                : 4
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print
    (5) print -> . CONSOLE DOT LOG PARA expression PARC

    CONSOLE         shift and go to state 5

    start                          shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    print                          shift and go to state 4

state 1

    (0) S' -> start .



state 2

    (1) start -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print
    (5) print -> . CONSOLE DOT LOG PARA expression PARC

    $end            reduce using rule 1 (start -> instrucciones .)
    CONSOLE         shift and go to state 5

    instruccion                    shift and go to state 6
    print                          shift and go to state 4

state 3

    (3) instrucciones -> instruccion .

    CONSOLE         reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> print .

    CONSOLE         reduce using rule 4 (instruccion -> print .)
    $end            reduce using rule 4 (instruccion -> print .)


state 5

    (5) print -> CONSOLE . DOT LOG PARA expression PARC

    DOT             shift and go to state 7


state 6

    (2) instrucciones -> instrucciones instruccion .

    CONSOLE         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 7

    (5) print -> CONSOLE DOT . LOG PARA expression PARC

    LOG             shift and go to state 8


state 8

    (5) print -> CONSOLE DOT LOG . PARA expression PARC

    PARA            shift and go to state 9


state 9

    (5) print -> CONSOLE DOT LOG PARA . expression PARC
    (6) expression -> . primitivo
    (7) expression -> . aritmetica
    (14) primitivo -> . NUMBER
    (15) primitivo -> . FLOAT
    (16) primitivo -> . STRING
    (17) primitivo -> . boolean
    (8) aritmetica -> . expression PLUS expression
    (9) aritmetica -> . expression LESS expression
    (10) aritmetica -> . expression BY expression
    (11) aritmetica -> . expression DIVIDED expression
    (12) aritmetica -> . expression MODUL expression
    (13) aritmetica -> . LESS expression
    (18) boolean -> . TRUE
    (19) boolean -> . FALSE

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    LESS            shift and go to state 17
    TRUE            shift and go to state 18
    FALSE           shift and go to state 19

    expression                     shift and go to state 10
    primitivo                      shift and go to state 11
    aritmetica                     shift and go to state 12
    boolean                        shift and go to state 16

state 10

    (5) print -> CONSOLE DOT LOG PARA expression . PARC
    (8) aritmetica -> expression . PLUS expression
    (9) aritmetica -> expression . LESS expression
    (10) aritmetica -> expression . BY expression
    (11) aritmetica -> expression . DIVIDED expression
    (12) aritmetica -> expression . MODUL expression

    PARC            shift and go to state 20
    PLUS            shift and go to state 21
    LESS            shift and go to state 22
    BY              shift and go to state 23
    DIVIDED         shift and go to state 24
    MODUL           shift and go to state 25


state 11

    (6) expression -> primitivo .

    PARC            reduce using rule 6 (expression -> primitivo .)
    PLUS            reduce using rule 6 (expression -> primitivo .)
    LESS            reduce using rule 6 (expression -> primitivo .)
    BY              reduce using rule 6 (expression -> primitivo .)
    DIVIDED         reduce using rule 6 (expression -> primitivo .)
    MODUL           reduce using rule 6 (expression -> primitivo .)


state 12

    (7) expression -> aritmetica .

    PARC            reduce using rule 7 (expression -> aritmetica .)
    PLUS            reduce using rule 7 (expression -> aritmetica .)
    LESS            reduce using rule 7 (expression -> aritmetica .)
    BY              reduce using rule 7 (expression -> aritmetica .)
    DIVIDED         reduce using rule 7 (expression -> aritmetica .)
    MODUL           reduce using rule 7 (expression -> aritmetica .)


state 13

    (14) primitivo -> NUMBER .

    PARC            reduce using rule 14 (primitivo -> NUMBER .)
    PLUS            reduce using rule 14 (primitivo -> NUMBER .)
    LESS            reduce using rule 14 (primitivo -> NUMBER .)
    BY              reduce using rule 14 (primitivo -> NUMBER .)
    DIVIDED         reduce using rule 14 (primitivo -> NUMBER .)
    MODUL           reduce using rule 14 (primitivo -> NUMBER .)


state 14

    (15) primitivo -> FLOAT .

    PARC            reduce using rule 15 (primitivo -> FLOAT .)
    PLUS            reduce using rule 15 (primitivo -> FLOAT .)
    LESS            reduce using rule 15 (primitivo -> FLOAT .)
    BY              reduce using rule 15 (primitivo -> FLOAT .)
    DIVIDED         reduce using rule 15 (primitivo -> FLOAT .)
    MODUL           reduce using rule 15 (primitivo -> FLOAT .)


state 15

    (16) primitivo -> STRING .

    PARC            reduce using rule 16 (primitivo -> STRING .)
    PLUS            reduce using rule 16 (primitivo -> STRING .)
    LESS            reduce using rule 16 (primitivo -> STRING .)
    BY              reduce using rule 16 (primitivo -> STRING .)
    DIVIDED         reduce using rule 16 (primitivo -> STRING .)
    MODUL           reduce using rule 16 (primitivo -> STRING .)


state 16

    (17) primitivo -> boolean .

    PARC            reduce using rule 17 (primitivo -> boolean .)
    PLUS            reduce using rule 17 (primitivo -> boolean .)
    LESS            reduce using rule 17 (primitivo -> boolean .)
    BY              reduce using rule 17 (primitivo -> boolean .)
    DIVIDED         reduce using rule 17 (primitivo -> boolean .)
    MODUL           reduce using rule 17 (primitivo -> boolean .)


state 17

    (13) aritmetica -> LESS . expression
    (6) expression -> . primitivo
    (7) expression -> . aritmetica
    (14) primitivo -> . NUMBER
    (15) primitivo -> . FLOAT
    (16) primitivo -> . STRING
    (17) primitivo -> . boolean
    (8) aritmetica -> . expression PLUS expression
    (9) aritmetica -> . expression LESS expression
    (10) aritmetica -> . expression BY expression
    (11) aritmetica -> . expression DIVIDED expression
    (12) aritmetica -> . expression MODUL expression
    (13) aritmetica -> . LESS expression
    (18) boolean -> . TRUE
    (19) boolean -> . FALSE

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    LESS            shift and go to state 17
    TRUE            shift and go to state 18
    FALSE           shift and go to state 19

    expression                     shift and go to state 26
    primitivo                      shift and go to state 11
    aritmetica                     shift and go to state 12
    boolean                        shift and go to state 16

state 18

    (18) boolean -> TRUE .

    PARC            reduce using rule 18 (boolean -> TRUE .)
    PLUS            reduce using rule 18 (boolean -> TRUE .)
    LESS            reduce using rule 18 (boolean -> TRUE .)
    BY              reduce using rule 18 (boolean -> TRUE .)
    DIVIDED         reduce using rule 18 (boolean -> TRUE .)
    MODUL           reduce using rule 18 (boolean -> TRUE .)


state 19

    (19) boolean -> FALSE .

    PARC            reduce using rule 19 (boolean -> FALSE .)
    PLUS            reduce using rule 19 (boolean -> FALSE .)
    LESS            reduce using rule 19 (boolean -> FALSE .)
    BY              reduce using rule 19 (boolean -> FALSE .)
    DIVIDED         reduce using rule 19 (boolean -> FALSE .)
    MODUL           reduce using rule 19 (boolean -> FALSE .)


state 20

    (5) print -> CONSOLE DOT LOG PARA expression PARC .

    CONSOLE         reduce using rule 5 (print -> CONSOLE DOT LOG PARA expression PARC .)
    $end            reduce using rule 5 (print -> CONSOLE DOT LOG PARA expression PARC .)


state 21

    (8) aritmetica -> expression PLUS . expression
    (6) expression -> . primitivo
    (7) expression -> . aritmetica
    (14) primitivo -> . NUMBER
    (15) primitivo -> . FLOAT
    (16) primitivo -> . STRING
    (17) primitivo -> . boolean
    (8) aritmetica -> . expression PLUS expression
    (9) aritmetica -> . expression LESS expression
    (10) aritmetica -> . expression BY expression
    (11) aritmetica -> . expression DIVIDED expression
    (12) aritmetica -> . expression MODUL expression
    (13) aritmetica -> . LESS expression
    (18) boolean -> . TRUE
    (19) boolean -> . FALSE

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    LESS            shift and go to state 17
    TRUE            shift and go to state 18
    FALSE           shift and go to state 19

    expression                     shift and go to state 27
    primitivo                      shift and go to state 11
    aritmetica                     shift and go to state 12
    boolean                        shift and go to state 16

state 22

    (9) aritmetica -> expression LESS . expression
    (6) expression -> . primitivo
    (7) expression -> . aritmetica
    (14) primitivo -> . NUMBER
    (15) primitivo -> . FLOAT
    (16) primitivo -> . STRING
    (17) primitivo -> . boolean
    (8) aritmetica -> . expression PLUS expression
    (9) aritmetica -> . expression LESS expression
    (10) aritmetica -> . expression BY expression
    (11) aritmetica -> . expression DIVIDED expression
    (12) aritmetica -> . expression MODUL expression
    (13) aritmetica -> . LESS expression
    (18) boolean -> . TRUE
    (19) boolean -> . FALSE

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    LESS            shift and go to state 17
    TRUE            shift and go to state 18
    FALSE           shift and go to state 19

    expression                     shift and go to state 28
    primitivo                      shift and go to state 11
    aritmetica                     shift and go to state 12
    boolean                        shift and go to state 16

state 23

    (10) aritmetica -> expression BY . expression
    (6) expression -> . primitivo
    (7) expression -> . aritmetica
    (14) primitivo -> . NUMBER
    (15) primitivo -> . FLOAT
    (16) primitivo -> . STRING
    (17) primitivo -> . boolean
    (8) aritmetica -> . expression PLUS expression
    (9) aritmetica -> . expression LESS expression
    (10) aritmetica -> . expression BY expression
    (11) aritmetica -> . expression DIVIDED expression
    (12) aritmetica -> . expression MODUL expression
    (13) aritmetica -> . LESS expression
    (18) boolean -> . TRUE
    (19) boolean -> . FALSE

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    LESS            shift and go to state 17
    TRUE            shift and go to state 18
    FALSE           shift and go to state 19

    expression                     shift and go to state 29
    primitivo                      shift and go to state 11
    aritmetica                     shift and go to state 12
    boolean                        shift and go to state 16

state 24

    (11) aritmetica -> expression DIVIDED . expression
    (6) expression -> . primitivo
    (7) expression -> . aritmetica
    (14) primitivo -> . NUMBER
    (15) primitivo -> . FLOAT
    (16) primitivo -> . STRING
    (17) primitivo -> . boolean
    (8) aritmetica -> . expression PLUS expression
    (9) aritmetica -> . expression LESS expression
    (10) aritmetica -> . expression BY expression
    (11) aritmetica -> . expression DIVIDED expression
    (12) aritmetica -> . expression MODUL expression
    (13) aritmetica -> . LESS expression
    (18) boolean -> . TRUE
    (19) boolean -> . FALSE

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    LESS            shift and go to state 17
    TRUE            shift and go to state 18
    FALSE           shift and go to state 19

    expression                     shift and go to state 30
    primitivo                      shift and go to state 11
    aritmetica                     shift and go to state 12
    boolean                        shift and go to state 16

state 25

    (12) aritmetica -> expression MODUL . expression
    (6) expression -> . primitivo
    (7) expression -> . aritmetica
    (14) primitivo -> . NUMBER
    (15) primitivo -> . FLOAT
    (16) primitivo -> . STRING
    (17) primitivo -> . boolean
    (8) aritmetica -> . expression PLUS expression
    (9) aritmetica -> . expression LESS expression
    (10) aritmetica -> . expression BY expression
    (11) aritmetica -> . expression DIVIDED expression
    (12) aritmetica -> . expression MODUL expression
    (13) aritmetica -> . LESS expression
    (18) boolean -> . TRUE
    (19) boolean -> . FALSE

    NUMBER          shift and go to state 13
    FLOAT           shift and go to state 14
    STRING          shift and go to state 15
    LESS            shift and go to state 17
    TRUE            shift and go to state 18
    FALSE           shift and go to state 19

    expression                     shift and go to state 31
    primitivo                      shift and go to state 11
    aritmetica                     shift and go to state 12
    boolean                        shift and go to state 16

state 26

    (13) aritmetica -> LESS expression .
    (8) aritmetica -> expression . PLUS expression
    (9) aritmetica -> expression . LESS expression
    (10) aritmetica -> expression . BY expression
    (11) aritmetica -> expression . DIVIDED expression
    (12) aritmetica -> expression . MODUL expression

    PARC            reduce using rule 13 (aritmetica -> LESS expression .)
    PLUS            reduce using rule 13 (aritmetica -> LESS expression .)
    LESS            reduce using rule 13 (aritmetica -> LESS expression .)
    BY              reduce using rule 13 (aritmetica -> LESS expression .)
    DIVIDED         reduce using rule 13 (aritmetica -> LESS expression .)
    MODUL           reduce using rule 13 (aritmetica -> LESS expression .)

  ! PLUS            [ shift and go to state 21 ]
  ! LESS            [ shift and go to state 22 ]
  ! BY              [ shift and go to state 23 ]
  ! DIVIDED         [ shift and go to state 24 ]
  ! MODUL           [ shift and go to state 25 ]


state 27

    (8) aritmetica -> expression PLUS expression .
    (8) aritmetica -> expression . PLUS expression
    (9) aritmetica -> expression . LESS expression
    (10) aritmetica -> expression . BY expression
    (11) aritmetica -> expression . DIVIDED expression
    (12) aritmetica -> expression . MODUL expression

    PARC            reduce using rule 8 (aritmetica -> expression PLUS expression .)
    PLUS            reduce using rule 8 (aritmetica -> expression PLUS expression .)
    LESS            reduce using rule 8 (aritmetica -> expression PLUS expression .)
    BY              shift and go to state 23
    DIVIDED         shift and go to state 24
    MODUL           shift and go to state 25

  ! BY              [ reduce using rule 8 (aritmetica -> expression PLUS expression .) ]
  ! DIVIDED         [ reduce using rule 8 (aritmetica -> expression PLUS expression .) ]
  ! MODUL           [ reduce using rule 8 (aritmetica -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 21 ]
  ! LESS            [ shift and go to state 22 ]


state 28

    (9) aritmetica -> expression LESS expression .
    (8) aritmetica -> expression . PLUS expression
    (9) aritmetica -> expression . LESS expression
    (10) aritmetica -> expression . BY expression
    (11) aritmetica -> expression . DIVIDED expression
    (12) aritmetica -> expression . MODUL expression

    PARC            reduce using rule 9 (aritmetica -> expression LESS expression .)
    PLUS            reduce using rule 9 (aritmetica -> expression LESS expression .)
    LESS            reduce using rule 9 (aritmetica -> expression LESS expression .)
    BY              shift and go to state 23
    DIVIDED         shift and go to state 24
    MODUL           shift and go to state 25

  ! BY              [ reduce using rule 9 (aritmetica -> expression LESS expression .) ]
  ! DIVIDED         [ reduce using rule 9 (aritmetica -> expression LESS expression .) ]
  ! MODUL           [ reduce using rule 9 (aritmetica -> expression LESS expression .) ]
  ! PLUS            [ shift and go to state 21 ]
  ! LESS            [ shift and go to state 22 ]


state 29

    (10) aritmetica -> expression BY expression .
    (8) aritmetica -> expression . PLUS expression
    (9) aritmetica -> expression . LESS expression
    (10) aritmetica -> expression . BY expression
    (11) aritmetica -> expression . DIVIDED expression
    (12) aritmetica -> expression . MODUL expression

    PARC            reduce using rule 10 (aritmetica -> expression BY expression .)
    PLUS            reduce using rule 10 (aritmetica -> expression BY expression .)
    LESS            reduce using rule 10 (aritmetica -> expression BY expression .)
    BY              reduce using rule 10 (aritmetica -> expression BY expression .)
    DIVIDED         reduce using rule 10 (aritmetica -> expression BY expression .)
    MODUL           reduce using rule 10 (aritmetica -> expression BY expression .)

  ! PLUS            [ shift and go to state 21 ]
  ! LESS            [ shift and go to state 22 ]
  ! BY              [ shift and go to state 23 ]
  ! DIVIDED         [ shift and go to state 24 ]
  ! MODUL           [ shift and go to state 25 ]


state 30

    (11) aritmetica -> expression DIVIDED expression .
    (8) aritmetica -> expression . PLUS expression
    (9) aritmetica -> expression . LESS expression
    (10) aritmetica -> expression . BY expression
    (11) aritmetica -> expression . DIVIDED expression
    (12) aritmetica -> expression . MODUL expression

    PARC            reduce using rule 11 (aritmetica -> expression DIVIDED expression .)
    PLUS            reduce using rule 11 (aritmetica -> expression DIVIDED expression .)
    LESS            reduce using rule 11 (aritmetica -> expression DIVIDED expression .)
    BY              reduce using rule 11 (aritmetica -> expression DIVIDED expression .)
    DIVIDED         reduce using rule 11 (aritmetica -> expression DIVIDED expression .)
    MODUL           reduce using rule 11 (aritmetica -> expression DIVIDED expression .)

  ! PLUS            [ shift and go to state 21 ]
  ! LESS            [ shift and go to state 22 ]
  ! BY              [ shift and go to state 23 ]
  ! DIVIDED         [ shift and go to state 24 ]
  ! MODUL           [ shift and go to state 25 ]


state 31

    (12) aritmetica -> expression MODUL expression .
    (8) aritmetica -> expression . PLUS expression
    (9) aritmetica -> expression . LESS expression
    (10) aritmetica -> expression . BY expression
    (11) aritmetica -> expression . DIVIDED expression
    (12) aritmetica -> expression . MODUL expression

    PARC            reduce using rule 12 (aritmetica -> expression MODUL expression .)
    PLUS            reduce using rule 12 (aritmetica -> expression MODUL expression .)
    LESS            reduce using rule 12 (aritmetica -> expression MODUL expression .)
    BY              reduce using rule 12 (aritmetica -> expression MODUL expression .)
    DIVIDED         reduce using rule 12 (aritmetica -> expression MODUL expression .)
    MODUL           reduce using rule 12 (aritmetica -> expression MODUL expression .)

  ! PLUS            [ shift and go to state 21 ]
  ! LESS            [ shift and go to state 22 ]
  ! BY              [ shift and go to state 23 ]
  ! DIVIDED         [ shift and go to state 24 ]
  ! MODUL           [ shift and go to state 25 ]

