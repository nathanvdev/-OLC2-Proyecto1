Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> print
Rule 5     print -> CONSOLE DOT LOG PARA STRING PARC

Terminals, with rules where they appear

CONSOLE              : 5
DOT                  : 5
LOG                  : 5
PARA                 : 5
PARC                 : 5
STRING               : 5
error                : 

Nonterminals, with rules where they appear

instruccion          : 2 3
instrucciones        : 1 2
print                : 4
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print
    (5) print -> . CONSOLE DOT LOG PARA STRING PARC

    CONSOLE         shift and go to state 5

    start                          shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    print                          shift and go to state 4

state 1

    (0) S' -> start .



state 2

    (1) start -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print
    (5) print -> . CONSOLE DOT LOG PARA STRING PARC

    $end            reduce using rule 1 (start -> instrucciones .)
    CONSOLE         shift and go to state 5

    instruccion                    shift and go to state 6
    print                          shift and go to state 4

state 3

    (3) instrucciones -> instruccion .

    CONSOLE         reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> print .

    CONSOLE         reduce using rule 4 (instruccion -> print .)
    $end            reduce using rule 4 (instruccion -> print .)


state 5

    (5) print -> CONSOLE . DOT LOG PARA STRING PARC

    DOT             shift and go to state 7


state 6

    (2) instrucciones -> instrucciones instruccion .

    CONSOLE         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 7

    (5) print -> CONSOLE DOT . LOG PARA STRING PARC

    LOG             shift and go to state 8


state 8

    (5) print -> CONSOLE DOT LOG . PARA STRING PARC

    PARA            shift and go to state 9


state 9

    (5) print -> CONSOLE DOT LOG PARA . STRING PARC

    STRING          shift and go to state 10


state 10

    (5) print -> CONSOLE DOT LOG PARA STRING . PARC

    PARC            shift and go to state 11


state 11

    (5) print -> CONSOLE DOT LOG PARA STRING PARC .

    CONSOLE         reduce using rule 5 (print -> CONSOLE DOT LOG PARA STRING PARC .)
    $end            reduce using rule 5 (print -> CONSOLE DOT LOG PARA STRING PARC .)

