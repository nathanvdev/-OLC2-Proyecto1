Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> print
Rule 5     instruccion -> declare
Rule 6     instruccion -> declareConst
Rule 7     instruccion -> assignVar
Rule 8     instruccion -> if_else
Rule 9     instruccion -> while_
Rule 10    instruccion -> for_
Rule 11    print -> CONSOLE DOT LOG PARA expression PARC
Rule 12    declare -> RVAR ID DOUBLEDOT type EQUAL expression
Rule 13    declare -> RVAR ID EQUAL expression
Rule 14    declare -> RVAR ID DOUBLEDOT type
Rule 15    declareConst -> RCONST ID DOUBLEDOT type EQUAL expression
Rule 16    declareConst -> RCONST ID EQUAL expression
Rule 17    declareConst -> RCONST ID DOUBLEDOT type
Rule 18    assignVar -> ID EQUAL expression
Rule 19    assignVar -> ID PLUS EQUAL expression
Rule 20    assignVar -> ID LESS EQUAL expression
Rule 21    if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
Rule 22    else -> RELSE LLAVEA instrucciones LLAVEC
Rule 23    else -> RELSE if_else
Rule 24    else -> <empty>
Rule 25    while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
Rule 26    for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
Rule 27    for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
Rule 28    expression -> primitivo
Rule 29    expression -> aritmetica
Rule 30    expression -> relacional
Rule 31    expression -> logica
Rule 32    expression -> id_
Rule 33    id_ -> ID
Rule 34    aritmetica -> expression PLUS expression
Rule 35    aritmetica -> expression BY expression
Rule 36    aritmetica -> expression DIVIDED expression
Rule 37    aritmetica -> expression LESS expression
Rule 38    aritmetica -> expression MODUL expression
Rule 39    aritmetica -> LESS expression
Rule 40    relacional -> expression DEQUAL expression
Rule 41    relacional -> expression DIFERENT expression
Rule 42    relacional -> expression MINOR expression
Rule 43    relacional -> expression MINOREQUAL expression
Rule 44    relacional -> expression GREATER expression
Rule 45    relacional -> expression GREATEREQUAL expression
Rule 46    logica -> boolean AND boolean
Rule 47    logica -> boolean OR boolean
Rule 48    logica -> NOT boolean
Rule 49    primitivo -> NUMBER
Rule 50    primitivo -> FLOAT
Rule 51    primitivo -> STRING
Rule 52    primitivo -> boolean
Rule 53    boolean -> TRUE
Rule 54    boolean -> FALSE
Rule 55    type -> RNUMBER
Rule 56    type -> RFLOAT
Rule 57    type -> RSTRING
Rule 58    type -> RBOOLEAN

Terminals, with rules where they appear

AND                  : 46
BY                   : 35
CONSOLE              : 11
DEQUAL               : 40
DIFERENT             : 41
DIVIDED              : 36
DOT                  : 11
DOUBLEDOT            : 12 14 15 17
EQUAL                : 12 13 15 16 18 19 20
FALSE                : 54
FLOAT                : 50
GREATER              : 44
GREATEREQUAL         : 45
ID                   : 12 13 14 15 16 17 18 19 20 33
LESS                 : 20 27 27 37 39
LLAVEA               : 21 22 25 26 27
LLAVEC               : 21 22 25 26 27
LOG                  : 11
MINOR                : 42
MINOREQUAL           : 43
MODUL                : 38
NOT                  : 48
NUMBER               : 49
OR                   : 47
PARA                 : 11 21 25 26 27
PARC                 : 11 21 25 26 27
PLUS                 : 19 26 26 34
RBOOLEAN             : 58
RCONST               : 15 16 17
RELSE                : 22 23
RFLOAT               : 56
RFOR                 : 26 27
RIF                  : 21
RNUMBER              : 55
RSTRING              : 57
RVAR                 : 12 13 14
RWHILE               : 25
SEMICOLON            : 26 26 27 27
STRING               : 51
TRUE                 : 53
error                : 

Nonterminals, with rules where they appear

aritmetica           : 29
assignVar            : 7
boolean              : 46 46 47 47 48 52
declare              : 5 26 27
declareConst         : 6
else                 : 21
expression           : 11 12 13 15 16 18 19 20 21 25 34 34 35 35 36 36 37 37 38 38 39 40 40 41 41 42 42 43 43 44 44 45 45
for_                 : 10
id_                  : 26 27 32
if_else              : 8 23
instruccion          : 2 3
instrucciones        : 1 2 21 22 25 26 27
logica               : 31
primitivo            : 28
print                : 4
relacional           : 26 27 30
start                : 0
type                 : 12 14 15 17
while_               : 9

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declare
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . if_else
    (9) instruccion -> . while_
    (10) instruccion -> . for_
    (11) print -> . CONSOLE DOT LOG PARA expression PARC
    (12) declare -> . RVAR ID DOUBLEDOT type EQUAL expression
    (13) declare -> . RVAR ID EQUAL expression
    (14) declare -> . RVAR ID DOUBLEDOT type
    (15) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (16) declareConst -> . RCONST ID EQUAL expression
    (17) declareConst -> . RCONST ID DOUBLEDOT type
    (18) assignVar -> . ID EQUAL expression
    (19) assignVar -> . ID PLUS EQUAL expression
    (20) assignVar -> . ID LESS EQUAL expression
    (21) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (25) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (26) for_ -> . RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (27) for_ -> . RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC

    CONSOLE         shift and go to state 11
    RVAR            shift and go to state 12
    RCONST          shift and go to state 14
    ID              shift and go to state 13
    RIF             shift and go to state 15
    RWHILE          shift and go to state 16
    RFOR            shift and go to state 17

    start                          shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declare                        shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    if_else                        shift and go to state 8
    while_                         shift and go to state 9
    for_                           shift and go to state 10

state 1

    (0) S' -> start .



state 2

    (1) start -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declare
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . if_else
    (9) instruccion -> . while_
    (10) instruccion -> . for_
    (11) print -> . CONSOLE DOT LOG PARA expression PARC
    (12) declare -> . RVAR ID DOUBLEDOT type EQUAL expression
    (13) declare -> . RVAR ID EQUAL expression
    (14) declare -> . RVAR ID DOUBLEDOT type
    (15) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (16) declareConst -> . RCONST ID EQUAL expression
    (17) declareConst -> . RCONST ID DOUBLEDOT type
    (18) assignVar -> . ID EQUAL expression
    (19) assignVar -> . ID PLUS EQUAL expression
    (20) assignVar -> . ID LESS EQUAL expression
    (21) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (25) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (26) for_ -> . RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (27) for_ -> . RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC

    $end            reduce using rule 1 (start -> instrucciones .)
    CONSOLE         shift and go to state 11
    RVAR            shift and go to state 12
    RCONST          shift and go to state 14
    ID              shift and go to state 13
    RIF             shift and go to state 15
    RWHILE          shift and go to state 16
    RFOR            shift and go to state 17

    instruccion                    shift and go to state 18
    print                          shift and go to state 4
    declare                        shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    if_else                        shift and go to state 8
    while_                         shift and go to state 9
    for_                           shift and go to state 10

state 3

    (3) instrucciones -> instruccion .

    CONSOLE         reduce using rule 3 (instrucciones -> instruccion .)
    RVAR            reduce using rule 3 (instrucciones -> instruccion .)
    RCONST          reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    RIF             reduce using rule 3 (instrucciones -> instruccion .)
    RWHILE          reduce using rule 3 (instrucciones -> instruccion .)
    RFOR            reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVEC          reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> print .

    CONSOLE         reduce using rule 4 (instruccion -> print .)
    RVAR            reduce using rule 4 (instruccion -> print .)
    RCONST          reduce using rule 4 (instruccion -> print .)
    ID              reduce using rule 4 (instruccion -> print .)
    RIF             reduce using rule 4 (instruccion -> print .)
    RWHILE          reduce using rule 4 (instruccion -> print .)
    RFOR            reduce using rule 4 (instruccion -> print .)
    $end            reduce using rule 4 (instruccion -> print .)
    LLAVEC          reduce using rule 4 (instruccion -> print .)


state 5

    (5) instruccion -> declare .

    CONSOLE         reduce using rule 5 (instruccion -> declare .)
    RVAR            reduce using rule 5 (instruccion -> declare .)
    RCONST          reduce using rule 5 (instruccion -> declare .)
    ID              reduce using rule 5 (instruccion -> declare .)
    RIF             reduce using rule 5 (instruccion -> declare .)
    RWHILE          reduce using rule 5 (instruccion -> declare .)
    RFOR            reduce using rule 5 (instruccion -> declare .)
    $end            reduce using rule 5 (instruccion -> declare .)
    LLAVEC          reduce using rule 5 (instruccion -> declare .)


state 6

    (6) instruccion -> declareConst .

    CONSOLE         reduce using rule 6 (instruccion -> declareConst .)
    RVAR            reduce using rule 6 (instruccion -> declareConst .)
    RCONST          reduce using rule 6 (instruccion -> declareConst .)
    ID              reduce using rule 6 (instruccion -> declareConst .)
    RIF             reduce using rule 6 (instruccion -> declareConst .)
    RWHILE          reduce using rule 6 (instruccion -> declareConst .)
    RFOR            reduce using rule 6 (instruccion -> declareConst .)
    $end            reduce using rule 6 (instruccion -> declareConst .)
    LLAVEC          reduce using rule 6 (instruccion -> declareConst .)


state 7

    (7) instruccion -> assignVar .

    CONSOLE         reduce using rule 7 (instruccion -> assignVar .)
    RVAR            reduce using rule 7 (instruccion -> assignVar .)
    RCONST          reduce using rule 7 (instruccion -> assignVar .)
    ID              reduce using rule 7 (instruccion -> assignVar .)
    RIF             reduce using rule 7 (instruccion -> assignVar .)
    RWHILE          reduce using rule 7 (instruccion -> assignVar .)
    RFOR            reduce using rule 7 (instruccion -> assignVar .)
    $end            reduce using rule 7 (instruccion -> assignVar .)
    LLAVEC          reduce using rule 7 (instruccion -> assignVar .)


state 8

    (8) instruccion -> if_else .

    CONSOLE         reduce using rule 8 (instruccion -> if_else .)
    RVAR            reduce using rule 8 (instruccion -> if_else .)
    RCONST          reduce using rule 8 (instruccion -> if_else .)
    ID              reduce using rule 8 (instruccion -> if_else .)
    RIF             reduce using rule 8 (instruccion -> if_else .)
    RWHILE          reduce using rule 8 (instruccion -> if_else .)
    RFOR            reduce using rule 8 (instruccion -> if_else .)
    $end            reduce using rule 8 (instruccion -> if_else .)
    LLAVEC          reduce using rule 8 (instruccion -> if_else .)


state 9

    (9) instruccion -> while_ .

    CONSOLE         reduce using rule 9 (instruccion -> while_ .)
    RVAR            reduce using rule 9 (instruccion -> while_ .)
    RCONST          reduce using rule 9 (instruccion -> while_ .)
    ID              reduce using rule 9 (instruccion -> while_ .)
    RIF             reduce using rule 9 (instruccion -> while_ .)
    RWHILE          reduce using rule 9 (instruccion -> while_ .)
    RFOR            reduce using rule 9 (instruccion -> while_ .)
    $end            reduce using rule 9 (instruccion -> while_ .)
    LLAVEC          reduce using rule 9 (instruccion -> while_ .)


state 10

    (10) instruccion -> for_ .

    CONSOLE         reduce using rule 10 (instruccion -> for_ .)
    RVAR            reduce using rule 10 (instruccion -> for_ .)
    RCONST          reduce using rule 10 (instruccion -> for_ .)
    ID              reduce using rule 10 (instruccion -> for_ .)
    RIF             reduce using rule 10 (instruccion -> for_ .)
    RWHILE          reduce using rule 10 (instruccion -> for_ .)
    RFOR            reduce using rule 10 (instruccion -> for_ .)
    $end            reduce using rule 10 (instruccion -> for_ .)
    LLAVEC          reduce using rule 10 (instruccion -> for_ .)


state 11

    (11) print -> CONSOLE . DOT LOG PARA expression PARC

    DOT             shift and go to state 19


state 12

    (12) declare -> RVAR . ID DOUBLEDOT type EQUAL expression
    (13) declare -> RVAR . ID EQUAL expression
    (14) declare -> RVAR . ID DOUBLEDOT type

    ID              shift and go to state 20


state 13

    (18) assignVar -> ID . EQUAL expression
    (19) assignVar -> ID . PLUS EQUAL expression
    (20) assignVar -> ID . LESS EQUAL expression

    EQUAL           shift and go to state 21
    PLUS            shift and go to state 22
    LESS            shift and go to state 23


state 14

    (15) declareConst -> RCONST . ID DOUBLEDOT type EQUAL expression
    (16) declareConst -> RCONST . ID EQUAL expression
    (17) declareConst -> RCONST . ID DOUBLEDOT type

    ID              shift and go to state 24


state 15

    (21) if_else -> RIF . PARA expression PARC LLAVEA instrucciones LLAVEC else

    PARA            shift and go to state 25


state 16

    (25) while_ -> RWHILE . PARA expression PARC LLAVEA instrucciones LLAVEC

    PARA            shift and go to state 26


state 17

    (26) for_ -> RFOR . PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (27) for_ -> RFOR . PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC

    PARA            shift and go to state 27


state 18

    (2) instrucciones -> instrucciones instruccion .

    CONSOLE         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RVAR            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RCONST          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RIF             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RWHILE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RFOR            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVEC          reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 19

    (11) print -> CONSOLE DOT . LOG PARA expression PARC

    LOG             shift and go to state 28


state 20

    (12) declare -> RVAR ID . DOUBLEDOT type EQUAL expression
    (13) declare -> RVAR ID . EQUAL expression
    (14) declare -> RVAR ID . DOUBLEDOT type

    DOUBLEDOT       shift and go to state 29
    EQUAL           shift and go to state 30


state 21

    (18) assignVar -> ID EQUAL . expression
    (28) expression -> . primitivo
    (29) expression -> . aritmetica
    (30) expression -> . relacional
    (31) expression -> . logica
    (32) expression -> . id_
    (49) primitivo -> . NUMBER
    (50) primitivo -> . FLOAT
    (51) primitivo -> . STRING
    (52) primitivo -> . boolean
    (34) aritmetica -> . expression PLUS expression
    (35) aritmetica -> . expression BY expression
    (36) aritmetica -> . expression DIVIDED expression
    (37) aritmetica -> . expression LESS expression
    (38) aritmetica -> . expression MODUL expression
    (39) aritmetica -> . LESS expression
    (40) relacional -> . expression DEQUAL expression
    (41) relacional -> . expression DIFERENT expression
    (42) relacional -> . expression MINOR expression
    (43) relacional -> . expression MINOREQUAL expression
    (44) relacional -> . expression GREATER expression
    (45) relacional -> . expression GREATEREQUAL expression
    (46) logica -> . boolean AND boolean
    (47) logica -> . boolean OR boolean
    (48) logica -> . NOT boolean
    (33) id_ -> . ID
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    LESS            shift and go to state 42
    NOT             shift and go to state 43
    ID              shift and go to state 31
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    expression                     shift and go to state 32
    primitivo                      shift and go to state 33
    aritmetica                     shift and go to state 34
    relacional                     shift and go to state 35
    logica                         shift and go to state 36
    id_                            shift and go to state 37
    boolean                        shift and go to state 41

state 22

    (19) assignVar -> ID PLUS . EQUAL expression

    EQUAL           shift and go to state 46


state 23

    (20) assignVar -> ID LESS . EQUAL expression

    EQUAL           shift and go to state 47


state 24

    (15) declareConst -> RCONST ID . DOUBLEDOT type EQUAL expression
    (16) declareConst -> RCONST ID . EQUAL expression
    (17) declareConst -> RCONST ID . DOUBLEDOT type

    DOUBLEDOT       shift and go to state 48
    EQUAL           shift and go to state 49


state 25

    (21) if_else -> RIF PARA . expression PARC LLAVEA instrucciones LLAVEC else
    (28) expression -> . primitivo
    (29) expression -> . aritmetica
    (30) expression -> . relacional
    (31) expression -> . logica
    (32) expression -> . id_
    (49) primitivo -> . NUMBER
    (50) primitivo -> . FLOAT
    (51) primitivo -> . STRING
    (52) primitivo -> . boolean
    (34) aritmetica -> . expression PLUS expression
    (35) aritmetica -> . expression BY expression
    (36) aritmetica -> . expression DIVIDED expression
    (37) aritmetica -> . expression LESS expression
    (38) aritmetica -> . expression MODUL expression
    (39) aritmetica -> . LESS expression
    (40) relacional -> . expression DEQUAL expression
    (41) relacional -> . expression DIFERENT expression
    (42) relacional -> . expression MINOR expression
    (43) relacional -> . expression MINOREQUAL expression
    (44) relacional -> . expression GREATER expression
    (45) relacional -> . expression GREATEREQUAL expression
    (46) logica -> . boolean AND boolean
    (47) logica -> . boolean OR boolean
    (48) logica -> . NOT boolean
    (33) id_ -> . ID
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    LESS            shift and go to state 42
    NOT             shift and go to state 43
    ID              shift and go to state 31
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    expression                     shift and go to state 50
    primitivo                      shift and go to state 33
    aritmetica                     shift and go to state 34
    relacional                     shift and go to state 35
    logica                         shift and go to state 36
    id_                            shift and go to state 37
    boolean                        shift and go to state 41

state 26

    (25) while_ -> RWHILE PARA . expression PARC LLAVEA instrucciones LLAVEC
    (28) expression -> . primitivo
    (29) expression -> . aritmetica
    (30) expression -> . relacional
    (31) expression -> . logica
    (32) expression -> . id_
    (49) primitivo -> . NUMBER
    (50) primitivo -> . FLOAT
    (51) primitivo -> . STRING
    (52) primitivo -> . boolean
    (34) aritmetica -> . expression PLUS expression
    (35) aritmetica -> . expression BY expression
    (36) aritmetica -> . expression DIVIDED expression
    (37) aritmetica -> . expression LESS expression
    (38) aritmetica -> . expression MODUL expression
    (39) aritmetica -> . LESS expression
    (40) relacional -> . expression DEQUAL expression
    (41) relacional -> . expression DIFERENT expression
    (42) relacional -> . expression MINOR expression
    (43) relacional -> . expression MINOREQUAL expression
    (44) relacional -> . expression GREATER expression
    (45) relacional -> . expression GREATEREQUAL expression
    (46) logica -> . boolean AND boolean
    (47) logica -> . boolean OR boolean
    (48) logica -> . NOT boolean
    (33) id_ -> . ID
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    LESS            shift and go to state 42
    NOT             shift and go to state 43
    ID              shift and go to state 31
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    expression                     shift and go to state 51
    primitivo                      shift and go to state 33
    aritmetica                     shift and go to state 34
    relacional                     shift and go to state 35
    logica                         shift and go to state 36
    id_                            shift and go to state 37
    boolean                        shift and go to state 41

state 27

    (26) for_ -> RFOR PARA . declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (27) for_ -> RFOR PARA . declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (12) declare -> . RVAR ID DOUBLEDOT type EQUAL expression
    (13) declare -> . RVAR ID EQUAL expression
    (14) declare -> . RVAR ID DOUBLEDOT type

    RVAR            shift and go to state 12

    declare                        shift and go to state 52

state 28

    (11) print -> CONSOLE DOT LOG . PARA expression PARC

    PARA            shift and go to state 53


state 29

    (12) declare -> RVAR ID DOUBLEDOT . type EQUAL expression
    (14) declare -> RVAR ID DOUBLEDOT . type
    (55) type -> . RNUMBER
    (56) type -> . RFLOAT
    (57) type -> . RSTRING
    (58) type -> . RBOOLEAN

    RNUMBER         shift and go to state 55
    RFLOAT          shift and go to state 56
    RSTRING         shift and go to state 57
    RBOOLEAN        shift and go to state 58

    type                           shift and go to state 54

state 30

    (13) declare -> RVAR ID EQUAL . expression
    (28) expression -> . primitivo
    (29) expression -> . aritmetica
    (30) expression -> . relacional
    (31) expression -> . logica
    (32) expression -> . id_
    (49) primitivo -> . NUMBER
    (50) primitivo -> . FLOAT
    (51) primitivo -> . STRING
    (52) primitivo -> . boolean
    (34) aritmetica -> . expression PLUS expression
    (35) aritmetica -> . expression BY expression
    (36) aritmetica -> . expression DIVIDED expression
    (37) aritmetica -> . expression LESS expression
    (38) aritmetica -> . expression MODUL expression
    (39) aritmetica -> . LESS expression
    (40) relacional -> . expression DEQUAL expression
    (41) relacional -> . expression DIFERENT expression
    (42) relacional -> . expression MINOR expression
    (43) relacional -> . expression MINOREQUAL expression
    (44) relacional -> . expression GREATER expression
    (45) relacional -> . expression GREATEREQUAL expression
    (46) logica -> . boolean AND boolean
    (47) logica -> . boolean OR boolean
    (48) logica -> . NOT boolean
    (33) id_ -> . ID
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    LESS            shift and go to state 42
    NOT             shift and go to state 43
    ID              shift and go to state 31
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    expression                     shift and go to state 59
    primitivo                      shift and go to state 33
    aritmetica                     shift and go to state 34
    relacional                     shift and go to state 35
    logica                         shift and go to state 36
    id_                            shift and go to state 37
    boolean                        shift and go to state 41

state 31

    (33) id_ -> ID .

    PLUS            reduce using rule 33 (id_ -> ID .)
    BY              reduce using rule 33 (id_ -> ID .)
    DIVIDED         reduce using rule 33 (id_ -> ID .)
    LESS            reduce using rule 33 (id_ -> ID .)
    MODUL           reduce using rule 33 (id_ -> ID .)
    DEQUAL          reduce using rule 33 (id_ -> ID .)
    DIFERENT        reduce using rule 33 (id_ -> ID .)
    MINOR           reduce using rule 33 (id_ -> ID .)
    MINOREQUAL      reduce using rule 33 (id_ -> ID .)
    GREATER         reduce using rule 33 (id_ -> ID .)
    GREATEREQUAL    reduce using rule 33 (id_ -> ID .)
    CONSOLE         reduce using rule 33 (id_ -> ID .)
    RVAR            reduce using rule 33 (id_ -> ID .)
    RCONST          reduce using rule 33 (id_ -> ID .)
    ID              reduce using rule 33 (id_ -> ID .)
    RIF             reduce using rule 33 (id_ -> ID .)
    RWHILE          reduce using rule 33 (id_ -> ID .)
    RFOR            reduce using rule 33 (id_ -> ID .)
    $end            reduce using rule 33 (id_ -> ID .)
    LLAVEC          reduce using rule 33 (id_ -> ID .)
    PARC            reduce using rule 33 (id_ -> ID .)
    SEMICOLON       reduce using rule 33 (id_ -> ID .)


state 32

    (18) assignVar -> ID EQUAL expression .
    (34) aritmetica -> expression . PLUS expression
    (35) aritmetica -> expression . BY expression
    (36) aritmetica -> expression . DIVIDED expression
    (37) aritmetica -> expression . LESS expression
    (38) aritmetica -> expression . MODUL expression
    (40) relacional -> expression . DEQUAL expression
    (41) relacional -> expression . DIFERENT expression
    (42) relacional -> expression . MINOR expression
    (43) relacional -> expression . MINOREQUAL expression
    (44) relacional -> expression . GREATER expression
    (45) relacional -> expression . GREATEREQUAL expression

    CONSOLE         reduce using rule 18 (assignVar -> ID EQUAL expression .)
    RVAR            reduce using rule 18 (assignVar -> ID EQUAL expression .)
    RCONST          reduce using rule 18 (assignVar -> ID EQUAL expression .)
    ID              reduce using rule 18 (assignVar -> ID EQUAL expression .)
    RIF             reduce using rule 18 (assignVar -> ID EQUAL expression .)
    RWHILE          reduce using rule 18 (assignVar -> ID EQUAL expression .)
    RFOR            reduce using rule 18 (assignVar -> ID EQUAL expression .)
    $end            reduce using rule 18 (assignVar -> ID EQUAL expression .)
    LLAVEC          reduce using rule 18 (assignVar -> ID EQUAL expression .)
    PLUS            shift and go to state 60
    BY              shift and go to state 61
    DIVIDED         shift and go to state 62
    LESS            shift and go to state 63
    MODUL           shift and go to state 64
    DEQUAL          shift and go to state 65
    DIFERENT        shift and go to state 66
    MINOR           shift and go to state 67
    MINOREQUAL      shift and go to state 68
    GREATER         shift and go to state 69
    GREATEREQUAL    shift and go to state 70


state 33

    (28) expression -> primitivo .

    PLUS            reduce using rule 28 (expression -> primitivo .)
    BY              reduce using rule 28 (expression -> primitivo .)
    DIVIDED         reduce using rule 28 (expression -> primitivo .)
    LESS            reduce using rule 28 (expression -> primitivo .)
    MODUL           reduce using rule 28 (expression -> primitivo .)
    DEQUAL          reduce using rule 28 (expression -> primitivo .)
    DIFERENT        reduce using rule 28 (expression -> primitivo .)
    MINOR           reduce using rule 28 (expression -> primitivo .)
    MINOREQUAL      reduce using rule 28 (expression -> primitivo .)
    GREATER         reduce using rule 28 (expression -> primitivo .)
    GREATEREQUAL    reduce using rule 28 (expression -> primitivo .)
    CONSOLE         reduce using rule 28 (expression -> primitivo .)
    RVAR            reduce using rule 28 (expression -> primitivo .)
    RCONST          reduce using rule 28 (expression -> primitivo .)
    ID              reduce using rule 28 (expression -> primitivo .)
    RIF             reduce using rule 28 (expression -> primitivo .)
    RWHILE          reduce using rule 28 (expression -> primitivo .)
    RFOR            reduce using rule 28 (expression -> primitivo .)
    $end            reduce using rule 28 (expression -> primitivo .)
    LLAVEC          reduce using rule 28 (expression -> primitivo .)
    PARC            reduce using rule 28 (expression -> primitivo .)
    SEMICOLON       reduce using rule 28 (expression -> primitivo .)


state 34

    (29) expression -> aritmetica .

    PLUS            reduce using rule 29 (expression -> aritmetica .)
    BY              reduce using rule 29 (expression -> aritmetica .)
    DIVIDED         reduce using rule 29 (expression -> aritmetica .)
    LESS            reduce using rule 29 (expression -> aritmetica .)
    MODUL           reduce using rule 29 (expression -> aritmetica .)
    DEQUAL          reduce using rule 29 (expression -> aritmetica .)
    DIFERENT        reduce using rule 29 (expression -> aritmetica .)
    MINOR           reduce using rule 29 (expression -> aritmetica .)
    MINOREQUAL      reduce using rule 29 (expression -> aritmetica .)
    GREATER         reduce using rule 29 (expression -> aritmetica .)
    GREATEREQUAL    reduce using rule 29 (expression -> aritmetica .)
    CONSOLE         reduce using rule 29 (expression -> aritmetica .)
    RVAR            reduce using rule 29 (expression -> aritmetica .)
    RCONST          reduce using rule 29 (expression -> aritmetica .)
    ID              reduce using rule 29 (expression -> aritmetica .)
    RIF             reduce using rule 29 (expression -> aritmetica .)
    RWHILE          reduce using rule 29 (expression -> aritmetica .)
    RFOR            reduce using rule 29 (expression -> aritmetica .)
    $end            reduce using rule 29 (expression -> aritmetica .)
    LLAVEC          reduce using rule 29 (expression -> aritmetica .)
    PARC            reduce using rule 29 (expression -> aritmetica .)
    SEMICOLON       reduce using rule 29 (expression -> aritmetica .)


state 35

    (30) expression -> relacional .

    PLUS            reduce using rule 30 (expression -> relacional .)
    BY              reduce using rule 30 (expression -> relacional .)
    DIVIDED         reduce using rule 30 (expression -> relacional .)
    LESS            reduce using rule 30 (expression -> relacional .)
    MODUL           reduce using rule 30 (expression -> relacional .)
    DEQUAL          reduce using rule 30 (expression -> relacional .)
    DIFERENT        reduce using rule 30 (expression -> relacional .)
    MINOR           reduce using rule 30 (expression -> relacional .)
    MINOREQUAL      reduce using rule 30 (expression -> relacional .)
    GREATER         reduce using rule 30 (expression -> relacional .)
    GREATEREQUAL    reduce using rule 30 (expression -> relacional .)
    CONSOLE         reduce using rule 30 (expression -> relacional .)
    RVAR            reduce using rule 30 (expression -> relacional .)
    RCONST          reduce using rule 30 (expression -> relacional .)
    ID              reduce using rule 30 (expression -> relacional .)
    RIF             reduce using rule 30 (expression -> relacional .)
    RWHILE          reduce using rule 30 (expression -> relacional .)
    RFOR            reduce using rule 30 (expression -> relacional .)
    $end            reduce using rule 30 (expression -> relacional .)
    LLAVEC          reduce using rule 30 (expression -> relacional .)
    PARC            reduce using rule 30 (expression -> relacional .)
    SEMICOLON       reduce using rule 30 (expression -> relacional .)


state 36

    (31) expression -> logica .

    PLUS            reduce using rule 31 (expression -> logica .)
    BY              reduce using rule 31 (expression -> logica .)
    DIVIDED         reduce using rule 31 (expression -> logica .)
    LESS            reduce using rule 31 (expression -> logica .)
    MODUL           reduce using rule 31 (expression -> logica .)
    DEQUAL          reduce using rule 31 (expression -> logica .)
    DIFERENT        reduce using rule 31 (expression -> logica .)
    MINOR           reduce using rule 31 (expression -> logica .)
    MINOREQUAL      reduce using rule 31 (expression -> logica .)
    GREATER         reduce using rule 31 (expression -> logica .)
    GREATEREQUAL    reduce using rule 31 (expression -> logica .)
    CONSOLE         reduce using rule 31 (expression -> logica .)
    RVAR            reduce using rule 31 (expression -> logica .)
    RCONST          reduce using rule 31 (expression -> logica .)
    ID              reduce using rule 31 (expression -> logica .)
    RIF             reduce using rule 31 (expression -> logica .)
    RWHILE          reduce using rule 31 (expression -> logica .)
    RFOR            reduce using rule 31 (expression -> logica .)
    $end            reduce using rule 31 (expression -> logica .)
    LLAVEC          reduce using rule 31 (expression -> logica .)
    PARC            reduce using rule 31 (expression -> logica .)
    SEMICOLON       reduce using rule 31 (expression -> logica .)


state 37

    (32) expression -> id_ .

    PLUS            reduce using rule 32 (expression -> id_ .)
    BY              reduce using rule 32 (expression -> id_ .)
    DIVIDED         reduce using rule 32 (expression -> id_ .)
    LESS            reduce using rule 32 (expression -> id_ .)
    MODUL           reduce using rule 32 (expression -> id_ .)
    DEQUAL          reduce using rule 32 (expression -> id_ .)
    DIFERENT        reduce using rule 32 (expression -> id_ .)
    MINOR           reduce using rule 32 (expression -> id_ .)
    MINOREQUAL      reduce using rule 32 (expression -> id_ .)
    GREATER         reduce using rule 32 (expression -> id_ .)
    GREATEREQUAL    reduce using rule 32 (expression -> id_ .)
    CONSOLE         reduce using rule 32 (expression -> id_ .)
    RVAR            reduce using rule 32 (expression -> id_ .)
    RCONST          reduce using rule 32 (expression -> id_ .)
    ID              reduce using rule 32 (expression -> id_ .)
    RIF             reduce using rule 32 (expression -> id_ .)
    RWHILE          reduce using rule 32 (expression -> id_ .)
    RFOR            reduce using rule 32 (expression -> id_ .)
    $end            reduce using rule 32 (expression -> id_ .)
    LLAVEC          reduce using rule 32 (expression -> id_ .)
    PARC            reduce using rule 32 (expression -> id_ .)
    SEMICOLON       reduce using rule 32 (expression -> id_ .)


state 38

    (49) primitivo -> NUMBER .

    PLUS            reduce using rule 49 (primitivo -> NUMBER .)
    BY              reduce using rule 49 (primitivo -> NUMBER .)
    DIVIDED         reduce using rule 49 (primitivo -> NUMBER .)
    LESS            reduce using rule 49 (primitivo -> NUMBER .)
    MODUL           reduce using rule 49 (primitivo -> NUMBER .)
    DEQUAL          reduce using rule 49 (primitivo -> NUMBER .)
    DIFERENT        reduce using rule 49 (primitivo -> NUMBER .)
    MINOR           reduce using rule 49 (primitivo -> NUMBER .)
    MINOREQUAL      reduce using rule 49 (primitivo -> NUMBER .)
    GREATER         reduce using rule 49 (primitivo -> NUMBER .)
    GREATEREQUAL    reduce using rule 49 (primitivo -> NUMBER .)
    CONSOLE         reduce using rule 49 (primitivo -> NUMBER .)
    RVAR            reduce using rule 49 (primitivo -> NUMBER .)
    RCONST          reduce using rule 49 (primitivo -> NUMBER .)
    ID              reduce using rule 49 (primitivo -> NUMBER .)
    RIF             reduce using rule 49 (primitivo -> NUMBER .)
    RWHILE          reduce using rule 49 (primitivo -> NUMBER .)
    RFOR            reduce using rule 49 (primitivo -> NUMBER .)
    $end            reduce using rule 49 (primitivo -> NUMBER .)
    LLAVEC          reduce using rule 49 (primitivo -> NUMBER .)
    PARC            reduce using rule 49 (primitivo -> NUMBER .)
    SEMICOLON       reduce using rule 49 (primitivo -> NUMBER .)


state 39

    (50) primitivo -> FLOAT .

    PLUS            reduce using rule 50 (primitivo -> FLOAT .)
    BY              reduce using rule 50 (primitivo -> FLOAT .)
    DIVIDED         reduce using rule 50 (primitivo -> FLOAT .)
    LESS            reduce using rule 50 (primitivo -> FLOAT .)
    MODUL           reduce using rule 50 (primitivo -> FLOAT .)
    DEQUAL          reduce using rule 50 (primitivo -> FLOAT .)
    DIFERENT        reduce using rule 50 (primitivo -> FLOAT .)
    MINOR           reduce using rule 50 (primitivo -> FLOAT .)
    MINOREQUAL      reduce using rule 50 (primitivo -> FLOAT .)
    GREATER         reduce using rule 50 (primitivo -> FLOAT .)
    GREATEREQUAL    reduce using rule 50 (primitivo -> FLOAT .)
    CONSOLE         reduce using rule 50 (primitivo -> FLOAT .)
    RVAR            reduce using rule 50 (primitivo -> FLOAT .)
    RCONST          reduce using rule 50 (primitivo -> FLOAT .)
    ID              reduce using rule 50 (primitivo -> FLOAT .)
    RIF             reduce using rule 50 (primitivo -> FLOAT .)
    RWHILE          reduce using rule 50 (primitivo -> FLOAT .)
    RFOR            reduce using rule 50 (primitivo -> FLOAT .)
    $end            reduce using rule 50 (primitivo -> FLOAT .)
    LLAVEC          reduce using rule 50 (primitivo -> FLOAT .)
    PARC            reduce using rule 50 (primitivo -> FLOAT .)
    SEMICOLON       reduce using rule 50 (primitivo -> FLOAT .)


state 40

    (51) primitivo -> STRING .

    PLUS            reduce using rule 51 (primitivo -> STRING .)
    BY              reduce using rule 51 (primitivo -> STRING .)
    DIVIDED         reduce using rule 51 (primitivo -> STRING .)
    LESS            reduce using rule 51 (primitivo -> STRING .)
    MODUL           reduce using rule 51 (primitivo -> STRING .)
    DEQUAL          reduce using rule 51 (primitivo -> STRING .)
    DIFERENT        reduce using rule 51 (primitivo -> STRING .)
    MINOR           reduce using rule 51 (primitivo -> STRING .)
    MINOREQUAL      reduce using rule 51 (primitivo -> STRING .)
    GREATER         reduce using rule 51 (primitivo -> STRING .)
    GREATEREQUAL    reduce using rule 51 (primitivo -> STRING .)
    CONSOLE         reduce using rule 51 (primitivo -> STRING .)
    RVAR            reduce using rule 51 (primitivo -> STRING .)
    RCONST          reduce using rule 51 (primitivo -> STRING .)
    ID              reduce using rule 51 (primitivo -> STRING .)
    RIF             reduce using rule 51 (primitivo -> STRING .)
    RWHILE          reduce using rule 51 (primitivo -> STRING .)
    RFOR            reduce using rule 51 (primitivo -> STRING .)
    $end            reduce using rule 51 (primitivo -> STRING .)
    LLAVEC          reduce using rule 51 (primitivo -> STRING .)
    PARC            reduce using rule 51 (primitivo -> STRING .)
    SEMICOLON       reduce using rule 51 (primitivo -> STRING .)


state 41

    (52) primitivo -> boolean .
    (46) logica -> boolean . AND boolean
    (47) logica -> boolean . OR boolean

    PLUS            reduce using rule 52 (primitivo -> boolean .)
    BY              reduce using rule 52 (primitivo -> boolean .)
    DIVIDED         reduce using rule 52 (primitivo -> boolean .)
    LESS            reduce using rule 52 (primitivo -> boolean .)
    MODUL           reduce using rule 52 (primitivo -> boolean .)
    DEQUAL          reduce using rule 52 (primitivo -> boolean .)
    DIFERENT        reduce using rule 52 (primitivo -> boolean .)
    MINOR           reduce using rule 52 (primitivo -> boolean .)
    MINOREQUAL      reduce using rule 52 (primitivo -> boolean .)
    GREATER         reduce using rule 52 (primitivo -> boolean .)
    GREATEREQUAL    reduce using rule 52 (primitivo -> boolean .)
    CONSOLE         reduce using rule 52 (primitivo -> boolean .)
    RVAR            reduce using rule 52 (primitivo -> boolean .)
    RCONST          reduce using rule 52 (primitivo -> boolean .)
    ID              reduce using rule 52 (primitivo -> boolean .)
    RIF             reduce using rule 52 (primitivo -> boolean .)
    RWHILE          reduce using rule 52 (primitivo -> boolean .)
    RFOR            reduce using rule 52 (primitivo -> boolean .)
    $end            reduce using rule 52 (primitivo -> boolean .)
    LLAVEC          reduce using rule 52 (primitivo -> boolean .)
    PARC            reduce using rule 52 (primitivo -> boolean .)
    SEMICOLON       reduce using rule 52 (primitivo -> boolean .)
    AND             shift and go to state 71
    OR              shift and go to state 72


state 42

    (39) aritmetica -> LESS . expression
    (28) expression -> . primitivo
    (29) expression -> . aritmetica
    (30) expression -> . relacional
    (31) expression -> . logica
    (32) expression -> . id_
    (49) primitivo -> . NUMBER
    (50) primitivo -> . FLOAT
    (51) primitivo -> . STRING
    (52) primitivo -> . boolean
    (34) aritmetica -> . expression PLUS expression
    (35) aritmetica -> . expression BY expression
    (36) aritmetica -> . expression DIVIDED expression
    (37) aritmetica -> . expression LESS expression
    (38) aritmetica -> . expression MODUL expression
    (39) aritmetica -> . LESS expression
    (40) relacional -> . expression DEQUAL expression
    (41) relacional -> . expression DIFERENT expression
    (42) relacional -> . expression MINOR expression
    (43) relacional -> . expression MINOREQUAL expression
    (44) relacional -> . expression GREATER expression
    (45) relacional -> . expression GREATEREQUAL expression
    (46) logica -> . boolean AND boolean
    (47) logica -> . boolean OR boolean
    (48) logica -> . NOT boolean
    (33) id_ -> . ID
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    LESS            shift and go to state 42
    NOT             shift and go to state 43
    ID              shift and go to state 31
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    expression                     shift and go to state 73
    primitivo                      shift and go to state 33
    aritmetica                     shift and go to state 34
    relacional                     shift and go to state 35
    logica                         shift and go to state 36
    id_                            shift and go to state 37
    boolean                        shift and go to state 41

state 43

    (48) logica -> NOT . boolean
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    boolean                        shift and go to state 74

state 44

    (53) boolean -> TRUE .

    AND             reduce using rule 53 (boolean -> TRUE .)
    OR              reduce using rule 53 (boolean -> TRUE .)
    PLUS            reduce using rule 53 (boolean -> TRUE .)
    BY              reduce using rule 53 (boolean -> TRUE .)
    DIVIDED         reduce using rule 53 (boolean -> TRUE .)
    LESS            reduce using rule 53 (boolean -> TRUE .)
    MODUL           reduce using rule 53 (boolean -> TRUE .)
    DEQUAL          reduce using rule 53 (boolean -> TRUE .)
    DIFERENT        reduce using rule 53 (boolean -> TRUE .)
    MINOR           reduce using rule 53 (boolean -> TRUE .)
    MINOREQUAL      reduce using rule 53 (boolean -> TRUE .)
    GREATER         reduce using rule 53 (boolean -> TRUE .)
    GREATEREQUAL    reduce using rule 53 (boolean -> TRUE .)
    CONSOLE         reduce using rule 53 (boolean -> TRUE .)
    RVAR            reduce using rule 53 (boolean -> TRUE .)
    RCONST          reduce using rule 53 (boolean -> TRUE .)
    ID              reduce using rule 53 (boolean -> TRUE .)
    RIF             reduce using rule 53 (boolean -> TRUE .)
    RWHILE          reduce using rule 53 (boolean -> TRUE .)
    RFOR            reduce using rule 53 (boolean -> TRUE .)
    $end            reduce using rule 53 (boolean -> TRUE .)
    LLAVEC          reduce using rule 53 (boolean -> TRUE .)
    PARC            reduce using rule 53 (boolean -> TRUE .)
    SEMICOLON       reduce using rule 53 (boolean -> TRUE .)


state 45

    (54) boolean -> FALSE .

    AND             reduce using rule 54 (boolean -> FALSE .)
    OR              reduce using rule 54 (boolean -> FALSE .)
    PLUS            reduce using rule 54 (boolean -> FALSE .)
    BY              reduce using rule 54 (boolean -> FALSE .)
    DIVIDED         reduce using rule 54 (boolean -> FALSE .)
    LESS            reduce using rule 54 (boolean -> FALSE .)
    MODUL           reduce using rule 54 (boolean -> FALSE .)
    DEQUAL          reduce using rule 54 (boolean -> FALSE .)
    DIFERENT        reduce using rule 54 (boolean -> FALSE .)
    MINOR           reduce using rule 54 (boolean -> FALSE .)
    MINOREQUAL      reduce using rule 54 (boolean -> FALSE .)
    GREATER         reduce using rule 54 (boolean -> FALSE .)
    GREATEREQUAL    reduce using rule 54 (boolean -> FALSE .)
    CONSOLE         reduce using rule 54 (boolean -> FALSE .)
    RVAR            reduce using rule 54 (boolean -> FALSE .)
    RCONST          reduce using rule 54 (boolean -> FALSE .)
    ID              reduce using rule 54 (boolean -> FALSE .)
    RIF             reduce using rule 54 (boolean -> FALSE .)
    RWHILE          reduce using rule 54 (boolean -> FALSE .)
    RFOR            reduce using rule 54 (boolean -> FALSE .)
    $end            reduce using rule 54 (boolean -> FALSE .)
    LLAVEC          reduce using rule 54 (boolean -> FALSE .)
    PARC            reduce using rule 54 (boolean -> FALSE .)
    SEMICOLON       reduce using rule 54 (boolean -> FALSE .)


state 46

    (19) assignVar -> ID PLUS EQUAL . expression
    (28) expression -> . primitivo
    (29) expression -> . aritmetica
    (30) expression -> . relacional
    (31) expression -> . logica
    (32) expression -> . id_
    (49) primitivo -> . NUMBER
    (50) primitivo -> . FLOAT
    (51) primitivo -> . STRING
    (52) primitivo -> . boolean
    (34) aritmetica -> . expression PLUS expression
    (35) aritmetica -> . expression BY expression
    (36) aritmetica -> . expression DIVIDED expression
    (37) aritmetica -> . expression LESS expression
    (38) aritmetica -> . expression MODUL expression
    (39) aritmetica -> . LESS expression
    (40) relacional -> . expression DEQUAL expression
    (41) relacional -> . expression DIFERENT expression
    (42) relacional -> . expression MINOR expression
    (43) relacional -> . expression MINOREQUAL expression
    (44) relacional -> . expression GREATER expression
    (45) relacional -> . expression GREATEREQUAL expression
    (46) logica -> . boolean AND boolean
    (47) logica -> . boolean OR boolean
    (48) logica -> . NOT boolean
    (33) id_ -> . ID
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    LESS            shift and go to state 42
    NOT             shift and go to state 43
    ID              shift and go to state 31
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    expression                     shift and go to state 75
    primitivo                      shift and go to state 33
    aritmetica                     shift and go to state 34
    relacional                     shift and go to state 35
    logica                         shift and go to state 36
    id_                            shift and go to state 37
    boolean                        shift and go to state 41

state 47

    (20) assignVar -> ID LESS EQUAL . expression
    (28) expression -> . primitivo
    (29) expression -> . aritmetica
    (30) expression -> . relacional
    (31) expression -> . logica
    (32) expression -> . id_
    (49) primitivo -> . NUMBER
    (50) primitivo -> . FLOAT
    (51) primitivo -> . STRING
    (52) primitivo -> . boolean
    (34) aritmetica -> . expression PLUS expression
    (35) aritmetica -> . expression BY expression
    (36) aritmetica -> . expression DIVIDED expression
    (37) aritmetica -> . expression LESS expression
    (38) aritmetica -> . expression MODUL expression
    (39) aritmetica -> . LESS expression
    (40) relacional -> . expression DEQUAL expression
    (41) relacional -> . expression DIFERENT expression
    (42) relacional -> . expression MINOR expression
    (43) relacional -> . expression MINOREQUAL expression
    (44) relacional -> . expression GREATER expression
    (45) relacional -> . expression GREATEREQUAL expression
    (46) logica -> . boolean AND boolean
    (47) logica -> . boolean OR boolean
    (48) logica -> . NOT boolean
    (33) id_ -> . ID
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    LESS            shift and go to state 42
    NOT             shift and go to state 43
    ID              shift and go to state 31
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    expression                     shift and go to state 76
    primitivo                      shift and go to state 33
    aritmetica                     shift and go to state 34
    relacional                     shift and go to state 35
    logica                         shift and go to state 36
    id_                            shift and go to state 37
    boolean                        shift and go to state 41

state 48

    (15) declareConst -> RCONST ID DOUBLEDOT . type EQUAL expression
    (17) declareConst -> RCONST ID DOUBLEDOT . type
    (55) type -> . RNUMBER
    (56) type -> . RFLOAT
    (57) type -> . RSTRING
    (58) type -> . RBOOLEAN

    RNUMBER         shift and go to state 55
    RFLOAT          shift and go to state 56
    RSTRING         shift and go to state 57
    RBOOLEAN        shift and go to state 58

    type                           shift and go to state 77

state 49

    (16) declareConst -> RCONST ID EQUAL . expression
    (28) expression -> . primitivo
    (29) expression -> . aritmetica
    (30) expression -> . relacional
    (31) expression -> . logica
    (32) expression -> . id_
    (49) primitivo -> . NUMBER
    (50) primitivo -> . FLOAT
    (51) primitivo -> . STRING
    (52) primitivo -> . boolean
    (34) aritmetica -> . expression PLUS expression
    (35) aritmetica -> . expression BY expression
    (36) aritmetica -> . expression DIVIDED expression
    (37) aritmetica -> . expression LESS expression
    (38) aritmetica -> . expression MODUL expression
    (39) aritmetica -> . LESS expression
    (40) relacional -> . expression DEQUAL expression
    (41) relacional -> . expression DIFERENT expression
    (42) relacional -> . expression MINOR expression
    (43) relacional -> . expression MINOREQUAL expression
    (44) relacional -> . expression GREATER expression
    (45) relacional -> . expression GREATEREQUAL expression
    (46) logica -> . boolean AND boolean
    (47) logica -> . boolean OR boolean
    (48) logica -> . NOT boolean
    (33) id_ -> . ID
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    LESS            shift and go to state 42
    NOT             shift and go to state 43
    ID              shift and go to state 31
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    expression                     shift and go to state 78
    primitivo                      shift and go to state 33
    aritmetica                     shift and go to state 34
    relacional                     shift and go to state 35
    logica                         shift and go to state 36
    id_                            shift and go to state 37
    boolean                        shift and go to state 41

state 50

    (21) if_else -> RIF PARA expression . PARC LLAVEA instrucciones LLAVEC else
    (34) aritmetica -> expression . PLUS expression
    (35) aritmetica -> expression . BY expression
    (36) aritmetica -> expression . DIVIDED expression
    (37) aritmetica -> expression . LESS expression
    (38) aritmetica -> expression . MODUL expression
    (40) relacional -> expression . DEQUAL expression
    (41) relacional -> expression . DIFERENT expression
    (42) relacional -> expression . MINOR expression
    (43) relacional -> expression . MINOREQUAL expression
    (44) relacional -> expression . GREATER expression
    (45) relacional -> expression . GREATEREQUAL expression

    PARC            shift and go to state 79
    PLUS            shift and go to state 60
    BY              shift and go to state 61
    DIVIDED         shift and go to state 62
    LESS            shift and go to state 63
    MODUL           shift and go to state 64
    DEQUAL          shift and go to state 65
    DIFERENT        shift and go to state 66
    MINOR           shift and go to state 67
    MINOREQUAL      shift and go to state 68
    GREATER         shift and go to state 69
    GREATEREQUAL    shift and go to state 70


state 51

    (25) while_ -> RWHILE PARA expression . PARC LLAVEA instrucciones LLAVEC
    (34) aritmetica -> expression . PLUS expression
    (35) aritmetica -> expression . BY expression
    (36) aritmetica -> expression . DIVIDED expression
    (37) aritmetica -> expression . LESS expression
    (38) aritmetica -> expression . MODUL expression
    (40) relacional -> expression . DEQUAL expression
    (41) relacional -> expression . DIFERENT expression
    (42) relacional -> expression . MINOR expression
    (43) relacional -> expression . MINOREQUAL expression
    (44) relacional -> expression . GREATER expression
    (45) relacional -> expression . GREATEREQUAL expression

    PARC            shift and go to state 80
    PLUS            shift and go to state 60
    BY              shift and go to state 61
    DIVIDED         shift and go to state 62
    LESS            shift and go to state 63
    MODUL           shift and go to state 64
    DEQUAL          shift and go to state 65
    DIFERENT        shift and go to state 66
    MINOR           shift and go to state 67
    MINOREQUAL      shift and go to state 68
    GREATER         shift and go to state 69
    GREATEREQUAL    shift and go to state 70


state 52

    (26) for_ -> RFOR PARA declare . SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (27) for_ -> RFOR PARA declare . SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC

    SEMICOLON       shift and go to state 81


state 53

    (11) print -> CONSOLE DOT LOG PARA . expression PARC
    (28) expression -> . primitivo
    (29) expression -> . aritmetica
    (30) expression -> . relacional
    (31) expression -> . logica
    (32) expression -> . id_
    (49) primitivo -> . NUMBER
    (50) primitivo -> . FLOAT
    (51) primitivo -> . STRING
    (52) primitivo -> . boolean
    (34) aritmetica -> . expression PLUS expression
    (35) aritmetica -> . expression BY expression
    (36) aritmetica -> . expression DIVIDED expression
    (37) aritmetica -> . expression LESS expression
    (38) aritmetica -> . expression MODUL expression
    (39) aritmetica -> . LESS expression
    (40) relacional -> . expression DEQUAL expression
    (41) relacional -> . expression DIFERENT expression
    (42) relacional -> . expression MINOR expression
    (43) relacional -> . expression MINOREQUAL expression
    (44) relacional -> . expression GREATER expression
    (45) relacional -> . expression GREATEREQUAL expression
    (46) logica -> . boolean AND boolean
    (47) logica -> . boolean OR boolean
    (48) logica -> . NOT boolean
    (33) id_ -> . ID
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    LESS            shift and go to state 42
    NOT             shift and go to state 43
    ID              shift and go to state 31
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    expression                     shift and go to state 82
    primitivo                      shift and go to state 33
    aritmetica                     shift and go to state 34
    relacional                     shift and go to state 35
    logica                         shift and go to state 36
    id_                            shift and go to state 37
    boolean                        shift and go to state 41

state 54

    (12) declare -> RVAR ID DOUBLEDOT type . EQUAL expression
    (14) declare -> RVAR ID DOUBLEDOT type .

    EQUAL           shift and go to state 83
    CONSOLE         reduce using rule 14 (declare -> RVAR ID DOUBLEDOT type .)
    RVAR            reduce using rule 14 (declare -> RVAR ID DOUBLEDOT type .)
    RCONST          reduce using rule 14 (declare -> RVAR ID DOUBLEDOT type .)
    ID              reduce using rule 14 (declare -> RVAR ID DOUBLEDOT type .)
    RIF             reduce using rule 14 (declare -> RVAR ID DOUBLEDOT type .)
    RWHILE          reduce using rule 14 (declare -> RVAR ID DOUBLEDOT type .)
    RFOR            reduce using rule 14 (declare -> RVAR ID DOUBLEDOT type .)
    $end            reduce using rule 14 (declare -> RVAR ID DOUBLEDOT type .)
    SEMICOLON       reduce using rule 14 (declare -> RVAR ID DOUBLEDOT type .)
    LLAVEC          reduce using rule 14 (declare -> RVAR ID DOUBLEDOT type .)


state 55

    (55) type -> RNUMBER .

    EQUAL           reduce using rule 55 (type -> RNUMBER .)
    CONSOLE         reduce using rule 55 (type -> RNUMBER .)
    RVAR            reduce using rule 55 (type -> RNUMBER .)
    RCONST          reduce using rule 55 (type -> RNUMBER .)
    ID              reduce using rule 55 (type -> RNUMBER .)
    RIF             reduce using rule 55 (type -> RNUMBER .)
    RWHILE          reduce using rule 55 (type -> RNUMBER .)
    RFOR            reduce using rule 55 (type -> RNUMBER .)
    $end            reduce using rule 55 (type -> RNUMBER .)
    SEMICOLON       reduce using rule 55 (type -> RNUMBER .)
    LLAVEC          reduce using rule 55 (type -> RNUMBER .)


state 56

    (56) type -> RFLOAT .

    EQUAL           reduce using rule 56 (type -> RFLOAT .)
    CONSOLE         reduce using rule 56 (type -> RFLOAT .)
    RVAR            reduce using rule 56 (type -> RFLOAT .)
    RCONST          reduce using rule 56 (type -> RFLOAT .)
    ID              reduce using rule 56 (type -> RFLOAT .)
    RIF             reduce using rule 56 (type -> RFLOAT .)
    RWHILE          reduce using rule 56 (type -> RFLOAT .)
    RFOR            reduce using rule 56 (type -> RFLOAT .)
    $end            reduce using rule 56 (type -> RFLOAT .)
    SEMICOLON       reduce using rule 56 (type -> RFLOAT .)
    LLAVEC          reduce using rule 56 (type -> RFLOAT .)


state 57

    (57) type -> RSTRING .

    EQUAL           reduce using rule 57 (type -> RSTRING .)
    CONSOLE         reduce using rule 57 (type -> RSTRING .)
    RVAR            reduce using rule 57 (type -> RSTRING .)
    RCONST          reduce using rule 57 (type -> RSTRING .)
    ID              reduce using rule 57 (type -> RSTRING .)
    RIF             reduce using rule 57 (type -> RSTRING .)
    RWHILE          reduce using rule 57 (type -> RSTRING .)
    RFOR            reduce using rule 57 (type -> RSTRING .)
    $end            reduce using rule 57 (type -> RSTRING .)
    SEMICOLON       reduce using rule 57 (type -> RSTRING .)
    LLAVEC          reduce using rule 57 (type -> RSTRING .)


state 58

    (58) type -> RBOOLEAN .

    EQUAL           reduce using rule 58 (type -> RBOOLEAN .)
    CONSOLE         reduce using rule 58 (type -> RBOOLEAN .)
    RVAR            reduce using rule 58 (type -> RBOOLEAN .)
    RCONST          reduce using rule 58 (type -> RBOOLEAN .)
    ID              reduce using rule 58 (type -> RBOOLEAN .)
    RIF             reduce using rule 58 (type -> RBOOLEAN .)
    RWHILE          reduce using rule 58 (type -> RBOOLEAN .)
    RFOR            reduce using rule 58 (type -> RBOOLEAN .)
    $end            reduce using rule 58 (type -> RBOOLEAN .)
    SEMICOLON       reduce using rule 58 (type -> RBOOLEAN .)
    LLAVEC          reduce using rule 58 (type -> RBOOLEAN .)


state 59

    (13) declare -> RVAR ID EQUAL expression .
    (34) aritmetica -> expression . PLUS expression
    (35) aritmetica -> expression . BY expression
    (36) aritmetica -> expression . DIVIDED expression
    (37) aritmetica -> expression . LESS expression
    (38) aritmetica -> expression . MODUL expression
    (40) relacional -> expression . DEQUAL expression
    (41) relacional -> expression . DIFERENT expression
    (42) relacional -> expression . MINOR expression
    (43) relacional -> expression . MINOREQUAL expression
    (44) relacional -> expression . GREATER expression
    (45) relacional -> expression . GREATEREQUAL expression

    CONSOLE         reduce using rule 13 (declare -> RVAR ID EQUAL expression .)
    RVAR            reduce using rule 13 (declare -> RVAR ID EQUAL expression .)
    RCONST          reduce using rule 13 (declare -> RVAR ID EQUAL expression .)
    ID              reduce using rule 13 (declare -> RVAR ID EQUAL expression .)
    RIF             reduce using rule 13 (declare -> RVAR ID EQUAL expression .)
    RWHILE          reduce using rule 13 (declare -> RVAR ID EQUAL expression .)
    RFOR            reduce using rule 13 (declare -> RVAR ID EQUAL expression .)
    $end            reduce using rule 13 (declare -> RVAR ID EQUAL expression .)
    SEMICOLON       reduce using rule 13 (declare -> RVAR ID EQUAL expression .)
    LLAVEC          reduce using rule 13 (declare -> RVAR ID EQUAL expression .)
    PLUS            shift and go to state 60
    BY              shift and go to state 61
    DIVIDED         shift and go to state 62
    LESS            shift and go to state 63
    MODUL           shift and go to state 64
    DEQUAL          shift and go to state 65
    DIFERENT        shift and go to state 66
    MINOR           shift and go to state 67
    MINOREQUAL      shift and go to state 68
    GREATER         shift and go to state 69
    GREATEREQUAL    shift and go to state 70


state 60

    (34) aritmetica -> expression PLUS . expression
    (28) expression -> . primitivo
    (29) expression -> . aritmetica
    (30) expression -> . relacional
    (31) expression -> . logica
    (32) expression -> . id_
    (49) primitivo -> . NUMBER
    (50) primitivo -> . FLOAT
    (51) primitivo -> . STRING
    (52) primitivo -> . boolean
    (34) aritmetica -> . expression PLUS expression
    (35) aritmetica -> . expression BY expression
    (36) aritmetica -> . expression DIVIDED expression
    (37) aritmetica -> . expression LESS expression
    (38) aritmetica -> . expression MODUL expression
    (39) aritmetica -> . LESS expression
    (40) relacional -> . expression DEQUAL expression
    (41) relacional -> . expression DIFERENT expression
    (42) relacional -> . expression MINOR expression
    (43) relacional -> . expression MINOREQUAL expression
    (44) relacional -> . expression GREATER expression
    (45) relacional -> . expression GREATEREQUAL expression
    (46) logica -> . boolean AND boolean
    (47) logica -> . boolean OR boolean
    (48) logica -> . NOT boolean
    (33) id_ -> . ID
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    LESS            shift and go to state 42
    NOT             shift and go to state 43
    ID              shift and go to state 31
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    expression                     shift and go to state 84
    primitivo                      shift and go to state 33
    aritmetica                     shift and go to state 34
    relacional                     shift and go to state 35
    logica                         shift and go to state 36
    id_                            shift and go to state 37
    boolean                        shift and go to state 41

state 61

    (35) aritmetica -> expression BY . expression
    (28) expression -> . primitivo
    (29) expression -> . aritmetica
    (30) expression -> . relacional
    (31) expression -> . logica
    (32) expression -> . id_
    (49) primitivo -> . NUMBER
    (50) primitivo -> . FLOAT
    (51) primitivo -> . STRING
    (52) primitivo -> . boolean
    (34) aritmetica -> . expression PLUS expression
    (35) aritmetica -> . expression BY expression
    (36) aritmetica -> . expression DIVIDED expression
    (37) aritmetica -> . expression LESS expression
    (38) aritmetica -> . expression MODUL expression
    (39) aritmetica -> . LESS expression
    (40) relacional -> . expression DEQUAL expression
    (41) relacional -> . expression DIFERENT expression
    (42) relacional -> . expression MINOR expression
    (43) relacional -> . expression MINOREQUAL expression
    (44) relacional -> . expression GREATER expression
    (45) relacional -> . expression GREATEREQUAL expression
    (46) logica -> . boolean AND boolean
    (47) logica -> . boolean OR boolean
    (48) logica -> . NOT boolean
    (33) id_ -> . ID
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    LESS            shift and go to state 42
    NOT             shift and go to state 43
    ID              shift and go to state 31
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    expression                     shift and go to state 85
    primitivo                      shift and go to state 33
    aritmetica                     shift and go to state 34
    relacional                     shift and go to state 35
    logica                         shift and go to state 36
    id_                            shift and go to state 37
    boolean                        shift and go to state 41

state 62

    (36) aritmetica -> expression DIVIDED . expression
    (28) expression -> . primitivo
    (29) expression -> . aritmetica
    (30) expression -> . relacional
    (31) expression -> . logica
    (32) expression -> . id_
    (49) primitivo -> . NUMBER
    (50) primitivo -> . FLOAT
    (51) primitivo -> . STRING
    (52) primitivo -> . boolean
    (34) aritmetica -> . expression PLUS expression
    (35) aritmetica -> . expression BY expression
    (36) aritmetica -> . expression DIVIDED expression
    (37) aritmetica -> . expression LESS expression
    (38) aritmetica -> . expression MODUL expression
    (39) aritmetica -> . LESS expression
    (40) relacional -> . expression DEQUAL expression
    (41) relacional -> . expression DIFERENT expression
    (42) relacional -> . expression MINOR expression
    (43) relacional -> . expression MINOREQUAL expression
    (44) relacional -> . expression GREATER expression
    (45) relacional -> . expression GREATEREQUAL expression
    (46) logica -> . boolean AND boolean
    (47) logica -> . boolean OR boolean
    (48) logica -> . NOT boolean
    (33) id_ -> . ID
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    LESS            shift and go to state 42
    NOT             shift and go to state 43
    ID              shift and go to state 31
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    expression                     shift and go to state 86
    primitivo                      shift and go to state 33
    aritmetica                     shift and go to state 34
    relacional                     shift and go to state 35
    logica                         shift and go to state 36
    id_                            shift and go to state 37
    boolean                        shift and go to state 41

state 63

    (37) aritmetica -> expression LESS . expression
    (28) expression -> . primitivo
    (29) expression -> . aritmetica
    (30) expression -> . relacional
    (31) expression -> . logica
    (32) expression -> . id_
    (49) primitivo -> . NUMBER
    (50) primitivo -> . FLOAT
    (51) primitivo -> . STRING
    (52) primitivo -> . boolean
    (34) aritmetica -> . expression PLUS expression
    (35) aritmetica -> . expression BY expression
    (36) aritmetica -> . expression DIVIDED expression
    (37) aritmetica -> . expression LESS expression
    (38) aritmetica -> . expression MODUL expression
    (39) aritmetica -> . LESS expression
    (40) relacional -> . expression DEQUAL expression
    (41) relacional -> . expression DIFERENT expression
    (42) relacional -> . expression MINOR expression
    (43) relacional -> . expression MINOREQUAL expression
    (44) relacional -> . expression GREATER expression
    (45) relacional -> . expression GREATEREQUAL expression
    (46) logica -> . boolean AND boolean
    (47) logica -> . boolean OR boolean
    (48) logica -> . NOT boolean
    (33) id_ -> . ID
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    LESS            shift and go to state 42
    NOT             shift and go to state 43
    ID              shift and go to state 31
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    expression                     shift and go to state 87
    primitivo                      shift and go to state 33
    aritmetica                     shift and go to state 34
    relacional                     shift and go to state 35
    logica                         shift and go to state 36
    id_                            shift and go to state 37
    boolean                        shift and go to state 41

state 64

    (38) aritmetica -> expression MODUL . expression
    (28) expression -> . primitivo
    (29) expression -> . aritmetica
    (30) expression -> . relacional
    (31) expression -> . logica
    (32) expression -> . id_
    (49) primitivo -> . NUMBER
    (50) primitivo -> . FLOAT
    (51) primitivo -> . STRING
    (52) primitivo -> . boolean
    (34) aritmetica -> . expression PLUS expression
    (35) aritmetica -> . expression BY expression
    (36) aritmetica -> . expression DIVIDED expression
    (37) aritmetica -> . expression LESS expression
    (38) aritmetica -> . expression MODUL expression
    (39) aritmetica -> . LESS expression
    (40) relacional -> . expression DEQUAL expression
    (41) relacional -> . expression DIFERENT expression
    (42) relacional -> . expression MINOR expression
    (43) relacional -> . expression MINOREQUAL expression
    (44) relacional -> . expression GREATER expression
    (45) relacional -> . expression GREATEREQUAL expression
    (46) logica -> . boolean AND boolean
    (47) logica -> . boolean OR boolean
    (48) logica -> . NOT boolean
    (33) id_ -> . ID
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    LESS            shift and go to state 42
    NOT             shift and go to state 43
    ID              shift and go to state 31
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    expression                     shift and go to state 88
    primitivo                      shift and go to state 33
    aritmetica                     shift and go to state 34
    relacional                     shift and go to state 35
    logica                         shift and go to state 36
    id_                            shift and go to state 37
    boolean                        shift and go to state 41

state 65

    (40) relacional -> expression DEQUAL . expression
    (28) expression -> . primitivo
    (29) expression -> . aritmetica
    (30) expression -> . relacional
    (31) expression -> . logica
    (32) expression -> . id_
    (49) primitivo -> . NUMBER
    (50) primitivo -> . FLOAT
    (51) primitivo -> . STRING
    (52) primitivo -> . boolean
    (34) aritmetica -> . expression PLUS expression
    (35) aritmetica -> . expression BY expression
    (36) aritmetica -> . expression DIVIDED expression
    (37) aritmetica -> . expression LESS expression
    (38) aritmetica -> . expression MODUL expression
    (39) aritmetica -> . LESS expression
    (40) relacional -> . expression DEQUAL expression
    (41) relacional -> . expression DIFERENT expression
    (42) relacional -> . expression MINOR expression
    (43) relacional -> . expression MINOREQUAL expression
    (44) relacional -> . expression GREATER expression
    (45) relacional -> . expression GREATEREQUAL expression
    (46) logica -> . boolean AND boolean
    (47) logica -> . boolean OR boolean
    (48) logica -> . NOT boolean
    (33) id_ -> . ID
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    LESS            shift and go to state 42
    NOT             shift and go to state 43
    ID              shift and go to state 31
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    expression                     shift and go to state 89
    primitivo                      shift and go to state 33
    aritmetica                     shift and go to state 34
    relacional                     shift and go to state 35
    logica                         shift and go to state 36
    id_                            shift and go to state 37
    boolean                        shift and go to state 41

state 66

    (41) relacional -> expression DIFERENT . expression
    (28) expression -> . primitivo
    (29) expression -> . aritmetica
    (30) expression -> . relacional
    (31) expression -> . logica
    (32) expression -> . id_
    (49) primitivo -> . NUMBER
    (50) primitivo -> . FLOAT
    (51) primitivo -> . STRING
    (52) primitivo -> . boolean
    (34) aritmetica -> . expression PLUS expression
    (35) aritmetica -> . expression BY expression
    (36) aritmetica -> . expression DIVIDED expression
    (37) aritmetica -> . expression LESS expression
    (38) aritmetica -> . expression MODUL expression
    (39) aritmetica -> . LESS expression
    (40) relacional -> . expression DEQUAL expression
    (41) relacional -> . expression DIFERENT expression
    (42) relacional -> . expression MINOR expression
    (43) relacional -> . expression MINOREQUAL expression
    (44) relacional -> . expression GREATER expression
    (45) relacional -> . expression GREATEREQUAL expression
    (46) logica -> . boolean AND boolean
    (47) logica -> . boolean OR boolean
    (48) logica -> . NOT boolean
    (33) id_ -> . ID
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    LESS            shift and go to state 42
    NOT             shift and go to state 43
    ID              shift and go to state 31
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    expression                     shift and go to state 90
    primitivo                      shift and go to state 33
    aritmetica                     shift and go to state 34
    relacional                     shift and go to state 35
    logica                         shift and go to state 36
    id_                            shift and go to state 37
    boolean                        shift and go to state 41

state 67

    (42) relacional -> expression MINOR . expression
    (28) expression -> . primitivo
    (29) expression -> . aritmetica
    (30) expression -> . relacional
    (31) expression -> . logica
    (32) expression -> . id_
    (49) primitivo -> . NUMBER
    (50) primitivo -> . FLOAT
    (51) primitivo -> . STRING
    (52) primitivo -> . boolean
    (34) aritmetica -> . expression PLUS expression
    (35) aritmetica -> . expression BY expression
    (36) aritmetica -> . expression DIVIDED expression
    (37) aritmetica -> . expression LESS expression
    (38) aritmetica -> . expression MODUL expression
    (39) aritmetica -> . LESS expression
    (40) relacional -> . expression DEQUAL expression
    (41) relacional -> . expression DIFERENT expression
    (42) relacional -> . expression MINOR expression
    (43) relacional -> . expression MINOREQUAL expression
    (44) relacional -> . expression GREATER expression
    (45) relacional -> . expression GREATEREQUAL expression
    (46) logica -> . boolean AND boolean
    (47) logica -> . boolean OR boolean
    (48) logica -> . NOT boolean
    (33) id_ -> . ID
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    LESS            shift and go to state 42
    NOT             shift and go to state 43
    ID              shift and go to state 31
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    expression                     shift and go to state 91
    primitivo                      shift and go to state 33
    aritmetica                     shift and go to state 34
    relacional                     shift and go to state 35
    logica                         shift and go to state 36
    id_                            shift and go to state 37
    boolean                        shift and go to state 41

state 68

    (43) relacional -> expression MINOREQUAL . expression
    (28) expression -> . primitivo
    (29) expression -> . aritmetica
    (30) expression -> . relacional
    (31) expression -> . logica
    (32) expression -> . id_
    (49) primitivo -> . NUMBER
    (50) primitivo -> . FLOAT
    (51) primitivo -> . STRING
    (52) primitivo -> . boolean
    (34) aritmetica -> . expression PLUS expression
    (35) aritmetica -> . expression BY expression
    (36) aritmetica -> . expression DIVIDED expression
    (37) aritmetica -> . expression LESS expression
    (38) aritmetica -> . expression MODUL expression
    (39) aritmetica -> . LESS expression
    (40) relacional -> . expression DEQUAL expression
    (41) relacional -> . expression DIFERENT expression
    (42) relacional -> . expression MINOR expression
    (43) relacional -> . expression MINOREQUAL expression
    (44) relacional -> . expression GREATER expression
    (45) relacional -> . expression GREATEREQUAL expression
    (46) logica -> . boolean AND boolean
    (47) logica -> . boolean OR boolean
    (48) logica -> . NOT boolean
    (33) id_ -> . ID
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    LESS            shift and go to state 42
    NOT             shift and go to state 43
    ID              shift and go to state 31
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    expression                     shift and go to state 92
    primitivo                      shift and go to state 33
    aritmetica                     shift and go to state 34
    relacional                     shift and go to state 35
    logica                         shift and go to state 36
    id_                            shift and go to state 37
    boolean                        shift and go to state 41

state 69

    (44) relacional -> expression GREATER . expression
    (28) expression -> . primitivo
    (29) expression -> . aritmetica
    (30) expression -> . relacional
    (31) expression -> . logica
    (32) expression -> . id_
    (49) primitivo -> . NUMBER
    (50) primitivo -> . FLOAT
    (51) primitivo -> . STRING
    (52) primitivo -> . boolean
    (34) aritmetica -> . expression PLUS expression
    (35) aritmetica -> . expression BY expression
    (36) aritmetica -> . expression DIVIDED expression
    (37) aritmetica -> . expression LESS expression
    (38) aritmetica -> . expression MODUL expression
    (39) aritmetica -> . LESS expression
    (40) relacional -> . expression DEQUAL expression
    (41) relacional -> . expression DIFERENT expression
    (42) relacional -> . expression MINOR expression
    (43) relacional -> . expression MINOREQUAL expression
    (44) relacional -> . expression GREATER expression
    (45) relacional -> . expression GREATEREQUAL expression
    (46) logica -> . boolean AND boolean
    (47) logica -> . boolean OR boolean
    (48) logica -> . NOT boolean
    (33) id_ -> . ID
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    LESS            shift and go to state 42
    NOT             shift and go to state 43
    ID              shift and go to state 31
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    expression                     shift and go to state 93
    primitivo                      shift and go to state 33
    aritmetica                     shift and go to state 34
    relacional                     shift and go to state 35
    logica                         shift and go to state 36
    id_                            shift and go to state 37
    boolean                        shift and go to state 41

state 70

    (45) relacional -> expression GREATEREQUAL . expression
    (28) expression -> . primitivo
    (29) expression -> . aritmetica
    (30) expression -> . relacional
    (31) expression -> . logica
    (32) expression -> . id_
    (49) primitivo -> . NUMBER
    (50) primitivo -> . FLOAT
    (51) primitivo -> . STRING
    (52) primitivo -> . boolean
    (34) aritmetica -> . expression PLUS expression
    (35) aritmetica -> . expression BY expression
    (36) aritmetica -> . expression DIVIDED expression
    (37) aritmetica -> . expression LESS expression
    (38) aritmetica -> . expression MODUL expression
    (39) aritmetica -> . LESS expression
    (40) relacional -> . expression DEQUAL expression
    (41) relacional -> . expression DIFERENT expression
    (42) relacional -> . expression MINOR expression
    (43) relacional -> . expression MINOREQUAL expression
    (44) relacional -> . expression GREATER expression
    (45) relacional -> . expression GREATEREQUAL expression
    (46) logica -> . boolean AND boolean
    (47) logica -> . boolean OR boolean
    (48) logica -> . NOT boolean
    (33) id_ -> . ID
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    LESS            shift and go to state 42
    NOT             shift and go to state 43
    ID              shift and go to state 31
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    expression                     shift and go to state 94
    primitivo                      shift and go to state 33
    aritmetica                     shift and go to state 34
    relacional                     shift and go to state 35
    logica                         shift and go to state 36
    id_                            shift and go to state 37
    boolean                        shift and go to state 41

state 71

    (46) logica -> boolean AND . boolean
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    boolean                        shift and go to state 95

state 72

    (47) logica -> boolean OR . boolean
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    boolean                        shift and go to state 96

state 73

    (39) aritmetica -> LESS expression .
    (34) aritmetica -> expression . PLUS expression
    (35) aritmetica -> expression . BY expression
    (36) aritmetica -> expression . DIVIDED expression
    (37) aritmetica -> expression . LESS expression
    (38) aritmetica -> expression . MODUL expression
    (40) relacional -> expression . DEQUAL expression
    (41) relacional -> expression . DIFERENT expression
    (42) relacional -> expression . MINOR expression
    (43) relacional -> expression . MINOREQUAL expression
    (44) relacional -> expression . GREATER expression
    (45) relacional -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 39 (aritmetica -> LESS expression .)
    BY              reduce using rule 39 (aritmetica -> LESS expression .)
    DIVIDED         reduce using rule 39 (aritmetica -> LESS expression .)
    LESS            reduce using rule 39 (aritmetica -> LESS expression .)
    MODUL           reduce using rule 39 (aritmetica -> LESS expression .)
    DEQUAL          reduce using rule 39 (aritmetica -> LESS expression .)
    DIFERENT        reduce using rule 39 (aritmetica -> LESS expression .)
    MINOR           reduce using rule 39 (aritmetica -> LESS expression .)
    MINOREQUAL      reduce using rule 39 (aritmetica -> LESS expression .)
    GREATER         reduce using rule 39 (aritmetica -> LESS expression .)
    GREATEREQUAL    reduce using rule 39 (aritmetica -> LESS expression .)
    CONSOLE         reduce using rule 39 (aritmetica -> LESS expression .)
    RVAR            reduce using rule 39 (aritmetica -> LESS expression .)
    RCONST          reduce using rule 39 (aritmetica -> LESS expression .)
    ID              reduce using rule 39 (aritmetica -> LESS expression .)
    RIF             reduce using rule 39 (aritmetica -> LESS expression .)
    RWHILE          reduce using rule 39 (aritmetica -> LESS expression .)
    RFOR            reduce using rule 39 (aritmetica -> LESS expression .)
    $end            reduce using rule 39 (aritmetica -> LESS expression .)
    LLAVEC          reduce using rule 39 (aritmetica -> LESS expression .)
    PARC            reduce using rule 39 (aritmetica -> LESS expression .)
    SEMICOLON       reduce using rule 39 (aritmetica -> LESS expression .)

  ! PLUS            [ shift and go to state 60 ]
  ! BY              [ shift and go to state 61 ]
  ! DIVIDED         [ shift and go to state 62 ]
  ! LESS            [ shift and go to state 63 ]
  ! MODUL           [ shift and go to state 64 ]
  ! DEQUAL          [ shift and go to state 65 ]
  ! DIFERENT        [ shift and go to state 66 ]
  ! MINOR           [ shift and go to state 67 ]
  ! MINOREQUAL      [ shift and go to state 68 ]
  ! GREATER         [ shift and go to state 69 ]
  ! GREATEREQUAL    [ shift and go to state 70 ]


state 74

    (48) logica -> NOT boolean .

    PLUS            reduce using rule 48 (logica -> NOT boolean .)
    BY              reduce using rule 48 (logica -> NOT boolean .)
    DIVIDED         reduce using rule 48 (logica -> NOT boolean .)
    LESS            reduce using rule 48 (logica -> NOT boolean .)
    MODUL           reduce using rule 48 (logica -> NOT boolean .)
    DEQUAL          reduce using rule 48 (logica -> NOT boolean .)
    DIFERENT        reduce using rule 48 (logica -> NOT boolean .)
    MINOR           reduce using rule 48 (logica -> NOT boolean .)
    MINOREQUAL      reduce using rule 48 (logica -> NOT boolean .)
    GREATER         reduce using rule 48 (logica -> NOT boolean .)
    GREATEREQUAL    reduce using rule 48 (logica -> NOT boolean .)
    CONSOLE         reduce using rule 48 (logica -> NOT boolean .)
    RVAR            reduce using rule 48 (logica -> NOT boolean .)
    RCONST          reduce using rule 48 (logica -> NOT boolean .)
    ID              reduce using rule 48 (logica -> NOT boolean .)
    RIF             reduce using rule 48 (logica -> NOT boolean .)
    RWHILE          reduce using rule 48 (logica -> NOT boolean .)
    RFOR            reduce using rule 48 (logica -> NOT boolean .)
    $end            reduce using rule 48 (logica -> NOT boolean .)
    LLAVEC          reduce using rule 48 (logica -> NOT boolean .)
    PARC            reduce using rule 48 (logica -> NOT boolean .)
    SEMICOLON       reduce using rule 48 (logica -> NOT boolean .)


state 75

    (19) assignVar -> ID PLUS EQUAL expression .
    (34) aritmetica -> expression . PLUS expression
    (35) aritmetica -> expression . BY expression
    (36) aritmetica -> expression . DIVIDED expression
    (37) aritmetica -> expression . LESS expression
    (38) aritmetica -> expression . MODUL expression
    (40) relacional -> expression . DEQUAL expression
    (41) relacional -> expression . DIFERENT expression
    (42) relacional -> expression . MINOR expression
    (43) relacional -> expression . MINOREQUAL expression
    (44) relacional -> expression . GREATER expression
    (45) relacional -> expression . GREATEREQUAL expression

    CONSOLE         reduce using rule 19 (assignVar -> ID PLUS EQUAL expression .)
    RVAR            reduce using rule 19 (assignVar -> ID PLUS EQUAL expression .)
    RCONST          reduce using rule 19 (assignVar -> ID PLUS EQUAL expression .)
    ID              reduce using rule 19 (assignVar -> ID PLUS EQUAL expression .)
    RIF             reduce using rule 19 (assignVar -> ID PLUS EQUAL expression .)
    RWHILE          reduce using rule 19 (assignVar -> ID PLUS EQUAL expression .)
    RFOR            reduce using rule 19 (assignVar -> ID PLUS EQUAL expression .)
    $end            reduce using rule 19 (assignVar -> ID PLUS EQUAL expression .)
    LLAVEC          reduce using rule 19 (assignVar -> ID PLUS EQUAL expression .)
    PLUS            shift and go to state 60
    BY              shift and go to state 61
    DIVIDED         shift and go to state 62
    LESS            shift and go to state 63
    MODUL           shift and go to state 64
    DEQUAL          shift and go to state 65
    DIFERENT        shift and go to state 66
    MINOR           shift and go to state 67
    MINOREQUAL      shift and go to state 68
    GREATER         shift and go to state 69
    GREATEREQUAL    shift and go to state 70


state 76

    (20) assignVar -> ID LESS EQUAL expression .
    (34) aritmetica -> expression . PLUS expression
    (35) aritmetica -> expression . BY expression
    (36) aritmetica -> expression . DIVIDED expression
    (37) aritmetica -> expression . LESS expression
    (38) aritmetica -> expression . MODUL expression
    (40) relacional -> expression . DEQUAL expression
    (41) relacional -> expression . DIFERENT expression
    (42) relacional -> expression . MINOR expression
    (43) relacional -> expression . MINOREQUAL expression
    (44) relacional -> expression . GREATER expression
    (45) relacional -> expression . GREATEREQUAL expression

    CONSOLE         reduce using rule 20 (assignVar -> ID LESS EQUAL expression .)
    RVAR            reduce using rule 20 (assignVar -> ID LESS EQUAL expression .)
    RCONST          reduce using rule 20 (assignVar -> ID LESS EQUAL expression .)
    ID              reduce using rule 20 (assignVar -> ID LESS EQUAL expression .)
    RIF             reduce using rule 20 (assignVar -> ID LESS EQUAL expression .)
    RWHILE          reduce using rule 20 (assignVar -> ID LESS EQUAL expression .)
    RFOR            reduce using rule 20 (assignVar -> ID LESS EQUAL expression .)
    $end            reduce using rule 20 (assignVar -> ID LESS EQUAL expression .)
    LLAVEC          reduce using rule 20 (assignVar -> ID LESS EQUAL expression .)
    PLUS            shift and go to state 60
    BY              shift and go to state 61
    DIVIDED         shift and go to state 62
    LESS            shift and go to state 63
    MODUL           shift and go to state 64
    DEQUAL          shift and go to state 65
    DIFERENT        shift and go to state 66
    MINOR           shift and go to state 67
    MINOREQUAL      shift and go to state 68
    GREATER         shift and go to state 69
    GREATEREQUAL    shift and go to state 70


state 77

    (15) declareConst -> RCONST ID DOUBLEDOT type . EQUAL expression
    (17) declareConst -> RCONST ID DOUBLEDOT type .

    EQUAL           shift and go to state 97
    CONSOLE         reduce using rule 17 (declareConst -> RCONST ID DOUBLEDOT type .)
    RVAR            reduce using rule 17 (declareConst -> RCONST ID DOUBLEDOT type .)
    RCONST          reduce using rule 17 (declareConst -> RCONST ID DOUBLEDOT type .)
    ID              reduce using rule 17 (declareConst -> RCONST ID DOUBLEDOT type .)
    RIF             reduce using rule 17 (declareConst -> RCONST ID DOUBLEDOT type .)
    RWHILE          reduce using rule 17 (declareConst -> RCONST ID DOUBLEDOT type .)
    RFOR            reduce using rule 17 (declareConst -> RCONST ID DOUBLEDOT type .)
    $end            reduce using rule 17 (declareConst -> RCONST ID DOUBLEDOT type .)
    LLAVEC          reduce using rule 17 (declareConst -> RCONST ID DOUBLEDOT type .)


state 78

    (16) declareConst -> RCONST ID EQUAL expression .
    (34) aritmetica -> expression . PLUS expression
    (35) aritmetica -> expression . BY expression
    (36) aritmetica -> expression . DIVIDED expression
    (37) aritmetica -> expression . LESS expression
    (38) aritmetica -> expression . MODUL expression
    (40) relacional -> expression . DEQUAL expression
    (41) relacional -> expression . DIFERENT expression
    (42) relacional -> expression . MINOR expression
    (43) relacional -> expression . MINOREQUAL expression
    (44) relacional -> expression . GREATER expression
    (45) relacional -> expression . GREATEREQUAL expression

    CONSOLE         reduce using rule 16 (declareConst -> RCONST ID EQUAL expression .)
    RVAR            reduce using rule 16 (declareConst -> RCONST ID EQUAL expression .)
    RCONST          reduce using rule 16 (declareConst -> RCONST ID EQUAL expression .)
    ID              reduce using rule 16 (declareConst -> RCONST ID EQUAL expression .)
    RIF             reduce using rule 16 (declareConst -> RCONST ID EQUAL expression .)
    RWHILE          reduce using rule 16 (declareConst -> RCONST ID EQUAL expression .)
    RFOR            reduce using rule 16 (declareConst -> RCONST ID EQUAL expression .)
    $end            reduce using rule 16 (declareConst -> RCONST ID EQUAL expression .)
    LLAVEC          reduce using rule 16 (declareConst -> RCONST ID EQUAL expression .)
    PLUS            shift and go to state 60
    BY              shift and go to state 61
    DIVIDED         shift and go to state 62
    LESS            shift and go to state 63
    MODUL           shift and go to state 64
    DEQUAL          shift and go to state 65
    DIFERENT        shift and go to state 66
    MINOR           shift and go to state 67
    MINOREQUAL      shift and go to state 68
    GREATER         shift and go to state 69
    GREATEREQUAL    shift and go to state 70


state 79

    (21) if_else -> RIF PARA expression PARC . LLAVEA instrucciones LLAVEC else

    LLAVEA          shift and go to state 98


state 80

    (25) while_ -> RWHILE PARA expression PARC . LLAVEA instrucciones LLAVEC

    LLAVEA          shift and go to state 99


state 81

    (26) for_ -> RFOR PARA declare SEMICOLON . relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (27) for_ -> RFOR PARA declare SEMICOLON . relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (40) relacional -> . expression DEQUAL expression
    (41) relacional -> . expression DIFERENT expression
    (42) relacional -> . expression MINOR expression
    (43) relacional -> . expression MINOREQUAL expression
    (44) relacional -> . expression GREATER expression
    (45) relacional -> . expression GREATEREQUAL expression
    (28) expression -> . primitivo
    (29) expression -> . aritmetica
    (30) expression -> . relacional
    (31) expression -> . logica
    (32) expression -> . id_
    (49) primitivo -> . NUMBER
    (50) primitivo -> . FLOAT
    (51) primitivo -> . STRING
    (52) primitivo -> . boolean
    (34) aritmetica -> . expression PLUS expression
    (35) aritmetica -> . expression BY expression
    (36) aritmetica -> . expression DIVIDED expression
    (37) aritmetica -> . expression LESS expression
    (38) aritmetica -> . expression MODUL expression
    (39) aritmetica -> . LESS expression
    (46) logica -> . boolean AND boolean
    (47) logica -> . boolean OR boolean
    (48) logica -> . NOT boolean
    (33) id_ -> . ID
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    LESS            shift and go to state 42
    NOT             shift and go to state 43
    ID              shift and go to state 31
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    relacional                     shift and go to state 100
    id_                            shift and go to state 37
    expression                     shift and go to state 101
    primitivo                      shift and go to state 33
    aritmetica                     shift and go to state 34
    logica                         shift and go to state 36
    boolean                        shift and go to state 41

state 82

    (11) print -> CONSOLE DOT LOG PARA expression . PARC
    (34) aritmetica -> expression . PLUS expression
    (35) aritmetica -> expression . BY expression
    (36) aritmetica -> expression . DIVIDED expression
    (37) aritmetica -> expression . LESS expression
    (38) aritmetica -> expression . MODUL expression
    (40) relacional -> expression . DEQUAL expression
    (41) relacional -> expression . DIFERENT expression
    (42) relacional -> expression . MINOR expression
    (43) relacional -> expression . MINOREQUAL expression
    (44) relacional -> expression . GREATER expression
    (45) relacional -> expression . GREATEREQUAL expression

    PARC            shift and go to state 102
    PLUS            shift and go to state 60
    BY              shift and go to state 61
    DIVIDED         shift and go to state 62
    LESS            shift and go to state 63
    MODUL           shift and go to state 64
    DEQUAL          shift and go to state 65
    DIFERENT        shift and go to state 66
    MINOR           shift and go to state 67
    MINOREQUAL      shift and go to state 68
    GREATER         shift and go to state 69
    GREATEREQUAL    shift and go to state 70


state 83

    (12) declare -> RVAR ID DOUBLEDOT type EQUAL . expression
    (28) expression -> . primitivo
    (29) expression -> . aritmetica
    (30) expression -> . relacional
    (31) expression -> . logica
    (32) expression -> . id_
    (49) primitivo -> . NUMBER
    (50) primitivo -> . FLOAT
    (51) primitivo -> . STRING
    (52) primitivo -> . boolean
    (34) aritmetica -> . expression PLUS expression
    (35) aritmetica -> . expression BY expression
    (36) aritmetica -> . expression DIVIDED expression
    (37) aritmetica -> . expression LESS expression
    (38) aritmetica -> . expression MODUL expression
    (39) aritmetica -> . LESS expression
    (40) relacional -> . expression DEQUAL expression
    (41) relacional -> . expression DIFERENT expression
    (42) relacional -> . expression MINOR expression
    (43) relacional -> . expression MINOREQUAL expression
    (44) relacional -> . expression GREATER expression
    (45) relacional -> . expression GREATEREQUAL expression
    (46) logica -> . boolean AND boolean
    (47) logica -> . boolean OR boolean
    (48) logica -> . NOT boolean
    (33) id_ -> . ID
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    LESS            shift and go to state 42
    NOT             shift and go to state 43
    ID              shift and go to state 31
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    expression                     shift and go to state 103
    primitivo                      shift and go to state 33
    aritmetica                     shift and go to state 34
    relacional                     shift and go to state 35
    logica                         shift and go to state 36
    id_                            shift and go to state 37
    boolean                        shift and go to state 41

state 84

    (34) aritmetica -> expression PLUS expression .
    (34) aritmetica -> expression . PLUS expression
    (35) aritmetica -> expression . BY expression
    (36) aritmetica -> expression . DIVIDED expression
    (37) aritmetica -> expression . LESS expression
    (38) aritmetica -> expression . MODUL expression
    (40) relacional -> expression . DEQUAL expression
    (41) relacional -> expression . DIFERENT expression
    (42) relacional -> expression . MINOR expression
    (43) relacional -> expression . MINOREQUAL expression
    (44) relacional -> expression . GREATER expression
    (45) relacional -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 34 (aritmetica -> expression PLUS expression .)
    LESS            reduce using rule 34 (aritmetica -> expression PLUS expression .)
    DEQUAL          reduce using rule 34 (aritmetica -> expression PLUS expression .)
    DIFERENT        reduce using rule 34 (aritmetica -> expression PLUS expression .)
    MINOR           reduce using rule 34 (aritmetica -> expression PLUS expression .)
    MINOREQUAL      reduce using rule 34 (aritmetica -> expression PLUS expression .)
    GREATER         reduce using rule 34 (aritmetica -> expression PLUS expression .)
    GREATEREQUAL    reduce using rule 34 (aritmetica -> expression PLUS expression .)
    CONSOLE         reduce using rule 34 (aritmetica -> expression PLUS expression .)
    RVAR            reduce using rule 34 (aritmetica -> expression PLUS expression .)
    RCONST          reduce using rule 34 (aritmetica -> expression PLUS expression .)
    ID              reduce using rule 34 (aritmetica -> expression PLUS expression .)
    RIF             reduce using rule 34 (aritmetica -> expression PLUS expression .)
    RWHILE          reduce using rule 34 (aritmetica -> expression PLUS expression .)
    RFOR            reduce using rule 34 (aritmetica -> expression PLUS expression .)
    $end            reduce using rule 34 (aritmetica -> expression PLUS expression .)
    LLAVEC          reduce using rule 34 (aritmetica -> expression PLUS expression .)
    PARC            reduce using rule 34 (aritmetica -> expression PLUS expression .)
    SEMICOLON       reduce using rule 34 (aritmetica -> expression PLUS expression .)
    BY              shift and go to state 61
    DIVIDED         shift and go to state 62
    MODUL           shift and go to state 64

  ! BY              [ reduce using rule 34 (aritmetica -> expression PLUS expression .) ]
  ! DIVIDED         [ reduce using rule 34 (aritmetica -> expression PLUS expression .) ]
  ! MODUL           [ reduce using rule 34 (aritmetica -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 60 ]
  ! LESS            [ shift and go to state 63 ]
  ! DEQUAL          [ shift and go to state 65 ]
  ! DIFERENT        [ shift and go to state 66 ]
  ! MINOR           [ shift and go to state 67 ]
  ! MINOREQUAL      [ shift and go to state 68 ]
  ! GREATER         [ shift and go to state 69 ]
  ! GREATEREQUAL    [ shift and go to state 70 ]


state 85

    (35) aritmetica -> expression BY expression .
    (34) aritmetica -> expression . PLUS expression
    (35) aritmetica -> expression . BY expression
    (36) aritmetica -> expression . DIVIDED expression
    (37) aritmetica -> expression . LESS expression
    (38) aritmetica -> expression . MODUL expression
    (40) relacional -> expression . DEQUAL expression
    (41) relacional -> expression . DIFERENT expression
    (42) relacional -> expression . MINOR expression
    (43) relacional -> expression . MINOREQUAL expression
    (44) relacional -> expression . GREATER expression
    (45) relacional -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 35 (aritmetica -> expression BY expression .)
    BY              reduce using rule 35 (aritmetica -> expression BY expression .)
    DIVIDED         reduce using rule 35 (aritmetica -> expression BY expression .)
    LESS            reduce using rule 35 (aritmetica -> expression BY expression .)
    MODUL           reduce using rule 35 (aritmetica -> expression BY expression .)
    DEQUAL          reduce using rule 35 (aritmetica -> expression BY expression .)
    DIFERENT        reduce using rule 35 (aritmetica -> expression BY expression .)
    MINOR           reduce using rule 35 (aritmetica -> expression BY expression .)
    MINOREQUAL      reduce using rule 35 (aritmetica -> expression BY expression .)
    GREATER         reduce using rule 35 (aritmetica -> expression BY expression .)
    GREATEREQUAL    reduce using rule 35 (aritmetica -> expression BY expression .)
    CONSOLE         reduce using rule 35 (aritmetica -> expression BY expression .)
    RVAR            reduce using rule 35 (aritmetica -> expression BY expression .)
    RCONST          reduce using rule 35 (aritmetica -> expression BY expression .)
    ID              reduce using rule 35 (aritmetica -> expression BY expression .)
    RIF             reduce using rule 35 (aritmetica -> expression BY expression .)
    RWHILE          reduce using rule 35 (aritmetica -> expression BY expression .)
    RFOR            reduce using rule 35 (aritmetica -> expression BY expression .)
    $end            reduce using rule 35 (aritmetica -> expression BY expression .)
    LLAVEC          reduce using rule 35 (aritmetica -> expression BY expression .)
    PARC            reduce using rule 35 (aritmetica -> expression BY expression .)
    SEMICOLON       reduce using rule 35 (aritmetica -> expression BY expression .)

  ! PLUS            [ shift and go to state 60 ]
  ! BY              [ shift and go to state 61 ]
  ! DIVIDED         [ shift and go to state 62 ]
  ! LESS            [ shift and go to state 63 ]
  ! MODUL           [ shift and go to state 64 ]
  ! DEQUAL          [ shift and go to state 65 ]
  ! DIFERENT        [ shift and go to state 66 ]
  ! MINOR           [ shift and go to state 67 ]
  ! MINOREQUAL      [ shift and go to state 68 ]
  ! GREATER         [ shift and go to state 69 ]
  ! GREATEREQUAL    [ shift and go to state 70 ]


state 86

    (36) aritmetica -> expression DIVIDED expression .
    (34) aritmetica -> expression . PLUS expression
    (35) aritmetica -> expression . BY expression
    (36) aritmetica -> expression . DIVIDED expression
    (37) aritmetica -> expression . LESS expression
    (38) aritmetica -> expression . MODUL expression
    (40) relacional -> expression . DEQUAL expression
    (41) relacional -> expression . DIFERENT expression
    (42) relacional -> expression . MINOR expression
    (43) relacional -> expression . MINOREQUAL expression
    (44) relacional -> expression . GREATER expression
    (45) relacional -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 36 (aritmetica -> expression DIVIDED expression .)
    BY              reduce using rule 36 (aritmetica -> expression DIVIDED expression .)
    DIVIDED         reduce using rule 36 (aritmetica -> expression DIVIDED expression .)
    LESS            reduce using rule 36 (aritmetica -> expression DIVIDED expression .)
    MODUL           reduce using rule 36 (aritmetica -> expression DIVIDED expression .)
    DEQUAL          reduce using rule 36 (aritmetica -> expression DIVIDED expression .)
    DIFERENT        reduce using rule 36 (aritmetica -> expression DIVIDED expression .)
    MINOR           reduce using rule 36 (aritmetica -> expression DIVIDED expression .)
    MINOREQUAL      reduce using rule 36 (aritmetica -> expression DIVIDED expression .)
    GREATER         reduce using rule 36 (aritmetica -> expression DIVIDED expression .)
    GREATEREQUAL    reduce using rule 36 (aritmetica -> expression DIVIDED expression .)
    CONSOLE         reduce using rule 36 (aritmetica -> expression DIVIDED expression .)
    RVAR            reduce using rule 36 (aritmetica -> expression DIVIDED expression .)
    RCONST          reduce using rule 36 (aritmetica -> expression DIVIDED expression .)
    ID              reduce using rule 36 (aritmetica -> expression DIVIDED expression .)
    RIF             reduce using rule 36 (aritmetica -> expression DIVIDED expression .)
    RWHILE          reduce using rule 36 (aritmetica -> expression DIVIDED expression .)
    RFOR            reduce using rule 36 (aritmetica -> expression DIVIDED expression .)
    $end            reduce using rule 36 (aritmetica -> expression DIVIDED expression .)
    LLAVEC          reduce using rule 36 (aritmetica -> expression DIVIDED expression .)
    PARC            reduce using rule 36 (aritmetica -> expression DIVIDED expression .)
    SEMICOLON       reduce using rule 36 (aritmetica -> expression DIVIDED expression .)

  ! PLUS            [ shift and go to state 60 ]
  ! BY              [ shift and go to state 61 ]
  ! DIVIDED         [ shift and go to state 62 ]
  ! LESS            [ shift and go to state 63 ]
  ! MODUL           [ shift and go to state 64 ]
  ! DEQUAL          [ shift and go to state 65 ]
  ! DIFERENT        [ shift and go to state 66 ]
  ! MINOR           [ shift and go to state 67 ]
  ! MINOREQUAL      [ shift and go to state 68 ]
  ! GREATER         [ shift and go to state 69 ]
  ! GREATEREQUAL    [ shift and go to state 70 ]


state 87

    (37) aritmetica -> expression LESS expression .
    (34) aritmetica -> expression . PLUS expression
    (35) aritmetica -> expression . BY expression
    (36) aritmetica -> expression . DIVIDED expression
    (37) aritmetica -> expression . LESS expression
    (38) aritmetica -> expression . MODUL expression
    (40) relacional -> expression . DEQUAL expression
    (41) relacional -> expression . DIFERENT expression
    (42) relacional -> expression . MINOR expression
    (43) relacional -> expression . MINOREQUAL expression
    (44) relacional -> expression . GREATER expression
    (45) relacional -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 37 (aritmetica -> expression LESS expression .)
    LESS            reduce using rule 37 (aritmetica -> expression LESS expression .)
    DEQUAL          reduce using rule 37 (aritmetica -> expression LESS expression .)
    DIFERENT        reduce using rule 37 (aritmetica -> expression LESS expression .)
    MINOR           reduce using rule 37 (aritmetica -> expression LESS expression .)
    MINOREQUAL      reduce using rule 37 (aritmetica -> expression LESS expression .)
    GREATER         reduce using rule 37 (aritmetica -> expression LESS expression .)
    GREATEREQUAL    reduce using rule 37 (aritmetica -> expression LESS expression .)
    CONSOLE         reduce using rule 37 (aritmetica -> expression LESS expression .)
    RVAR            reduce using rule 37 (aritmetica -> expression LESS expression .)
    RCONST          reduce using rule 37 (aritmetica -> expression LESS expression .)
    ID              reduce using rule 37 (aritmetica -> expression LESS expression .)
    RIF             reduce using rule 37 (aritmetica -> expression LESS expression .)
    RWHILE          reduce using rule 37 (aritmetica -> expression LESS expression .)
    RFOR            reduce using rule 37 (aritmetica -> expression LESS expression .)
    $end            reduce using rule 37 (aritmetica -> expression LESS expression .)
    LLAVEC          reduce using rule 37 (aritmetica -> expression LESS expression .)
    PARC            reduce using rule 37 (aritmetica -> expression LESS expression .)
    SEMICOLON       reduce using rule 37 (aritmetica -> expression LESS expression .)
    BY              shift and go to state 61
    DIVIDED         shift and go to state 62
    MODUL           shift and go to state 64

  ! BY              [ reduce using rule 37 (aritmetica -> expression LESS expression .) ]
  ! DIVIDED         [ reduce using rule 37 (aritmetica -> expression LESS expression .) ]
  ! MODUL           [ reduce using rule 37 (aritmetica -> expression LESS expression .) ]
  ! PLUS            [ shift and go to state 60 ]
  ! LESS            [ shift and go to state 63 ]
  ! DEQUAL          [ shift and go to state 65 ]
  ! DIFERENT        [ shift and go to state 66 ]
  ! MINOR           [ shift and go to state 67 ]
  ! MINOREQUAL      [ shift and go to state 68 ]
  ! GREATER         [ shift and go to state 69 ]
  ! GREATEREQUAL    [ shift and go to state 70 ]


state 88

    (38) aritmetica -> expression MODUL expression .
    (34) aritmetica -> expression . PLUS expression
    (35) aritmetica -> expression . BY expression
    (36) aritmetica -> expression . DIVIDED expression
    (37) aritmetica -> expression . LESS expression
    (38) aritmetica -> expression . MODUL expression
    (40) relacional -> expression . DEQUAL expression
    (41) relacional -> expression . DIFERENT expression
    (42) relacional -> expression . MINOR expression
    (43) relacional -> expression . MINOREQUAL expression
    (44) relacional -> expression . GREATER expression
    (45) relacional -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 38 (aritmetica -> expression MODUL expression .)
    BY              reduce using rule 38 (aritmetica -> expression MODUL expression .)
    DIVIDED         reduce using rule 38 (aritmetica -> expression MODUL expression .)
    LESS            reduce using rule 38 (aritmetica -> expression MODUL expression .)
    MODUL           reduce using rule 38 (aritmetica -> expression MODUL expression .)
    DEQUAL          reduce using rule 38 (aritmetica -> expression MODUL expression .)
    DIFERENT        reduce using rule 38 (aritmetica -> expression MODUL expression .)
    MINOR           reduce using rule 38 (aritmetica -> expression MODUL expression .)
    MINOREQUAL      reduce using rule 38 (aritmetica -> expression MODUL expression .)
    GREATER         reduce using rule 38 (aritmetica -> expression MODUL expression .)
    GREATEREQUAL    reduce using rule 38 (aritmetica -> expression MODUL expression .)
    CONSOLE         reduce using rule 38 (aritmetica -> expression MODUL expression .)
    RVAR            reduce using rule 38 (aritmetica -> expression MODUL expression .)
    RCONST          reduce using rule 38 (aritmetica -> expression MODUL expression .)
    ID              reduce using rule 38 (aritmetica -> expression MODUL expression .)
    RIF             reduce using rule 38 (aritmetica -> expression MODUL expression .)
    RWHILE          reduce using rule 38 (aritmetica -> expression MODUL expression .)
    RFOR            reduce using rule 38 (aritmetica -> expression MODUL expression .)
    $end            reduce using rule 38 (aritmetica -> expression MODUL expression .)
    LLAVEC          reduce using rule 38 (aritmetica -> expression MODUL expression .)
    PARC            reduce using rule 38 (aritmetica -> expression MODUL expression .)
    SEMICOLON       reduce using rule 38 (aritmetica -> expression MODUL expression .)

  ! PLUS            [ shift and go to state 60 ]
  ! BY              [ shift and go to state 61 ]
  ! DIVIDED         [ shift and go to state 62 ]
  ! LESS            [ shift and go to state 63 ]
  ! MODUL           [ shift and go to state 64 ]
  ! DEQUAL          [ shift and go to state 65 ]
  ! DIFERENT        [ shift and go to state 66 ]
  ! MINOR           [ shift and go to state 67 ]
  ! MINOREQUAL      [ shift and go to state 68 ]
  ! GREATER         [ shift and go to state 69 ]
  ! GREATEREQUAL    [ shift and go to state 70 ]


state 89

    (40) relacional -> expression DEQUAL expression .
    (34) aritmetica -> expression . PLUS expression
    (35) aritmetica -> expression . BY expression
    (36) aritmetica -> expression . DIVIDED expression
    (37) aritmetica -> expression . LESS expression
    (38) aritmetica -> expression . MODUL expression
    (40) relacional -> expression . DEQUAL expression
    (41) relacional -> expression . DIFERENT expression
    (42) relacional -> expression . MINOR expression
    (43) relacional -> expression . MINOREQUAL expression
    (44) relacional -> expression . GREATER expression
    (45) relacional -> expression . GREATEREQUAL expression

    DEQUAL          reduce using rule 40 (relacional -> expression DEQUAL expression .)
    DIFERENT        reduce using rule 40 (relacional -> expression DEQUAL expression .)
    MINOR           reduce using rule 40 (relacional -> expression DEQUAL expression .)
    MINOREQUAL      reduce using rule 40 (relacional -> expression DEQUAL expression .)
    GREATER         reduce using rule 40 (relacional -> expression DEQUAL expression .)
    GREATEREQUAL    reduce using rule 40 (relacional -> expression DEQUAL expression .)
    CONSOLE         reduce using rule 40 (relacional -> expression DEQUAL expression .)
    RVAR            reduce using rule 40 (relacional -> expression DEQUAL expression .)
    RCONST          reduce using rule 40 (relacional -> expression DEQUAL expression .)
    ID              reduce using rule 40 (relacional -> expression DEQUAL expression .)
    RIF             reduce using rule 40 (relacional -> expression DEQUAL expression .)
    RWHILE          reduce using rule 40 (relacional -> expression DEQUAL expression .)
    RFOR            reduce using rule 40 (relacional -> expression DEQUAL expression .)
    $end            reduce using rule 40 (relacional -> expression DEQUAL expression .)
    LLAVEC          reduce using rule 40 (relacional -> expression DEQUAL expression .)
    PARC            reduce using rule 40 (relacional -> expression DEQUAL expression .)
    SEMICOLON       reduce using rule 40 (relacional -> expression DEQUAL expression .)
    PLUS            shift and go to state 60
    BY              shift and go to state 61
    DIVIDED         shift and go to state 62
    LESS            shift and go to state 63
    MODUL           shift and go to state 64

  ! PLUS            [ reduce using rule 40 (relacional -> expression DEQUAL expression .) ]
  ! BY              [ reduce using rule 40 (relacional -> expression DEQUAL expression .) ]
  ! DIVIDED         [ reduce using rule 40 (relacional -> expression DEQUAL expression .) ]
  ! LESS            [ reduce using rule 40 (relacional -> expression DEQUAL expression .) ]
  ! MODUL           [ reduce using rule 40 (relacional -> expression DEQUAL expression .) ]
  ! DEQUAL          [ shift and go to state 65 ]
  ! DIFERENT        [ shift and go to state 66 ]
  ! MINOR           [ shift and go to state 67 ]
  ! MINOREQUAL      [ shift and go to state 68 ]
  ! GREATER         [ shift and go to state 69 ]
  ! GREATEREQUAL    [ shift and go to state 70 ]


state 90

    (41) relacional -> expression DIFERENT expression .
    (34) aritmetica -> expression . PLUS expression
    (35) aritmetica -> expression . BY expression
    (36) aritmetica -> expression . DIVIDED expression
    (37) aritmetica -> expression . LESS expression
    (38) aritmetica -> expression . MODUL expression
    (40) relacional -> expression . DEQUAL expression
    (41) relacional -> expression . DIFERENT expression
    (42) relacional -> expression . MINOR expression
    (43) relacional -> expression . MINOREQUAL expression
    (44) relacional -> expression . GREATER expression
    (45) relacional -> expression . GREATEREQUAL expression

    DEQUAL          reduce using rule 41 (relacional -> expression DIFERENT expression .)
    DIFERENT        reduce using rule 41 (relacional -> expression DIFERENT expression .)
    MINOR           reduce using rule 41 (relacional -> expression DIFERENT expression .)
    MINOREQUAL      reduce using rule 41 (relacional -> expression DIFERENT expression .)
    GREATER         reduce using rule 41 (relacional -> expression DIFERENT expression .)
    GREATEREQUAL    reduce using rule 41 (relacional -> expression DIFERENT expression .)
    CONSOLE         reduce using rule 41 (relacional -> expression DIFERENT expression .)
    RVAR            reduce using rule 41 (relacional -> expression DIFERENT expression .)
    RCONST          reduce using rule 41 (relacional -> expression DIFERENT expression .)
    ID              reduce using rule 41 (relacional -> expression DIFERENT expression .)
    RIF             reduce using rule 41 (relacional -> expression DIFERENT expression .)
    RWHILE          reduce using rule 41 (relacional -> expression DIFERENT expression .)
    RFOR            reduce using rule 41 (relacional -> expression DIFERENT expression .)
    $end            reduce using rule 41 (relacional -> expression DIFERENT expression .)
    LLAVEC          reduce using rule 41 (relacional -> expression DIFERENT expression .)
    PARC            reduce using rule 41 (relacional -> expression DIFERENT expression .)
    SEMICOLON       reduce using rule 41 (relacional -> expression DIFERENT expression .)
    PLUS            shift and go to state 60
    BY              shift and go to state 61
    DIVIDED         shift and go to state 62
    LESS            shift and go to state 63
    MODUL           shift and go to state 64

  ! PLUS            [ reduce using rule 41 (relacional -> expression DIFERENT expression .) ]
  ! BY              [ reduce using rule 41 (relacional -> expression DIFERENT expression .) ]
  ! DIVIDED         [ reduce using rule 41 (relacional -> expression DIFERENT expression .) ]
  ! LESS            [ reduce using rule 41 (relacional -> expression DIFERENT expression .) ]
  ! MODUL           [ reduce using rule 41 (relacional -> expression DIFERENT expression .) ]
  ! DEQUAL          [ shift and go to state 65 ]
  ! DIFERENT        [ shift and go to state 66 ]
  ! MINOR           [ shift and go to state 67 ]
  ! MINOREQUAL      [ shift and go to state 68 ]
  ! GREATER         [ shift and go to state 69 ]
  ! GREATEREQUAL    [ shift and go to state 70 ]


state 91

    (42) relacional -> expression MINOR expression .
    (34) aritmetica -> expression . PLUS expression
    (35) aritmetica -> expression . BY expression
    (36) aritmetica -> expression . DIVIDED expression
    (37) aritmetica -> expression . LESS expression
    (38) aritmetica -> expression . MODUL expression
    (40) relacional -> expression . DEQUAL expression
    (41) relacional -> expression . DIFERENT expression
    (42) relacional -> expression . MINOR expression
    (43) relacional -> expression . MINOREQUAL expression
    (44) relacional -> expression . GREATER expression
    (45) relacional -> expression . GREATEREQUAL expression

    DEQUAL          reduce using rule 42 (relacional -> expression MINOR expression .)
    DIFERENT        reduce using rule 42 (relacional -> expression MINOR expression .)
    MINOR           reduce using rule 42 (relacional -> expression MINOR expression .)
    MINOREQUAL      reduce using rule 42 (relacional -> expression MINOR expression .)
    GREATER         reduce using rule 42 (relacional -> expression MINOR expression .)
    GREATEREQUAL    reduce using rule 42 (relacional -> expression MINOR expression .)
    CONSOLE         reduce using rule 42 (relacional -> expression MINOR expression .)
    RVAR            reduce using rule 42 (relacional -> expression MINOR expression .)
    RCONST          reduce using rule 42 (relacional -> expression MINOR expression .)
    ID              reduce using rule 42 (relacional -> expression MINOR expression .)
    RIF             reduce using rule 42 (relacional -> expression MINOR expression .)
    RWHILE          reduce using rule 42 (relacional -> expression MINOR expression .)
    RFOR            reduce using rule 42 (relacional -> expression MINOR expression .)
    $end            reduce using rule 42 (relacional -> expression MINOR expression .)
    LLAVEC          reduce using rule 42 (relacional -> expression MINOR expression .)
    PARC            reduce using rule 42 (relacional -> expression MINOR expression .)
    SEMICOLON       reduce using rule 42 (relacional -> expression MINOR expression .)
    PLUS            shift and go to state 60
    BY              shift and go to state 61
    DIVIDED         shift and go to state 62
    LESS            shift and go to state 63
    MODUL           shift and go to state 64

  ! PLUS            [ reduce using rule 42 (relacional -> expression MINOR expression .) ]
  ! BY              [ reduce using rule 42 (relacional -> expression MINOR expression .) ]
  ! DIVIDED         [ reduce using rule 42 (relacional -> expression MINOR expression .) ]
  ! LESS            [ reduce using rule 42 (relacional -> expression MINOR expression .) ]
  ! MODUL           [ reduce using rule 42 (relacional -> expression MINOR expression .) ]
  ! DEQUAL          [ shift and go to state 65 ]
  ! DIFERENT        [ shift and go to state 66 ]
  ! MINOR           [ shift and go to state 67 ]
  ! MINOREQUAL      [ shift and go to state 68 ]
  ! GREATER         [ shift and go to state 69 ]
  ! GREATEREQUAL    [ shift and go to state 70 ]


state 92

    (43) relacional -> expression MINOREQUAL expression .
    (34) aritmetica -> expression . PLUS expression
    (35) aritmetica -> expression . BY expression
    (36) aritmetica -> expression . DIVIDED expression
    (37) aritmetica -> expression . LESS expression
    (38) aritmetica -> expression . MODUL expression
    (40) relacional -> expression . DEQUAL expression
    (41) relacional -> expression . DIFERENT expression
    (42) relacional -> expression . MINOR expression
    (43) relacional -> expression . MINOREQUAL expression
    (44) relacional -> expression . GREATER expression
    (45) relacional -> expression . GREATEREQUAL expression

    DEQUAL          reduce using rule 43 (relacional -> expression MINOREQUAL expression .)
    DIFERENT        reduce using rule 43 (relacional -> expression MINOREQUAL expression .)
    MINOR           reduce using rule 43 (relacional -> expression MINOREQUAL expression .)
    MINOREQUAL      reduce using rule 43 (relacional -> expression MINOREQUAL expression .)
    GREATER         reduce using rule 43 (relacional -> expression MINOREQUAL expression .)
    GREATEREQUAL    reduce using rule 43 (relacional -> expression MINOREQUAL expression .)
    CONSOLE         reduce using rule 43 (relacional -> expression MINOREQUAL expression .)
    RVAR            reduce using rule 43 (relacional -> expression MINOREQUAL expression .)
    RCONST          reduce using rule 43 (relacional -> expression MINOREQUAL expression .)
    ID              reduce using rule 43 (relacional -> expression MINOREQUAL expression .)
    RIF             reduce using rule 43 (relacional -> expression MINOREQUAL expression .)
    RWHILE          reduce using rule 43 (relacional -> expression MINOREQUAL expression .)
    RFOR            reduce using rule 43 (relacional -> expression MINOREQUAL expression .)
    $end            reduce using rule 43 (relacional -> expression MINOREQUAL expression .)
    LLAVEC          reduce using rule 43 (relacional -> expression MINOREQUAL expression .)
    PARC            reduce using rule 43 (relacional -> expression MINOREQUAL expression .)
    SEMICOLON       reduce using rule 43 (relacional -> expression MINOREQUAL expression .)
    PLUS            shift and go to state 60
    BY              shift and go to state 61
    DIVIDED         shift and go to state 62
    LESS            shift and go to state 63
    MODUL           shift and go to state 64

  ! PLUS            [ reduce using rule 43 (relacional -> expression MINOREQUAL expression .) ]
  ! BY              [ reduce using rule 43 (relacional -> expression MINOREQUAL expression .) ]
  ! DIVIDED         [ reduce using rule 43 (relacional -> expression MINOREQUAL expression .) ]
  ! LESS            [ reduce using rule 43 (relacional -> expression MINOREQUAL expression .) ]
  ! MODUL           [ reduce using rule 43 (relacional -> expression MINOREQUAL expression .) ]
  ! DEQUAL          [ shift and go to state 65 ]
  ! DIFERENT        [ shift and go to state 66 ]
  ! MINOR           [ shift and go to state 67 ]
  ! MINOREQUAL      [ shift and go to state 68 ]
  ! GREATER         [ shift and go to state 69 ]
  ! GREATEREQUAL    [ shift and go to state 70 ]


state 93

    (44) relacional -> expression GREATER expression .
    (34) aritmetica -> expression . PLUS expression
    (35) aritmetica -> expression . BY expression
    (36) aritmetica -> expression . DIVIDED expression
    (37) aritmetica -> expression . LESS expression
    (38) aritmetica -> expression . MODUL expression
    (40) relacional -> expression . DEQUAL expression
    (41) relacional -> expression . DIFERENT expression
    (42) relacional -> expression . MINOR expression
    (43) relacional -> expression . MINOREQUAL expression
    (44) relacional -> expression . GREATER expression
    (45) relacional -> expression . GREATEREQUAL expression

    DEQUAL          reduce using rule 44 (relacional -> expression GREATER expression .)
    DIFERENT        reduce using rule 44 (relacional -> expression GREATER expression .)
    MINOR           reduce using rule 44 (relacional -> expression GREATER expression .)
    MINOREQUAL      reduce using rule 44 (relacional -> expression GREATER expression .)
    GREATER         reduce using rule 44 (relacional -> expression GREATER expression .)
    GREATEREQUAL    reduce using rule 44 (relacional -> expression GREATER expression .)
    CONSOLE         reduce using rule 44 (relacional -> expression GREATER expression .)
    RVAR            reduce using rule 44 (relacional -> expression GREATER expression .)
    RCONST          reduce using rule 44 (relacional -> expression GREATER expression .)
    ID              reduce using rule 44 (relacional -> expression GREATER expression .)
    RIF             reduce using rule 44 (relacional -> expression GREATER expression .)
    RWHILE          reduce using rule 44 (relacional -> expression GREATER expression .)
    RFOR            reduce using rule 44 (relacional -> expression GREATER expression .)
    $end            reduce using rule 44 (relacional -> expression GREATER expression .)
    LLAVEC          reduce using rule 44 (relacional -> expression GREATER expression .)
    PARC            reduce using rule 44 (relacional -> expression GREATER expression .)
    SEMICOLON       reduce using rule 44 (relacional -> expression GREATER expression .)
    PLUS            shift and go to state 60
    BY              shift and go to state 61
    DIVIDED         shift and go to state 62
    LESS            shift and go to state 63
    MODUL           shift and go to state 64

  ! PLUS            [ reduce using rule 44 (relacional -> expression GREATER expression .) ]
  ! BY              [ reduce using rule 44 (relacional -> expression GREATER expression .) ]
  ! DIVIDED         [ reduce using rule 44 (relacional -> expression GREATER expression .) ]
  ! LESS            [ reduce using rule 44 (relacional -> expression GREATER expression .) ]
  ! MODUL           [ reduce using rule 44 (relacional -> expression GREATER expression .) ]
  ! DEQUAL          [ shift and go to state 65 ]
  ! DIFERENT        [ shift and go to state 66 ]
  ! MINOR           [ shift and go to state 67 ]
  ! MINOREQUAL      [ shift and go to state 68 ]
  ! GREATER         [ shift and go to state 69 ]
  ! GREATEREQUAL    [ shift and go to state 70 ]


state 94

    (45) relacional -> expression GREATEREQUAL expression .
    (34) aritmetica -> expression . PLUS expression
    (35) aritmetica -> expression . BY expression
    (36) aritmetica -> expression . DIVIDED expression
    (37) aritmetica -> expression . LESS expression
    (38) aritmetica -> expression . MODUL expression
    (40) relacional -> expression . DEQUAL expression
    (41) relacional -> expression . DIFERENT expression
    (42) relacional -> expression . MINOR expression
    (43) relacional -> expression . MINOREQUAL expression
    (44) relacional -> expression . GREATER expression
    (45) relacional -> expression . GREATEREQUAL expression

    DEQUAL          reduce using rule 45 (relacional -> expression GREATEREQUAL expression .)
    DIFERENT        reduce using rule 45 (relacional -> expression GREATEREQUAL expression .)
    MINOR           reduce using rule 45 (relacional -> expression GREATEREQUAL expression .)
    MINOREQUAL      reduce using rule 45 (relacional -> expression GREATEREQUAL expression .)
    GREATER         reduce using rule 45 (relacional -> expression GREATEREQUAL expression .)
    GREATEREQUAL    reduce using rule 45 (relacional -> expression GREATEREQUAL expression .)
    CONSOLE         reduce using rule 45 (relacional -> expression GREATEREQUAL expression .)
    RVAR            reduce using rule 45 (relacional -> expression GREATEREQUAL expression .)
    RCONST          reduce using rule 45 (relacional -> expression GREATEREQUAL expression .)
    ID              reduce using rule 45 (relacional -> expression GREATEREQUAL expression .)
    RIF             reduce using rule 45 (relacional -> expression GREATEREQUAL expression .)
    RWHILE          reduce using rule 45 (relacional -> expression GREATEREQUAL expression .)
    RFOR            reduce using rule 45 (relacional -> expression GREATEREQUAL expression .)
    $end            reduce using rule 45 (relacional -> expression GREATEREQUAL expression .)
    LLAVEC          reduce using rule 45 (relacional -> expression GREATEREQUAL expression .)
    PARC            reduce using rule 45 (relacional -> expression GREATEREQUAL expression .)
    SEMICOLON       reduce using rule 45 (relacional -> expression GREATEREQUAL expression .)
    PLUS            shift and go to state 60
    BY              shift and go to state 61
    DIVIDED         shift and go to state 62
    LESS            shift and go to state 63
    MODUL           shift and go to state 64

  ! PLUS            [ reduce using rule 45 (relacional -> expression GREATEREQUAL expression .) ]
  ! BY              [ reduce using rule 45 (relacional -> expression GREATEREQUAL expression .) ]
  ! DIVIDED         [ reduce using rule 45 (relacional -> expression GREATEREQUAL expression .) ]
  ! LESS            [ reduce using rule 45 (relacional -> expression GREATEREQUAL expression .) ]
  ! MODUL           [ reduce using rule 45 (relacional -> expression GREATEREQUAL expression .) ]
  ! DEQUAL          [ shift and go to state 65 ]
  ! DIFERENT        [ shift and go to state 66 ]
  ! MINOR           [ shift and go to state 67 ]
  ! MINOREQUAL      [ shift and go to state 68 ]
  ! GREATER         [ shift and go to state 69 ]
  ! GREATEREQUAL    [ shift and go to state 70 ]


state 95

    (46) logica -> boolean AND boolean .

    PLUS            reduce using rule 46 (logica -> boolean AND boolean .)
    BY              reduce using rule 46 (logica -> boolean AND boolean .)
    DIVIDED         reduce using rule 46 (logica -> boolean AND boolean .)
    LESS            reduce using rule 46 (logica -> boolean AND boolean .)
    MODUL           reduce using rule 46 (logica -> boolean AND boolean .)
    DEQUAL          reduce using rule 46 (logica -> boolean AND boolean .)
    DIFERENT        reduce using rule 46 (logica -> boolean AND boolean .)
    MINOR           reduce using rule 46 (logica -> boolean AND boolean .)
    MINOREQUAL      reduce using rule 46 (logica -> boolean AND boolean .)
    GREATER         reduce using rule 46 (logica -> boolean AND boolean .)
    GREATEREQUAL    reduce using rule 46 (logica -> boolean AND boolean .)
    CONSOLE         reduce using rule 46 (logica -> boolean AND boolean .)
    RVAR            reduce using rule 46 (logica -> boolean AND boolean .)
    RCONST          reduce using rule 46 (logica -> boolean AND boolean .)
    ID              reduce using rule 46 (logica -> boolean AND boolean .)
    RIF             reduce using rule 46 (logica -> boolean AND boolean .)
    RWHILE          reduce using rule 46 (logica -> boolean AND boolean .)
    RFOR            reduce using rule 46 (logica -> boolean AND boolean .)
    $end            reduce using rule 46 (logica -> boolean AND boolean .)
    LLAVEC          reduce using rule 46 (logica -> boolean AND boolean .)
    PARC            reduce using rule 46 (logica -> boolean AND boolean .)
    SEMICOLON       reduce using rule 46 (logica -> boolean AND boolean .)


state 96

    (47) logica -> boolean OR boolean .

    PLUS            reduce using rule 47 (logica -> boolean OR boolean .)
    BY              reduce using rule 47 (logica -> boolean OR boolean .)
    DIVIDED         reduce using rule 47 (logica -> boolean OR boolean .)
    LESS            reduce using rule 47 (logica -> boolean OR boolean .)
    MODUL           reduce using rule 47 (logica -> boolean OR boolean .)
    DEQUAL          reduce using rule 47 (logica -> boolean OR boolean .)
    DIFERENT        reduce using rule 47 (logica -> boolean OR boolean .)
    MINOR           reduce using rule 47 (logica -> boolean OR boolean .)
    MINOREQUAL      reduce using rule 47 (logica -> boolean OR boolean .)
    GREATER         reduce using rule 47 (logica -> boolean OR boolean .)
    GREATEREQUAL    reduce using rule 47 (logica -> boolean OR boolean .)
    CONSOLE         reduce using rule 47 (logica -> boolean OR boolean .)
    RVAR            reduce using rule 47 (logica -> boolean OR boolean .)
    RCONST          reduce using rule 47 (logica -> boolean OR boolean .)
    ID              reduce using rule 47 (logica -> boolean OR boolean .)
    RIF             reduce using rule 47 (logica -> boolean OR boolean .)
    RWHILE          reduce using rule 47 (logica -> boolean OR boolean .)
    RFOR            reduce using rule 47 (logica -> boolean OR boolean .)
    $end            reduce using rule 47 (logica -> boolean OR boolean .)
    LLAVEC          reduce using rule 47 (logica -> boolean OR boolean .)
    PARC            reduce using rule 47 (logica -> boolean OR boolean .)
    SEMICOLON       reduce using rule 47 (logica -> boolean OR boolean .)


state 97

    (15) declareConst -> RCONST ID DOUBLEDOT type EQUAL . expression
    (28) expression -> . primitivo
    (29) expression -> . aritmetica
    (30) expression -> . relacional
    (31) expression -> . logica
    (32) expression -> . id_
    (49) primitivo -> . NUMBER
    (50) primitivo -> . FLOAT
    (51) primitivo -> . STRING
    (52) primitivo -> . boolean
    (34) aritmetica -> . expression PLUS expression
    (35) aritmetica -> . expression BY expression
    (36) aritmetica -> . expression DIVIDED expression
    (37) aritmetica -> . expression LESS expression
    (38) aritmetica -> . expression MODUL expression
    (39) aritmetica -> . LESS expression
    (40) relacional -> . expression DEQUAL expression
    (41) relacional -> . expression DIFERENT expression
    (42) relacional -> . expression MINOR expression
    (43) relacional -> . expression MINOREQUAL expression
    (44) relacional -> . expression GREATER expression
    (45) relacional -> . expression GREATEREQUAL expression
    (46) logica -> . boolean AND boolean
    (47) logica -> . boolean OR boolean
    (48) logica -> . NOT boolean
    (33) id_ -> . ID
    (53) boolean -> . TRUE
    (54) boolean -> . FALSE

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    LESS            shift and go to state 42
    NOT             shift and go to state 43
    ID              shift and go to state 31
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45

    expression                     shift and go to state 104
    primitivo                      shift and go to state 33
    aritmetica                     shift and go to state 34
    relacional                     shift and go to state 35
    logica                         shift and go to state 36
    id_                            shift and go to state 37
    boolean                        shift and go to state 41

state 98

    (21) if_else -> RIF PARA expression PARC LLAVEA . instrucciones LLAVEC else
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declare
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . if_else
    (9) instruccion -> . while_
    (10) instruccion -> . for_
    (11) print -> . CONSOLE DOT LOG PARA expression PARC
    (12) declare -> . RVAR ID DOUBLEDOT type EQUAL expression
    (13) declare -> . RVAR ID EQUAL expression
    (14) declare -> . RVAR ID DOUBLEDOT type
    (15) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (16) declareConst -> . RCONST ID EQUAL expression
    (17) declareConst -> . RCONST ID DOUBLEDOT type
    (18) assignVar -> . ID EQUAL expression
    (19) assignVar -> . ID PLUS EQUAL expression
    (20) assignVar -> . ID LESS EQUAL expression
    (21) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (25) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (26) for_ -> . RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (27) for_ -> . RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC

    CONSOLE         shift and go to state 11
    RVAR            shift and go to state 12
    RCONST          shift and go to state 14
    ID              shift and go to state 13
    RIF             shift and go to state 15
    RWHILE          shift and go to state 16
    RFOR            shift and go to state 17

    instrucciones                  shift and go to state 105
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declare                        shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    if_else                        shift and go to state 8
    while_                         shift and go to state 9
    for_                           shift and go to state 10

state 99

    (25) while_ -> RWHILE PARA expression PARC LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declare
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . if_else
    (9) instruccion -> . while_
    (10) instruccion -> . for_
    (11) print -> . CONSOLE DOT LOG PARA expression PARC
    (12) declare -> . RVAR ID DOUBLEDOT type EQUAL expression
    (13) declare -> . RVAR ID EQUAL expression
    (14) declare -> . RVAR ID DOUBLEDOT type
    (15) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (16) declareConst -> . RCONST ID EQUAL expression
    (17) declareConst -> . RCONST ID DOUBLEDOT type
    (18) assignVar -> . ID EQUAL expression
    (19) assignVar -> . ID PLUS EQUAL expression
    (20) assignVar -> . ID LESS EQUAL expression
    (21) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (25) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (26) for_ -> . RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (27) for_ -> . RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC

    CONSOLE         shift and go to state 11
    RVAR            shift and go to state 12
    RCONST          shift and go to state 14
    ID              shift and go to state 13
    RIF             shift and go to state 15
    RWHILE          shift and go to state 16
    RFOR            shift and go to state 17

    instrucciones                  shift and go to state 106
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declare                        shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    if_else                        shift and go to state 8
    while_                         shift and go to state 9
    for_                           shift and go to state 10

state 100

    (26) for_ -> RFOR PARA declare SEMICOLON relacional . SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (27) for_ -> RFOR PARA declare SEMICOLON relacional . SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (30) expression -> relacional .

    SEMICOLON       shift and go to state 107
    DEQUAL          reduce using rule 30 (expression -> relacional .)
    DIFERENT        reduce using rule 30 (expression -> relacional .)
    MINOR           reduce using rule 30 (expression -> relacional .)
    MINOREQUAL      reduce using rule 30 (expression -> relacional .)
    GREATER         reduce using rule 30 (expression -> relacional .)
    GREATEREQUAL    reduce using rule 30 (expression -> relacional .)
    PLUS            reduce using rule 30 (expression -> relacional .)
    BY              reduce using rule 30 (expression -> relacional .)
    DIVIDED         reduce using rule 30 (expression -> relacional .)
    LESS            reduce using rule 30 (expression -> relacional .)
    MODUL           reduce using rule 30 (expression -> relacional .)


state 101

    (40) relacional -> expression . DEQUAL expression
    (41) relacional -> expression . DIFERENT expression
    (42) relacional -> expression . MINOR expression
    (43) relacional -> expression . MINOREQUAL expression
    (44) relacional -> expression . GREATER expression
    (45) relacional -> expression . GREATEREQUAL expression
    (34) aritmetica -> expression . PLUS expression
    (35) aritmetica -> expression . BY expression
    (36) aritmetica -> expression . DIVIDED expression
    (37) aritmetica -> expression . LESS expression
    (38) aritmetica -> expression . MODUL expression

    DEQUAL          shift and go to state 65
    DIFERENT        shift and go to state 66
    MINOR           shift and go to state 67
    MINOREQUAL      shift and go to state 68
    GREATER         shift and go to state 69
    GREATEREQUAL    shift and go to state 70
    PLUS            shift and go to state 60
    BY              shift and go to state 61
    DIVIDED         shift and go to state 62
    LESS            shift and go to state 63
    MODUL           shift and go to state 64


state 102

    (11) print -> CONSOLE DOT LOG PARA expression PARC .

    CONSOLE         reduce using rule 11 (print -> CONSOLE DOT LOG PARA expression PARC .)
    RVAR            reduce using rule 11 (print -> CONSOLE DOT LOG PARA expression PARC .)
    RCONST          reduce using rule 11 (print -> CONSOLE DOT LOG PARA expression PARC .)
    ID              reduce using rule 11 (print -> CONSOLE DOT LOG PARA expression PARC .)
    RIF             reduce using rule 11 (print -> CONSOLE DOT LOG PARA expression PARC .)
    RWHILE          reduce using rule 11 (print -> CONSOLE DOT LOG PARA expression PARC .)
    RFOR            reduce using rule 11 (print -> CONSOLE DOT LOG PARA expression PARC .)
    $end            reduce using rule 11 (print -> CONSOLE DOT LOG PARA expression PARC .)
    LLAVEC          reduce using rule 11 (print -> CONSOLE DOT LOG PARA expression PARC .)


state 103

    (12) declare -> RVAR ID DOUBLEDOT type EQUAL expression .
    (34) aritmetica -> expression . PLUS expression
    (35) aritmetica -> expression . BY expression
    (36) aritmetica -> expression . DIVIDED expression
    (37) aritmetica -> expression . LESS expression
    (38) aritmetica -> expression . MODUL expression
    (40) relacional -> expression . DEQUAL expression
    (41) relacional -> expression . DIFERENT expression
    (42) relacional -> expression . MINOR expression
    (43) relacional -> expression . MINOREQUAL expression
    (44) relacional -> expression . GREATER expression
    (45) relacional -> expression . GREATEREQUAL expression

    CONSOLE         reduce using rule 12 (declare -> RVAR ID DOUBLEDOT type EQUAL expression .)
    RVAR            reduce using rule 12 (declare -> RVAR ID DOUBLEDOT type EQUAL expression .)
    RCONST          reduce using rule 12 (declare -> RVAR ID DOUBLEDOT type EQUAL expression .)
    ID              reduce using rule 12 (declare -> RVAR ID DOUBLEDOT type EQUAL expression .)
    RIF             reduce using rule 12 (declare -> RVAR ID DOUBLEDOT type EQUAL expression .)
    RWHILE          reduce using rule 12 (declare -> RVAR ID DOUBLEDOT type EQUAL expression .)
    RFOR            reduce using rule 12 (declare -> RVAR ID DOUBLEDOT type EQUAL expression .)
    $end            reduce using rule 12 (declare -> RVAR ID DOUBLEDOT type EQUAL expression .)
    SEMICOLON       reduce using rule 12 (declare -> RVAR ID DOUBLEDOT type EQUAL expression .)
    LLAVEC          reduce using rule 12 (declare -> RVAR ID DOUBLEDOT type EQUAL expression .)
    PLUS            shift and go to state 60
    BY              shift and go to state 61
    DIVIDED         shift and go to state 62
    LESS            shift and go to state 63
    MODUL           shift and go to state 64
    DEQUAL          shift and go to state 65
    DIFERENT        shift and go to state 66
    MINOR           shift and go to state 67
    MINOREQUAL      shift and go to state 68
    GREATER         shift and go to state 69
    GREATEREQUAL    shift and go to state 70


state 104

    (15) declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .
    (34) aritmetica -> expression . PLUS expression
    (35) aritmetica -> expression . BY expression
    (36) aritmetica -> expression . DIVIDED expression
    (37) aritmetica -> expression . LESS expression
    (38) aritmetica -> expression . MODUL expression
    (40) relacional -> expression . DEQUAL expression
    (41) relacional -> expression . DIFERENT expression
    (42) relacional -> expression . MINOR expression
    (43) relacional -> expression . MINOREQUAL expression
    (44) relacional -> expression . GREATER expression
    (45) relacional -> expression . GREATEREQUAL expression

    CONSOLE         reduce using rule 15 (declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .)
    RVAR            reduce using rule 15 (declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .)
    RCONST          reduce using rule 15 (declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .)
    ID              reduce using rule 15 (declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .)
    RIF             reduce using rule 15 (declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .)
    RWHILE          reduce using rule 15 (declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .)
    RFOR            reduce using rule 15 (declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .)
    $end            reduce using rule 15 (declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .)
    LLAVEC          reduce using rule 15 (declareConst -> RCONST ID DOUBLEDOT type EQUAL expression .)
    PLUS            shift and go to state 60
    BY              shift and go to state 61
    DIVIDED         shift and go to state 62
    LESS            shift and go to state 63
    MODUL           shift and go to state 64
    DEQUAL          shift and go to state 65
    DIFERENT        shift and go to state 66
    MINOR           shift and go to state 67
    MINOREQUAL      shift and go to state 68
    GREATER         shift and go to state 69
    GREATEREQUAL    shift and go to state 70


state 105

    (21) if_else -> RIF PARA expression PARC LLAVEA instrucciones . LLAVEC else
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declare
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . if_else
    (9) instruccion -> . while_
    (10) instruccion -> . for_
    (11) print -> . CONSOLE DOT LOG PARA expression PARC
    (12) declare -> . RVAR ID DOUBLEDOT type EQUAL expression
    (13) declare -> . RVAR ID EQUAL expression
    (14) declare -> . RVAR ID DOUBLEDOT type
    (15) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (16) declareConst -> . RCONST ID EQUAL expression
    (17) declareConst -> . RCONST ID DOUBLEDOT type
    (18) assignVar -> . ID EQUAL expression
    (19) assignVar -> . ID PLUS EQUAL expression
    (20) assignVar -> . ID LESS EQUAL expression
    (21) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (25) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (26) for_ -> . RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (27) for_ -> . RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC

    LLAVEC          shift and go to state 108
    CONSOLE         shift and go to state 11
    RVAR            shift and go to state 12
    RCONST          shift and go to state 14
    ID              shift and go to state 13
    RIF             shift and go to state 15
    RWHILE          shift and go to state 16
    RFOR            shift and go to state 17

    instruccion                    shift and go to state 18
    print                          shift and go to state 4
    declare                        shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    if_else                        shift and go to state 8
    while_                         shift and go to state 9
    for_                           shift and go to state 10

state 106

    (25) while_ -> RWHILE PARA expression PARC LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declare
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . if_else
    (9) instruccion -> . while_
    (10) instruccion -> . for_
    (11) print -> . CONSOLE DOT LOG PARA expression PARC
    (12) declare -> . RVAR ID DOUBLEDOT type EQUAL expression
    (13) declare -> . RVAR ID EQUAL expression
    (14) declare -> . RVAR ID DOUBLEDOT type
    (15) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (16) declareConst -> . RCONST ID EQUAL expression
    (17) declareConst -> . RCONST ID DOUBLEDOT type
    (18) assignVar -> . ID EQUAL expression
    (19) assignVar -> . ID PLUS EQUAL expression
    (20) assignVar -> . ID LESS EQUAL expression
    (21) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (25) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (26) for_ -> . RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (27) for_ -> . RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC

    LLAVEC          shift and go to state 109
    CONSOLE         shift and go to state 11
    RVAR            shift and go to state 12
    RCONST          shift and go to state 14
    ID              shift and go to state 13
    RIF             shift and go to state 15
    RWHILE          shift and go to state 16
    RFOR            shift and go to state 17

    instruccion                    shift and go to state 18
    print                          shift and go to state 4
    declare                        shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    if_else                        shift and go to state 8
    while_                         shift and go to state 9
    for_                           shift and go to state 10

state 107

    (26) for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON . id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (27) for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON . id_ LESS LESS PARC LLAVEA instrucciones LLAVEC
    (33) id_ -> . ID

    ID              shift and go to state 31

    id_                            shift and go to state 110

state 108

    (21) if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC . else
    (22) else -> . RELSE LLAVEA instrucciones LLAVEC
    (23) else -> . RELSE if_else
    (24) else -> .

    RELSE           shift and go to state 112
    CONSOLE         reduce using rule 24 (else -> .)
    RVAR            reduce using rule 24 (else -> .)
    RCONST          reduce using rule 24 (else -> .)
    ID              reduce using rule 24 (else -> .)
    RIF             reduce using rule 24 (else -> .)
    RWHILE          reduce using rule 24 (else -> .)
    RFOR            reduce using rule 24 (else -> .)
    $end            reduce using rule 24 (else -> .)
    LLAVEC          reduce using rule 24 (else -> .)

    else                           shift and go to state 111

state 109

    (25) while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .

    CONSOLE         reduce using rule 25 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RVAR            reduce using rule 25 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RCONST          reduce using rule 25 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    ID              reduce using rule 25 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RIF             reduce using rule 25 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RWHILE          reduce using rule 25 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    RFOR            reduce using rule 25 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    $end            reduce using rule 25 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)
    LLAVEC          reduce using rule 25 (while_ -> RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC .)


state 110

    (26) for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ . PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (27) for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ . LESS LESS PARC LLAVEA instrucciones LLAVEC

    PLUS            shift and go to state 113
    LESS            shift and go to state 114


state 111

    (21) if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .

    CONSOLE         reduce using rule 21 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RVAR            reduce using rule 21 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RCONST          reduce using rule 21 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    ID              reduce using rule 21 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RIF             reduce using rule 21 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RWHILE          reduce using rule 21 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    RFOR            reduce using rule 21 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    $end            reduce using rule 21 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)
    LLAVEC          reduce using rule 21 (if_else -> RIF PARA expression PARC LLAVEA instrucciones LLAVEC else .)


state 112

    (22) else -> RELSE . LLAVEA instrucciones LLAVEC
    (23) else -> RELSE . if_else
    (21) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else

    LLAVEA          shift and go to state 115
    RIF             shift and go to state 15

    if_else                        shift and go to state 116

state 113

    (26) for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS . PLUS PARC LLAVEA instrucciones LLAVEC

    PLUS            shift and go to state 117


state 114

    (27) for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS . LESS PARC LLAVEA instrucciones LLAVEC

    LESS            shift and go to state 118


state 115

    (22) else -> RELSE LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declare
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . if_else
    (9) instruccion -> . while_
    (10) instruccion -> . for_
    (11) print -> . CONSOLE DOT LOG PARA expression PARC
    (12) declare -> . RVAR ID DOUBLEDOT type EQUAL expression
    (13) declare -> . RVAR ID EQUAL expression
    (14) declare -> . RVAR ID DOUBLEDOT type
    (15) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (16) declareConst -> . RCONST ID EQUAL expression
    (17) declareConst -> . RCONST ID DOUBLEDOT type
    (18) assignVar -> . ID EQUAL expression
    (19) assignVar -> . ID PLUS EQUAL expression
    (20) assignVar -> . ID LESS EQUAL expression
    (21) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (25) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (26) for_ -> . RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (27) for_ -> . RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC

    CONSOLE         shift and go to state 11
    RVAR            shift and go to state 12
    RCONST          shift and go to state 14
    ID              shift and go to state 13
    RIF             shift and go to state 15
    RWHILE          shift and go to state 16
    RFOR            shift and go to state 17

    instrucciones                  shift and go to state 119
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declare                        shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    if_else                        shift and go to state 8
    while_                         shift and go to state 9
    for_                           shift and go to state 10

state 116

    (23) else -> RELSE if_else .

    CONSOLE         reduce using rule 23 (else -> RELSE if_else .)
    RVAR            reduce using rule 23 (else -> RELSE if_else .)
    RCONST          reduce using rule 23 (else -> RELSE if_else .)
    ID              reduce using rule 23 (else -> RELSE if_else .)
    RIF             reduce using rule 23 (else -> RELSE if_else .)
    RWHILE          reduce using rule 23 (else -> RELSE if_else .)
    RFOR            reduce using rule 23 (else -> RELSE if_else .)
    $end            reduce using rule 23 (else -> RELSE if_else .)
    LLAVEC          reduce using rule 23 (else -> RELSE if_else .)


state 117

    (26) for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS . PARC LLAVEA instrucciones LLAVEC

    PARC            shift and go to state 120


state 118

    (27) for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS . PARC LLAVEA instrucciones LLAVEC

    PARC            shift and go to state 121


state 119

    (22) else -> RELSE LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declare
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . if_else
    (9) instruccion -> . while_
    (10) instruccion -> . for_
    (11) print -> . CONSOLE DOT LOG PARA expression PARC
    (12) declare -> . RVAR ID DOUBLEDOT type EQUAL expression
    (13) declare -> . RVAR ID EQUAL expression
    (14) declare -> . RVAR ID DOUBLEDOT type
    (15) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (16) declareConst -> . RCONST ID EQUAL expression
    (17) declareConst -> . RCONST ID DOUBLEDOT type
    (18) assignVar -> . ID EQUAL expression
    (19) assignVar -> . ID PLUS EQUAL expression
    (20) assignVar -> . ID LESS EQUAL expression
    (21) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (25) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (26) for_ -> . RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (27) for_ -> . RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC

    LLAVEC          shift and go to state 122
    CONSOLE         shift and go to state 11
    RVAR            shift and go to state 12
    RCONST          shift and go to state 14
    ID              shift and go to state 13
    RIF             shift and go to state 15
    RWHILE          shift and go to state 16
    RFOR            shift and go to state 17

    instruccion                    shift and go to state 18
    print                          shift and go to state 4
    declare                        shift and go to state 5
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    if_else                        shift and go to state 8
    while_                         shift and go to state 9
    for_                           shift and go to state 10

state 120

    (26) for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC . LLAVEA instrucciones LLAVEC

    LLAVEA          shift and go to state 123


state 121

    (27) for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC . LLAVEA instrucciones LLAVEC

    LLAVEA          shift and go to state 124


state 122

    (22) else -> RELSE LLAVEA instrucciones LLAVEC .

    CONSOLE         reduce using rule 22 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RVAR            reduce using rule 22 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RCONST          reduce using rule 22 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    ID              reduce using rule 22 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RIF             reduce using rule 22 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RWHILE          reduce using rule 22 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    RFOR            reduce using rule 22 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    $end            reduce using rule 22 (else -> RELSE LLAVEA instrucciones LLAVEC .)
    LLAVEC          reduce using rule 22 (else -> RELSE LLAVEA instrucciones LLAVEC .)


state 123

    (26) for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declare
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . if_else
    (9) instruccion -> . while_
    (10) instruccion -> . for_
    (11) print -> . CONSOLE DOT LOG PARA expression PARC
    (12) declare -> . RVAR ID DOUBLEDOT type EQUAL expression
    (13) declare -> . RVAR ID EQUAL expression
    (14) declare -> . RVAR ID DOUBLEDOT type
    (15) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (16) declareConst -> . RCONST ID EQUAL expression
    (17) declareConst -> . RCONST ID DOUBLEDOT type
    (18) assignVar -> . ID EQUAL expression
    (19) assignVar -> . ID PLUS EQUAL expression
    (20) assignVar -> . ID LESS EQUAL expression
    (21) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (25) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (26) for_ -> . RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (27) for_ -> . RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC

    CONSOLE         shift and go to state 11
    RVAR            shift and go to state 12
    RCONST          shift and go to state 14
    ID              shift and go to state 13
    RIF             shift and go to state 15
    RWHILE          shift and go to state 16
    RFOR            shift and go to state 17

    declare                        shift and go to state 5
    instrucciones                  shift and go to state 125
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    if_else                        shift and go to state 8
    while_                         shift and go to state 9
    for_                           shift and go to state 10

state 124

    (27) for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA . instrucciones LLAVEC
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declare
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . if_else
    (9) instruccion -> . while_
    (10) instruccion -> . for_
    (11) print -> . CONSOLE DOT LOG PARA expression PARC
    (12) declare -> . RVAR ID DOUBLEDOT type EQUAL expression
    (13) declare -> . RVAR ID EQUAL expression
    (14) declare -> . RVAR ID DOUBLEDOT type
    (15) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (16) declareConst -> . RCONST ID EQUAL expression
    (17) declareConst -> . RCONST ID DOUBLEDOT type
    (18) assignVar -> . ID EQUAL expression
    (19) assignVar -> . ID PLUS EQUAL expression
    (20) assignVar -> . ID LESS EQUAL expression
    (21) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (25) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (26) for_ -> . RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (27) for_ -> . RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC

    CONSOLE         shift and go to state 11
    RVAR            shift and go to state 12
    RCONST          shift and go to state 14
    ID              shift and go to state 13
    RIF             shift and go to state 15
    RWHILE          shift and go to state 16
    RFOR            shift and go to state 17

    declare                        shift and go to state 5
    instrucciones                  shift and go to state 126
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    if_else                        shift and go to state 8
    while_                         shift and go to state 9
    for_                           shift and go to state 10

state 125

    (26) for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declare
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . if_else
    (9) instruccion -> . while_
    (10) instruccion -> . for_
    (11) print -> . CONSOLE DOT LOG PARA expression PARC
    (12) declare -> . RVAR ID DOUBLEDOT type EQUAL expression
    (13) declare -> . RVAR ID EQUAL expression
    (14) declare -> . RVAR ID DOUBLEDOT type
    (15) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (16) declareConst -> . RCONST ID EQUAL expression
    (17) declareConst -> . RCONST ID DOUBLEDOT type
    (18) assignVar -> . ID EQUAL expression
    (19) assignVar -> . ID PLUS EQUAL expression
    (20) assignVar -> . ID LESS EQUAL expression
    (21) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (25) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (26) for_ -> . RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (27) for_ -> . RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC

    LLAVEC          shift and go to state 127
    CONSOLE         shift and go to state 11
    RVAR            shift and go to state 12
    RCONST          shift and go to state 14
    ID              shift and go to state 13
    RIF             shift and go to state 15
    RWHILE          shift and go to state 16
    RFOR            shift and go to state 17

    declare                        shift and go to state 5
    instruccion                    shift and go to state 18
    print                          shift and go to state 4
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    if_else                        shift and go to state 8
    while_                         shift and go to state 9
    for_                           shift and go to state 10

state 126

    (27) for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones . LLAVEC
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . declare
    (6) instruccion -> . declareConst
    (7) instruccion -> . assignVar
    (8) instruccion -> . if_else
    (9) instruccion -> . while_
    (10) instruccion -> . for_
    (11) print -> . CONSOLE DOT LOG PARA expression PARC
    (12) declare -> . RVAR ID DOUBLEDOT type EQUAL expression
    (13) declare -> . RVAR ID EQUAL expression
    (14) declare -> . RVAR ID DOUBLEDOT type
    (15) declareConst -> . RCONST ID DOUBLEDOT type EQUAL expression
    (16) declareConst -> . RCONST ID EQUAL expression
    (17) declareConst -> . RCONST ID DOUBLEDOT type
    (18) assignVar -> . ID EQUAL expression
    (19) assignVar -> . ID PLUS EQUAL expression
    (20) assignVar -> . ID LESS EQUAL expression
    (21) if_else -> . RIF PARA expression PARC LLAVEA instrucciones LLAVEC else
    (25) while_ -> . RWHILE PARA expression PARC LLAVEA instrucciones LLAVEC
    (26) for_ -> . RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC
    (27) for_ -> . RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC

    LLAVEC          shift and go to state 128
    CONSOLE         shift and go to state 11
    RVAR            shift and go to state 12
    RCONST          shift and go to state 14
    ID              shift and go to state 13
    RIF             shift and go to state 15
    RWHILE          shift and go to state 16
    RFOR            shift and go to state 17

    declare                        shift and go to state 5
    instruccion                    shift and go to state 18
    print                          shift and go to state 4
    declareConst                   shift and go to state 6
    assignVar                      shift and go to state 7
    if_else                        shift and go to state 8
    while_                         shift and go to state 9
    for_                           shift and go to state 10

state 127

    (26) for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .

    CONSOLE         reduce using rule 26 (for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RVAR            reduce using rule 26 (for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RCONST          reduce using rule 26 (for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    ID              reduce using rule 26 (for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RIF             reduce using rule 26 (for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RWHILE          reduce using rule 26 (for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    RFOR            reduce using rule 26 (for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    $end            reduce using rule 26 (for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)
    LLAVEC          reduce using rule 26 (for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ PLUS PLUS PARC LLAVEA instrucciones LLAVEC .)


state 128

    (27) for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .

    CONSOLE         reduce using rule 27 (for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RVAR            reduce using rule 27 (for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RCONST          reduce using rule 27 (for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    ID              reduce using rule 27 (for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RIF             reduce using rule 27 (for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RWHILE          reduce using rule 27 (for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    RFOR            reduce using rule 27 (for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    $end            reduce using rule 27 (for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)
    LLAVEC          reduce using rule 27 (for_ -> RFOR PARA declare SEMICOLON relacional SEMICOLON id_ LESS LESS PARC LLAVEA instrucciones LLAVEC .)

